(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    976128,      19335]
NotebookOptionsPosition[    962913,      19186]
NotebookOutlinePosition[    963391,      19204]
CellTagsIndexPosition[    963348,      19201]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Mathematica  Introduction", "Title",
 CellChangeTimes->{{3.9400131020304327`*^9, 
  3.940013108913712*^9}},ExpressionUUID->"1a8e502a-d1b5-484e-9fed-\
8ce44277fbde"],

Cell["\<\
Let's skip the trivial arithmetic operations and instead cover native \
Mathematica operations.\
\>", "Text",
 CellChangeTimes->{{3.9400131194931602`*^9, 
  3.940013181752262*^9}},ExpressionUUID->"ae701f57-deca-497c-800b-\
a250dce92618"],

Cell[BoxData[
 RowBox[{"718", "/", "3"}]], "Input",
 CellChangeTimes->{{3.940012976409206*^9, 3.9400129772792053`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"59667597-3e29-4f9c-b9c3-38c876aee9ca"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"718", "/", "3"}], "]"}]], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.940012747447654*^9, 3.940012752998535*^9}, {
  3.940012943963389*^9, 
  3.9400129732989597`*^9}},ExpressionUUID->"7e4e09c0-6fc2-4f0b-b622-\
bd3219258734"],

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"718", "/", "3"}], ",", "5"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Rounded", " ", "to", " ", "5", " ", "digits"}], "*)"}]}]], "Input",\

 CellChangeTimes->{{3.940012985807126*^9, 3.940013005592174*^9}, {
  3.940013040992517*^9, 3.940013048827002*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"1eb4d0bf-6f33-484b-8986-38593509d25a"],

Cell["We can also get the number", "Text",
 CellChangeTimes->{{3.94001306377295*^9, 
  3.94001308140224*^9}},ExpressionUUID->"d1de9045-fbfb-4015-ac0f-\
5aecec2aae39"],

Cell["\<\
Using = prior to writing anything else in a code cell will prompt Wolfram \
natural language.\
\>", "Text",
 CellChangeTimes->{{3.940012868105822*^9, 
  3.940012940393641*^9}},ExpressionUUID->"daabd6ad-a072-4eeb-adbb-\
1471fdb5a436"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "717/3", Typeset`newq$$ = "717/3", 
   Typeset`chosen$$ = "717/3", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse["717/3", 
                  Defer[717/3], "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"717", "/", "3"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"717", "/", "3"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"717", "/", "3"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse["717/3", 
                    Defer[717/3], "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"717", "/", "3"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"717", "/", "3"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"717", "/", "3"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[1]:=",ExpressionUUID->"be26cc25-f1c0-4bcf-bbba-ffa01b7d8d92"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"air", "=", 
   RowBox[{"AirTemperatureData", "[", 
    TemplateBox[{"\"Bogot\[AAcute]\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"City\"", ",", 
          RowBox[{"{", 
            
            RowBox[{"\"Bogota\"", ",", "\"DistritoCapital\"", ",", 
              "\"Colombia\""}], "}"}]}], "]"}], 
      "\"Entity[\\\"City\\\", {\\\"Bogota\\\", \\\"DistritoCapital\\\", \
\\\"Colombia\\\"}]\"", "\"city\""},
     "Entity"], "]"}]}], ";"}], "\[IndentingNewLine]", "air"}], "Input",
 CellChangeTimes->{{3.940012843810398*^9, 3.940012852557922*^9}, {
  3.9400132973218822`*^9, 3.940013301902505*^9}, {3.940013428268358*^9, 
  3.9400134311577377`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"e10e8710-cf7e-4998-b28c-9cad2b194d5f"],

Cell["\<\
If  I define a variable, I can clear it using Clear[]. Namely,\
\>", "Text",
 CellChangeTimes->{{3.9400131982706013`*^9, 
  3.940013225125596*^9}},ExpressionUUID->"16dd3985-faae-4637-8ee4-\
1834814405ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"3", "a"}], "+", "1"}]}], "Input",
 CellChangeTimes->{{3.940013227960747*^9, 3.940013233638764*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"33867cb5-777b-430b-8736-ea2f639b936c"],

Cell[BoxData[
 RowBox[{"Clear", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.940013236117079*^9, 3.940013238533494*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"5b33b7dd-8710-4822-adc2-eb22b9a9e088"],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"a", "+", "5"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"a", "+", "9"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940013241584691*^9, 3.940013248408163*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"ecde266b-dce0-482e-9ece-a8031c232aeb"],

Cell["\<\
We  can  use the powerful solver of Mathematica, which can face almost any \
system of equations.\
\>", "Text",
 CellChangeTimes->{{3.940013260034915*^9, 
  3.9400132903814287`*^9}},ExpressionUUID->"30842ff3-717d-41c1-91bf-\
1560e430fd41"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"2", "x"}], "-", "7"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "x"}], "-", 
       RowBox[{"2", "y"}]}], "==", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940013276540495*^9, 3.9400132765409307`*^9}, {
  3.940013375751194*^9, 3.940013409533589*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"ec22c866-aae0-498f-ba37-ef4235fd4458"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"a", "*", 
      RowBox[{"x", "^", "2"}]}], "+", 
     RowBox[{"b", "*", "x"}], "+", "c"}], "==", " ", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.940013418003716*^9, 3.940013419413385*^9}, {
  3.9400134578601103`*^9, 3.9400134789014397`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"a4fa59e2-87ac-4d48-b6f9-f0dae4aa3bd8"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"a", "*", 
      RowBox[{"x", "^", "3"}]}], "+", 
     RowBox[{"b", "*", 
      RowBox[{"x", "^", "2"}]}], "+", 
     RowBox[{"c", "*", "x"}], "+", "d"}], "==", " ", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.94001348662677*^9, 3.9400134935206003`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"80f9a894-81ec-4d1f-8952-72b5a55ce511"],

Cell["And things that are not solvable can be numerically solved", "Text",
 CellChangeTimes->{{3.940013506748914*^9, 
  3.940013514616098*^9}},ExpressionUUID->"2619f320-7806-4c6f-99f0-\
290232356551"],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"6", 
      RowBox[{"x", "^", "6"}]}], "+", 
     RowBox[{"5", 
      RowBox[{"x", "^", "5"}]}], "+", 
     RowBox[{"4", 
      RowBox[{"x", "^", "4"}]}], "+", 
     RowBox[{"3", 
      RowBox[{"x", "^", "3"}]}], "+", 
     RowBox[{"2", 
      RowBox[{"x", "^", "2"}]}], "+", "x", "+", "0"}], "==", "0"}], ",", 
   "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9400135394827433`*^9, 3.940013578562634*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"e2b86315-4ab7-47e1-8e4d-c26285744023"],

Cell["We can plot", "Text",
 CellChangeTimes->{{3.94001358610859*^9, 
  3.940013596649248*^9}},ExpressionUUID->"0eb5cf22-06d0-4287-b4de-\
2487407c8409"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", "x"}], "-", "7"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940013604042994*^9, 3.940013605283279*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"bf4bf317-9eda-493b-a3c7-1b4f268e2930"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940013621071885*^9, 3.9400136228126707`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"af36d606-6be4-4d0e-8ee6-bd798264e42f"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"x", "*", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940013635514277*^9, 3.9400136355147133`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"6c4577dc-0fd2-46c9-a23c-8f8c08f47f10"],

Cell[BoxData[
 RowBox[{"RegionPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", 
      RowBox[{"y", "^", "2"}]}], "<=", "6"}], "&&", 
    RowBox[{"y", ">", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3.1"}], ",", "3.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3.1"}], ",", "3.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940014445868454*^9, 3.940014445868865*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"d16ecc82-9956-47a2-93c9-edeb8df1435c"],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "u", "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "*", "u"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940017770153852*^9, 3.94001777135853*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"077162e1-0cc7-41ae-ae6f-774b269d4570"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"x", "^", "2"}]}], ",", 
     RowBox[{"2", "*", "x"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.61"}], ",", "1.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940020403941553*^9, 3.940020403941728*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"33c7b958-77e1-48ac-a8fd-e3881e777e86"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "Plot torus", Typeset`newq$$ = "Plot torus",
    Typeset`chosen$$ = 
   "Entity[\"Surface\", \"Torus\"][EntityProperty[\"Surface\", \
\"Graphics3D\"]]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = True}, 
     
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse["Plot torus", 
               Defer[
                Entity["Surface", "Torus"][
                 EntityProperty["Surface", "Graphics3D"]]], "Fast parse"]; 
             Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Plot torus", 
                  Defer[
                   Entity["Surface", "Torus"][
                    EntityProperty["Surface", "Graphics3D"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"torus\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}], 
                    "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"", 
                    "\"surface\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"3\[Hyphen]D graphics\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Surface\"", ",", "\"Graphics3D\""}], "]"}], 
                    "\"EntityProperty[\\\"Surface\\\", \\\"Graphics3D\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"torus\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}], 
                    "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"", 
                    "\"surface\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"3\[Hyphen]D graphics\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Surface\"", ",", "\"Graphics3D\""}], "]"}], 
                    "\"EntityProperty[\\\"Surface\\\", \\\"Graphics3D\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    TemplateBox[{"\"torus\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}], 
                    "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"", 
                    "\"surface\""}, "Entity"], "[", 
                    TemplateBox[{"\"3\[Hyphen]D graphics\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Surface\"", ",", "\"Graphics3D\""}], "]"}], 
                    "\"EntityProperty[\\\"Surface\\\", \
\\\"Graphics3D\\\"]\""}, "EntityProperty"], "]"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse["Plot torus", 
                   Defer[
                    Entity["Surface", "Torus"][
                    EntityProperty["Surface", "Graphics3D"]]], "Fast parse"]; 
                 Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Plot torus", 
                    Defer[
                    Entity["Surface", "Torus"][
                    EntityProperty["Surface", "Graphics3D"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"torus\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}], 
                    "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"", 
                    "\"surface\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"3\[Hyphen]D graphics\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Surface\"", ",", "\"Graphics3D\""}], "]"}], 
                    "\"EntityProperty[\\\"Surface\\\", \\\"Graphics3D\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"torus\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}], 
                    "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"", 
                    "\"surface\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"3\[Hyphen]D graphics\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Surface\"", ",", "\"Graphics3D\""}], "]"}], 
                    "\"EntityProperty[\\\"Surface\\\", \\\"Graphics3D\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    TemplateBox[{"\"torus\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}], 
                    "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"", 
                    "\"surface\""}, "Entity"], "[", 
                    TemplateBox[{"\"3\[Hyphen]D graphics\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Surface\"", ",", "\"Graphics3D\""}], "]"}], 
                    "\"EntityProperty[\\\"Surface\\\", \
\\\"Graphics3D\\\"]\""}, "EntityProperty"], "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->
  "In[109]:=",ExpressionUUID->"1e7bd4a3-d71c-4415-bc09-6c7652175c49"],

Cell[BoxData[
 RowBox[{"VectorPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", " ", "y"}], "]"}], ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"x", " ", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "1", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940021110789998*^9, 3.940021110790699*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"273912a8-923e-4765-ac8f-d47a6465be06"],

Cell[BoxData[
 RowBox[{"VectorPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940021121243416*^9, 3.940021121243947*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"32cff306-a9df-42b0-bbfa-ae7ca7d47cd7"],

Cell[BoxData[
 RowBox[{"StreamPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"x", "^", "3"}], "+", "y"}], ",", 
     RowBox[{"x", "-", 
      RowBox[{"y", "^", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.94002114971019*^9, 3.9400211497110367`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"7913d553-f39f-422c-a783-a9d299e764c3"],

Cell[BoxData[
 RowBox[{"StreamPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SuperscriptBox["x", "3"], "+", "y"}], ",", 
     RowBox[{"x", "-", 
      SuperscriptBox["y", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[113]:=",ExpressionUUID->"7a994c36-895a-482f-9060-de2f239559fe"],

Cell[BoxData[
 RowBox[{"NumberLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Interval", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], "]"}], ",", 
    RowBox[{"Interval", "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", "\[Infinity]"}], "}"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.940021239029599*^9, 3.9400212507133827`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"9965c3dd-c53c-4374-a425-3da39e86c020"],

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.940021287487335*^9, 3.940021287488269*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"f2968e9c-ad47-4893-b02e-d1928637efb7"],

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", 
      RowBox[{"-", "5"}], ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"20", ",", "30", ",", "40"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.940021295273589*^9, 3.940021295274413*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"3aaf4eb9-14f8-49a4-9e4e-af3532bae3dc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25", ",", "25"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ArrayPlot", "[", "d", "]"}], ",", 
   RowBox[{"MatrixPlot", "[", "d", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.9400213086238832`*^9, 3.9400213337904377`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"4158b3a7-3f07-4b69-af32-483948ad4765"],

Cell[BoxData[
 RowBox[{"GeoGraphics", "[", 
  RowBox[{"Point", "[", 
   RowBox[{"GeoPosition", "[", 
    RowBox[{"{", 
     RowBox[{"4.7", ",", 
      RowBox[{"-", "74"}]}], "}"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.940021355873618*^9, 3.9400214160310087`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"79da3d03-9b90-4db6-95b5-b6c8310c0c8c"],

Cell[BoxData[{
 RowBox[{"cloudNum", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "10"}], "}"}], ",", "10"}], "]"}]}], "\n", 
 RowBox[{"{", 
  RowBox[{
  "3", ",", "10", ",", "4", ",", "7", ",", "7", ",", "1", ",", "5", ",", "8", 
   ",", "7", ",", "4"}], "}"}], "\n", 
 RowBox[{"WordCloud", "[", "cloudNum", "]"}]}], "Input",
 CellChangeTimes->{{3.940021461480728*^9, 3.940021462740102*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"06b39d1c-9a8b-473a-b315-954d600479a8"],

Cell[BoxData[
 RowBox[{"SphericalPlot3D", "[", 
  RowBox[{
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"5", " ", "\[Phi]"}], "]"}], " ", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"10", " ", "\[Theta]"}], "]"}], "/", "10"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940021517998304*^9, 3.940021517999198*^9}, {
  3.9400215485966473`*^9, 3.940021556438822*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"fdd75b7f-ea39-4e9e-a1e5-ab0b1ca812e9"],

Cell[BoxData[
 RowBox[{"ExampleData", "[", "\"\<Texture\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9400216460951767`*^9, 3.940021648265522*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"341e2e00-992a-458a-ad17-8c9138fa6e57"],

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Texture\>\"", ",", "\"\<HexagonalHoles\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9400218006448593`*^9, 3.940021804276395*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"4ef9bc96-b894-4ac4-9fd7-317a8c5e803c"],

Cell[BoxData[
 RowBox[{"SphericalPlot3D", "[", 
  RowBox[{
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"5", " ", "\[Phi]"}], "]"}], " ", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"10", " ", "\[Theta]"}], "]"}], "/", "10"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"Texture", "[", 
     RowBox[{"ExampleData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Texture\>\"", ",", "\"\<Water\>\""}], "}"}], "]"}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.94002166972409*^9, 3.9400217821179123`*^9}, 
   3.9400218180435467`*^9},
 CellLabel->
  "In[138]:=",ExpressionUUID->"def85e63-e9bc-4e69-bdcc-4bcb4d83ebf2"],

Cell[BoxData[
 RowBox[{"SphericalPlot3D", "[", 
  RowBox[{
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"5", " ", "\[Phi]"}], "]"}], " ", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"10", " ", "\[Theta]"}], "]"}], "/", "10"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"Texture", "[", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
l9uHfGtSekK7scVE6InXHu7donmnBVftQ/5xfGxuh6GbHtoxpdf7RuW0Kdzt
xEROjh80cuF5B7BSvjS/6+h1txzgU/nUPgNnHX7ggGdK5o4cu+rUG/tnnzeM
Hj5t851P9gncWzxs9Mw9ZY4WL8+eOnX1iQbA7MfKXjn5i6442nz+96B+Q/ff
dYA1d5ePnrjqlBNwvbZi5NiiY08cH15aOrRo02WHCPD7qybOX/fQifiUbJu/
5MAjx8Aqdq4sWnqg1AFhfTy8csbqi0646frO1Ys3FjvB8St7Fyw/cN+JdT06
tX7b6ZdO6uauf3afeO7soOrYuq2XXzmBtsrtK3ZceutE68rWrt910wmfPT+0
cd/5Mgc0VFWydfnGY3ccqNj3E2sXbzhW4eBKfcmBbcdvf3JMtez4wV3nnUPG
S09sOnD7g+NR3eW9O44728BrLm3Zd+6+EyH7evXsvusNaPXz44dO33rtHFbF
ySMnHzjBs5pTBw8ca4AUq8uLS+41gJs/Luw/fb3it2NyNfeLb75xchk0cvrq
mwZQ9PmJKy+cqCHYW5+WPm5AgH/euvbsTQPS+fL8jVeNcOnXu+UVjWgm/qX4
3JknDRhf9aXz1183IJjf7j5q7A6vuHur/HsDHv7i9tPyxmfvHj5p/Ax//exF
Ixj9q/T56yaA7LMrz5pQpS/fNUK+n56VNxkY/rpp9qD2zdum2PDnyiZE1bPX
TWD6r8+bAOFVb181ob6+ffupkfr88GOT7n69btokXtcUi/8Xml33oWmuor6q
KZz981dT6vePpo1U/mzaTN2vps/+9Rn+E/8Pv9r/9D/t3fys+a/Pqr7/i/pX
luJbJf4//Hv2vKnMPrxvOuVHj5qw8dv7JlKqu3T+RZMZ3b/7vpEoP3vtXSP1
4uClBuQa/7V/V0nDSsFfbzlyr1HWL3YffdIg67p9qw80qu6TbctPvGjgxLlF
64sbuzu26p/DDU3WrJu5uriBqlw8Z2tD7hE/OWnShkZq2bCRG+475VU3f8T0
QxXOR9fGFEw40pDX2DuiYNJxpwnCJ/UvWHTVybD3U/oVLr7vZNH2vt0L1zxy
6sX4Nq0KdjlH+Wpom5xhB5wdrO+e3mb4SSczp7dLzpnrHElp77Sktsscmxq+
u31cUq9NZQ0yeDSoz6TDTvuHL+mTP/pYg0gmd+kw+qiTmd+Ht80dtt2Zu3g5
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
dCIBZu1wiGjk73CtWKgKLITbEl5d4KtGUV34LOKkfWUfH4VEbm25kTisezbL
S6VwDetbTPjEq+Lc1Qpz+FjC4/82JUovU1mT59hBhQEBeoU+pIMDrM7z06jN
Ef2OEYHcvWSrVmWNn0h4uviRRKvONTh7PhEbfh0VZNQYwjquJy4OeNfL16Cz
xvY8TLDrQitPg1tgh4kl0B2r35riZfaN7/rXC6KRCeFuRt+EfruIyPpHYbDF
Iyyz8DQRpHwqCHL3jWk7wV74dbe9j0dgcqflj4kI7Oa3wT5KMWbOIIp78Lo8
m0qq8Oh8gaC+9/TTytS+Q4hsG/4swyKXG8Kn2UHC4iyLRmNKmG+HYc60tMqV
bq02vyfumVidaFJrbF3OEdWvdXPizBrXsIn2mvJvPcMsRo/Y5XactqJfhJsp
IHet4z6fHF+jKbCno7rvUns/N0twH0fkezInyNMrYaIdi6jZku7v7pO1qtwe
8i9KCPCL6L7HHjZW/5keG5ow5LgdNygdEOPtlzr9gT2cLe4W7BWUvcYB1yxL
CfAJ77nHfstDzar0gMDEUQ4848WQOP/Qlovv28PZD/3i/MI6r7fXs9fs6xEb
njLScTfOz41tYiJaTThnf7FyUmJwZPsVj38R43o6Ii0iZeh2B7x7Z1Ra87Zj
jlcQVN2R3i2ad5h51o4R/zjePTW13zLHJToflueltxm2tdQ+yHszWrfsPN5x
GQBePK5D7tCNDxwX/5yc0GvApK3P7FH2q5V9uw2YccBxu8WzjcMHjl5++Z0d
ibizbEDhlI2OKyVqT84cPmHu3md2SKka/z6vTVKrcRccyErVnI7pHYuuOqCi
d3M6tuq9+roDZ7kzunPHgRtLHVjKjfm9ev653wEb1Jye0r3nrNPOotDrk3v1
X3LFAcFUHfhzwLSdDx0Q1uO1syYuP+Qs7325dcKs9ZedcNOp5RNn7LjhQFaq
z69ZunjHfQdsVHN197KNJ+47MJ4fxzcs2nyzofL30Kr1jTdyfDy8dstJZ2Ep
fvPQ6vXFTxxE3YUdazcXO68YqTyy5q9DzuJR/PfZ1WsPPHLC2qX712w4ec8J
mD3bt2brZefcfp09vOvoNSdk9fPMtn1nGs49lJ3bt+vMKydY9+jw7iMNEBxe
dnLv6WfOF+tu7D52pcyJ+P2+eODC3YYK9k8X9hY3DAR/dPbM1cYi3dtnL95p
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
Ex+C7vvSPjDAy+CdshTKmt4rNIh5Qvf07bBxdzPcRQKJT+VJjM+T7OPlHV46
HWtAryC1VKxLwWla61K1crVfyWbMth4Q7an1Suh76ROgoz7L91YrPJPGQT2q
PztzQgMDo8pxodSxETq1MbrbWWjxfasJMHh4R/fGVHR/d4kICogtHolFA9wv
C/KxRpbhajuH2kSFR6ZX4RJHM9Mj47NyB2Ecwc/9kgODk8qnY5bog67xAWHJ
VRswtY+jbROj4zJ67XwFtPRfzE/xsUSVjLsAsw286h9tDW5eswyTD77aKTku
raD7/kqclzUm0kNtiByI+Qj+jIk0+kS2wiKkbR/7ZIRFp3S2Q+odws3m4IqD
djXhMWlhaUNxGSDbxEx/v/TxV3EbfF/LsIC0yZh8/u+NVWmxGTVbsNZ9Xpka
GhpRsQ0zG18PTPK3xo26iM2op2OyUwu6rcYlgs/0LM5M77oDZw6f6FecXTj4
IEbJ/r29Y2Z6+VScg/9jdWVRea95GPfK9mRSRXZ2lxU4cfLe1Pa5RdXrsELq
j/VLC0vosBOrSf2OqsTorGE45fHDkZpWFT3XYGEDtrdzKpKT2y+zs7znl6QV
9Nv2EofXVlQUd5xwBCeH3xqSm9Vx6Q2sh74eHta5c90eHG14u7ZXWeXsYziQ
83nOgM7955zCMZH3Swb2HL8F/5vtwfy6XpOOvcJ1D64uHzZ8iV0G+vPJJfNX
rrMD0p93TJux+PAzvJcf75k9deUFuzjKhb1zF6y//AHDNj7vnzN96X4cBmt8
tGPhgnWX7bjKk40r1h64/uYwbsf/3jKo98jlOF5ie71lwuQlZ+2o2Kcjcxdv
OGvHf16snzJmyalnDhzs6JpdTSj30RlL995zYLFP5i/ef88OYZ3atnXXKTsg
+m7XhlWbTuJuDduLdQtXHHLI+j84eWDvebsYhO3+5T2HrjrKf3Lg6OlLdgj3
35vbD19owoEvnjhx1cEK/nZi744rDoWgD9f3nL5oB6t/nNm7dudZxwtObtuw
3YEp/nvt2Kmbr+1I4Yd92zYdczTn7tbNO87aK9nw+ODBCze+4pLt306t2XHG
IfX9++6Fkw8ckNjXQ8fON3XJp0t7jz5woJRvr5y/00Ty/3Dj4gPHDxv/fXDD
SSr+3aOHDuDf9u3FjUdOOPPDW05U+vePHmMC67Bi7280OQ9s9U9fvG36W+OX
d6gR4hQPcPPC7abfvnjiLL7e8PqlE8B+7YazIv/vb8407Tdv3jkhua+fOcHt
X944o7p/3jx30nP/+dRZU+c/Meb/wrob/oKN/68F8xv/Ivm//+Bc5pcf/2f0
/S+m/Ndff/5Pv/zy4f+6Kv9Dn0//yUXg/PjXkP3/9/OXU8DmnN6g/sGDD87f
/TUsb53nme2js6TUm8dNgLfty6nrztEA2y86/fL2kdtNLoLG7RsuNs3PO7uO
OSWy2Lhk5TmHKNaP1av2NkkenZgxY3/Toj06cdoeRxzTn1kDJx9yaLB9Xjpl
qSP8yXZz3PDV1+yta5hS03/JBTsu/2lkn7q1DnfIo7ruo7Y6NuIlfbqPdYjn
/xxS0nbAPrtP8ULv4tZjHO65dR2LOy661dQN/65ccaHJh/V42vqm7Aa2c3NX
Xmtq68JhM446uv3dpJFzzzp+uba2/8xrjqeJXbpMumpfOi/qKrsvtqvB2TZ0
KO660BEqNakwr7Nd6sf2a1jbitot9nirG12yW3TeZB+gHZ2KC3rttjdvVFFa
Tr8T9teNKc2rnGcPMPjWrSCzcv4N/AWPu+UVdlprd47MTg2LKVtl17PrGBOS
WL0PL/JFu6iwjNqTX7GXLy+MSygYch3vo9o4/5Dskbd+wsev5dEBsaWLcf/5
swJ/c3DmYlxScGKqX1ByzS4sUNLWMdTXP633CaxeX0r8tPrQ6uM4uSHbW+0R
0g9Tm7fNyUqIiCqZjRdZHRkUGNt6DXb4Xs7zsfhFtsFTHUyLNBsDEoecxfaa
XiEmL7/0kTdhNzS0DPa1RrRYjjlC98VqEaV34XbsyOsZoJKpfKswWR5bqZdS
450wBFMRROdE90gf3+ghD/FBLQow+aVNxX1eF/LCA2PL1uDLYmSEXu+duhCf
Rv2izAbfws34edI1yODuV4ERcmwPi33ddT6tjmLjMzzB1zskuwcurdjKW63S
+NdimlR/8jzlMlVwLXaTPZ7u4+0VnLMSA/4Xx5g8TQEtVmBP/cPMnpaYguXY
U0ur3mAKK8ejTnPNBg+/pCEY//9YsklvDEgeiqk1zo8xmfwiCuZjh31bLwlP
qktcDKfDx0wP1JT0Ld4FC7nV3FuBuId2wGg946I8PQzGoO6Y06bSKBUI1YH9
YUKLxgp/hVCkiZsNQ4R/FhhR81uThBH516QaELUhoPVxKKPV0SyXKbXBPbCA
4UwNz40rtfaFOPbXZJUbatEHj4UqjwtCjUYPz6CWWExJHz+tWusV3OYQ5P+n
6eQKlT4Ii924GKMWSzTeKVAhxDYyQCGRKs3pM2HyiapAnUbtGVQKYfmGVCWH
QeOZ2wFgyXYuQsygMcWhfeG9fJIXn8mRGpKxBnS2VbnzGHSe56CHsMNaubvR
mWKfcXD2vYnTqGRqY+pKOGnPWwUMKl0cuBCumEWJZhGDrUqGIe+24UloKVzP
DIxFVJ2g5jC5urZXYRh4lEYi0QXG9YdGaBctl0lnCIPmwgldpGXRyHRh2Br4
guZaqVSu8yk9Cfr5QZQSKDdbSo8CS2ZVgBKRqCzWSghPdPYQCQVilbXXHSyg
QcwXI4aoSXC3y9GLxTJEFw8H+UeyWixVKs0ZG0Gdt/mwSCQyQ9YcKt70Mgvo
JKbY1AEnEQr5fJE2fChYhO9jVWKpHFFHLwCkic3eHDr6NyRhHRjWunCVG43M
UpaeBresDj4SoANirLn2+Vfj+zyziCuWaSNA9ljbfgufw+PxVMlQi2uojk4g
kejyHKhkVq5nEV2JFHXJxc/1DfVJMqFcrtBFDATqpq+jFSKpQqOPGQXuWN08
+EKpVGZIWgD6K1/N4QqlKt9yaHxFSbgCEaIJ7AQyuD0NU8nlSrUhevSDXw22
rho2Ayj2pIPMlQ0tEAqJTHYzl+xF58a3RB6JyhYoQzoD1PxSyG4TgwiQ+GiQ
s9VW682jEolkYcZ5MFgFMqFShsi9a6BvMYkHiLUUpApsFb9bBvuJKUS6rhZs
3m9aROjdKFSOcSyAD5ZnR+jYJBInBKYIbqkB8KTO3Bx6vSNYdCaFTJEUAXfY
9XAhnUQgUlWtwRjM9pUIxSqdMnQKgGK66XlCiUKpDpkKBrJEJ5aIlHqPGEgV
i5Ny+UKBRJcNo5CTRG5oJym9WwMM4pwfnyeRShTWHmC6TfVCB1UsUgWNBpZ/
vhhtADpavstgggEtOo4MhiwZiGO88WdxEKlIZioDeMtoE1+qkItE3n3u//5h
K5EAFRgCw2cgajo1FpmVQK2CHbYOhBxm6XjUf1wo0ubbPv2xnYtUC9lCROEN
maJd1Aw2h83g+A4FDrZiAcHF1YXICRsHhjUTobs2a0bkx2xAJ9ibYDZXjChU
ltw9nxptm4PQ+StXaf07XIT6OmyBBEE0wQPuoX2ZKmLzRBKZR9xsdKp/CXZz
E4oVSq8Wm/6tt60JRGQKlUbn2wH4V0okdAbRlaKIHgF8XM2ByjbRTZ+4GPwt
hA6ES6SWQgCiLPfJ5Lk0A8CvEaDVtmQpA4ijYAI7NguTJ1OIRZpscIa99iA3
awZFgc4CAaSc0BgZhUAUFgMBlEnpyVYJjUBBKoGrdEBSkplNIND0U4Ema7KQ
x5fIpIoosEee96QxWTQSkRMHJMyX+vIYBHREeLlgn2qjkyIqtVoZOASswTQp
T4R2hNw6HBD0UiRiCaJQ66NmoCfTBysHHVSRWN0cZDl9YuVwRFIpYigF4WD9
NWiHScVyUydweJcp2UIxlyOxDrv/2/YrluECuOdsy0z0GvYtEeFQqRSaOAmI
46z2oLohCpnMmAck5dtqRCqNWiyydL39E4jbE4jo4NG9BqPW8Z8ck5ZPRAuJ
WIye8p+StXyKqytFngHQ/cl+Qi4PUSh9oCh2AcLkct2YImsdUFxMYjVzQUec
FzEZPYo+xfLIzf75x1WaDOTJzvjQWDwEkRsLAXd3uIkrkSm07iE1gDCZKWEL
BGJEHVSH3hX/xPPYaFMl+gTgg77nz+KCBBnGfCDPPS4QQftHpfXrAtxAuSIK
hURlaaKngBD+ZJariyuZZ0xe9uqX7XkwrRmBwUUsRQc/N9rW+LUQAA0lIkE9
Gp2Kf9IQJqR1ewGefYOVxRch6GJK2wm0a8xUdPm4ktjJJ9A3XCmICgJZiHkl
oJork4N9ZHQCWdweLOQhzRP1DFdXknoU2A0ypByeWMoXBYHQjTsWCo1BcXVh
hAMV8S1WNhXtFRdm6rkvjbYB3ohMKZerA/oBPkRLNUcgFAnFllowGwo06MRH
vw4cAxJGR/Dd+HweH4lfjU6pX2FuLC76U3UmoDnsMrM5EnTFuLc6/b3RVqtl
8UQcvtSvP+iHHD5QundlmEc//g5CCphkMpEqiVsHUuX602hShUJhKASZllZa
xXKtRsg3dbuEftdOQXBBB4vuA5HfdgFqrmszF17Mwldga/Xg0lz+g6jI3gZm
YjjC5iESmaXTpe/1tv564MAVSILqQCBPJQLSgBMkMdNAYGKu1PWff/6hKjI2
vP3e+CaSR0e3daWlGEQRXgvioRufSh85GBCyO3pw3dAhV8dMQrfZhjwFlcWX
SjyzV71Fd6JkGZvDkaotFYfRSXQ5ViFUyBWa0Nprv2z1vbVUApkl1KfOAWhV
mZz4D4Eh9S7Y9O5Pw7dUIbqXibQB7UHw1NuYCjWI3CHRA5YCS73AnQ2UzNjx
uz6icz1GJJDIEMSjPSDVfA9jE9EJQJW1B9zwP2VhniJ0/9QPAGP8ONPPrGJT
WH5zwWa9rdAf5CRmBiz7CA9rgRSRSDTZQM/nc5yQwmJRSPLCK2iRb+IROjrb
qJpq0LPXY3Xo+CsNzcFEsa0OkImkiEwTC9yAtpkBiFQhQzzz1n9Ca1nmyReJ
eFJjewiqZqo4XIFY5lN94fNvtEEKdLdBVOETAMx5MUQiQPdFQ9oCcDcYaOKQ
SCSKMgfyYTp5gTOYY+kEL+FZMqZQqXYP7w/k5l/nmzXuWpkybjYwrlb7cUno
+pGlwMDUbak6RjNXpq41jJcbFMwnNnPlWXvBUOF2Fj5fIdMmTgdG37NYDV8o
k5uylwDHz+kArqsLiW1qCRTcbIMt7GbNyMKQHmfe/bT97OQl5EvknrG1gC/f
UGiS8MX6kOLlgMt2KUUnEknlltLNoJD5VglLoPGMrj7z5Wtj4+hAuUCkNCdD
MtGvTsE6jdZgzYHyoa/j5Qy21BDVCSxV29UwGYeLeKX2voiu+MalPmK22OCX
PeY+SJ046F4gB53OFEnGKXB12xkGMhNRFK3vgNvgeF+ZGJHqIoZD9ZXeaIeh
J5j3FAggD83wFjPZ8oS18NLaK8bqKRfqC2FuKFuvKAGVzNSVQlz7dZaPRqXy
iIIhrI3jrQgP3awjZ8E7eB9fMZ1Ml2PX59/dQz1UKs+4PlCX8XWpn07j4RUz
EOL5z0p89TqtV8xoCJ3tTTAqJVKvtNmQaD8jXIOI0dMTU/fpZFXK5Fr/VvA6
87nKT41ozLH9IAb9tMSDy+bIggddAVfKxykaNpWtzZkPbbdDEVq5xhjacjPM
N7ciK8hqMUdVQ17bl7ZmEZuFhPbBgsN7BSEsrjZ1LsSnv5QZeG5CSxGWn/ZM
lqfeaI7ujtHBxycY9SbftDrIJfq3s1kskJhzxsEGfCj2EAvUQe22wHvvvZJA
oyUorQcWznwny+ppjiqdeBs+LU0NDLCGFq+EuOaLzkGe5rDmXQ7Ay/PHDuHW
wNicoZgv4UGHlOiYlNazsGjwyVHeluis6l2wSxqGJAcFx+UNPA5Jv4/6RvmF
NS+fiOUufWkb7YvwBJq4ZZgdPBSdVAJ9Jiam/6lzqK8lIB5LsGz73NZHJVcG
98PM1G894v08/TJnYrEO/1Y1jwiNLN6IWbfPSr00OmtrnOa4ulViWGT2SIyY
9606yi84OmUiJuR/v3uEp86SPgcr5FOv5lExWb0OYCb/7Zrm8Rkt++GehUfd
0tPi80ZjQ1C/syg6JLxkNual+b4gLyo4tngadDPZ6vsnhYUmddgE51fjnerE
kLiCwbjG0cWq0IDw1KFXMEt0XZ6fKSBnFkZ2fjUrPyYuq3oHJnLze2l1SV4Z
/rdPZ6sjvX0zR+L5du93ifANa78KF8rdVRRqje26Ac9Pu784M7tlHZ6s7/2s
VtlZldPxJII3BiRHJHdagvPZz3VJisyv3Y9DHeeGt6+omoID7H8O9imtqF16
G/vbz/11HdvVbsKhgXszOnfoNesITuV+Pn9o37GLz+OAzIPFIwZO2HYPK79+
Q/9utXOO4KjO/c3jBo1aeON9PZbcefHQoRN23LLDTd+WlSal9dmJJ7t8N6+k
ee7gvfiXj2f16dxztZ0Ofmte+9Ku6+x6Po1LBnSYuPUJjqV8Xzuk35QDuG/E
9n5i1+o5DuLsvYUjpqy8jFfzxfYZdZM32MGaJ+vq+kzca0fFvu9YMnPbZbs0
y+OtKxZtcfDbPx9atnaPHdWpP71i5pIT9jzD9WdXzVhx5DFek9vbVy3YfMJO
3v5348L5u27acb13GxYv3WvHs+q3zpm++IjdHfJ+9/Ll+684csa+PLf3+H3Y
C+iV+dbWefMPXPuGv+D+zmVrHAkMbMdWzdp2xp5N9vfJHQcPO7Rx3p86fOD0
czt69mjHms0nn9mfrq1Zt92hf/770fmTVx3U5d/Xjhy/0ZR29taJKzcctNwH
pw9ffe0ACj/dvH37vQPH+3z/5oMmkPLyxUuPHEj595uXHjeR2z/dvnzLCTz9
c2nvTkcKBtvP8/sPXmmivr+6/eit448fb+w53eQi+Hbr5GUn8vWvO7eanupP
nrvdBDE3vrrblBT42+0bT5ww2LvnnRVZPjxxygZga3AW7al/9sFJaf/bvx+d
sOGfz5ydFe+vvWuCgxuePWqCYG0/nr11Uop5c/1eE7nb9uXNZ2cp/5/OPogX
d5t6wfbn5XOn37259dzJNWL79Rf2/NupkG/P3zr97dPzv374P/P5/eatsz/j
49f/Wf5//V+v++KMy9t+/OXyefjZ6fHe9ZdOXz2/5TS6365ec5rJH3ecdRrP
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
rSbYWY5fZ7ZILJpg13De0TEpsf1yHET4MKkkJaPvdtyqP9IzM73lWNxDYDs6
pkvr3ivvYD/8sX9sh9LeW3Fw3/Z0YFmrsY7kkHdqyjrPumLHYnd2LeqxEmew
N56c1nvkopO48M+/q2rbdpt1HP/bh5U9K3osP2tHZM4Obj9oyzU7NrSiX48J
O+xta1w1bOzc4zgQ0XBt+qCpax2KyjfGT1t68AmOZjzcOGXWskP38UJubFg8
c+dNXKXi47GVC5Ydu48PzseDaxZsvPzG3pNHtq49cePzvgd4667WVXZdcMYO
6+wc2n/ibjsw9ef40V1rjzyzV+zgtHEzDzxy4EZH5q4656CP/tg4c+2lJjx0
y/qDt+1PN4/sWHvCrpHx7ciGeSt3PcRRnc+71i5bb2+rreHA8hX7zjsQ6Q/7
tu996ICUfpxYdfi+Az7+enTbsSaY+989e6818dsv7Th63fF0fuemnQ5E+vvx
zVvOvXDkGd67ZddlBxX90eXTl185Snxx5tCFJhn5l8f33WhCbV+cOnazCW+/
sfvknd/fPsKaNT65fPOJQxrny7lDF+434Ytntp96/sv+Xf2FY6ebhMw/nL/q
BFk+vXjtieOr7w9O33zfRGG/dvGmk+rM3XvPvjYhnU9ffnJAj/Wvrjx873j6
eu/+PWcS9VcQhO54unrh3OMmgPreRWdtnL8/X+4+c2bT/3J6OTod3zg9Nf4l
h/PpuxMA/OvGPacmfP7gXMbH13+B43+pwv8ntf4v/4W0/F9fffsLbv4b+P7f
5tv9f/3578gKUO9MkP/99qPzkP3V+p+fnL/6+vkvYv3/8Of7X9398qNT4MSv
V85unQ83Xnxp+vLrTeeZ9erM8yYnku3JbefRPXXSKUXwne3nneJM9h+53uTJ
uTt/ixMNft38Leccs/XPhgUnHzl++GLxnO1N2a3PT553wIHSN6ybNH63PY7J
dnbEsBkX39v/d2Bk3dK7jpm8ut/gmfb0t7YPQzv1WXffsQXVVnZfbo+p+bOi
d9tBOx11Ht+5fJQj6/DZ2pK2ky/bJ+/BXkUVYy/au2hoYWbbhXbhs1fdstM7
rsWKrP+zqCizsN9RfOn/7JuRUDL2atN8uDxttVMXbZ636FzT07RB0884Nrnb
Y/pOOuIA/t/MrB130rGdHB3Saeghxy9Xdmw7wo692+71atl+/DV7y6cXZrQc
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
tFOMTqELr8Mg4j15VgXiET8Hs0RGRerkSu9SHFmekOVv8k7ofx3+8F6PzJi4
tNZzMLLfieIwD21gm3WYNXi0INBsCu24DzMp5zb31npED7kAa/Lv0GgPvTV9
KoY33OqYGByZWLEcU7DfmGR21weXb4R84F8LYo0Gc/KQS5jFNzveZAwsmIXF
pX+aGOvl6V+0CJOgeV8TafZN6bIaI/K/qI4L8E8bihv5V4qDfKNaT7mKme7r
MwODU6uWP66HnoWJzaNj8mt2YBK0V7vFhya2nABZRrZvJ9rEReV0Xoqxul9t
aJ2R2XrQ/qRFmC11s6VFozbn4iy6a/lWr6DMMbiJvLdVQlhsi+mY/6NhUW6g
xS9xEo7QfOgV5xfYYi0OEh4tj7TG1JzCYc4HVdFhmUOvYwbm69ElWZmdVuG4
9pUOcYFRVdswDmf9njax4Yn97WHjh9vFR+SOv4aDRa96ZORXLrKnHT3UNSez
60Y7I39Z+5y8frtxEOHHzm45rSbbdZpfz2mVVT7VjvzeGJCdXr3iHoZE/NrU
MT930Da8kF87elZ0m447NWzvtk0cN2G/HZC+Mbemx5ATdpDz6uxedTPP2oGc
wyOqei+xsxNfbxrYZcRuOy/9+bZpo5acwuXg63eNqek3/wiO2X9bO3zwpI23
8Jb+PjBx4PSDduT6/aYRI+aetkN5L1eNnrr+vB1uvbNp5rymrLb318/bdtpO
3LcdWLp4l0NE5d3WBat2XPqEFfL7/JoV2/c/sDP+T6/Z1MSrf75v047j977s
tNP6T8/q3W+x3ZFhO7Fw1Jzjt+1vuLpqxhp7ogDbz8PLZi885gDofu9cuKFJ
u/r6hvW7bzjA3gd7Nh52gEivzx3Z4+CSNl5bvXzTBTtH/vORbav3NlFxz2zZ
cPSqo5BbB89ce+VAqa7s337SAeT9ObVv/6n3DtT58sFLd5qQwovHTt90oIG3
Dx085gCrP5zef+T2W0eRd44fe9ikIvLhbRP93/b0xImnTYopb89eaMrxabt+
/swNxy8/nTp2rYmQ/O3lbacSHx4//dChEP7n8smLj5uKvHTiVhMs+fnc1TtN
f/v3zs23TWjmrwf3nQD1R/ceOmGpj269bKry70evnCVRnjtnxq1//PwveR20
C5qAz7c3rzjlg33/6rFzqMDrt05g7ad7zsl3bZ+cUeQ/75112Ru//6Wf/9fn
43snQPvn17/Q/d//Bav//9un4b+Dbv//7vN/3d6GT84N+fHCqe9/3HXWxH9w
4YFT3z889aLp6eGxk8/+Z5wW/9vP3zJAD245N+HUJSd9pocHbzo1aNeq003K
P9+WrDrfhOC/W739atNs/b11p9M2sGPFVofrzvZi+rQNTXj+gQkL9jX5s9ZM
WnjUQeR/MXfM/KasJvUrx66+7pjy92aOWnHZXsj75f1rFzm0fm5P7lu3xRHQ
M7NztxG77U6+P+PKKvruti/Up90LS4efttf5Y11l+zFn7G3d1r2k/aRbeJH1
M9sXVi66gzf8T7/M9G4b7b7hfS3jEjtuwzvsdefE2JyBhz//gnPpSnFoSNrI
E/gmOjo9NKZslj2ZcKeY0OROW5q2nWtD+82/6OiU5TW9mxIN2yb1rlv3yP70
oaaswyJ7zJbt44yamlUPHaVMat15ucORu6ZNTpul9p3/coeCMscpbRtVmFk6
8KB9fPpkRqT02I9/d6kw1DeuyxG8ml9GZEQkVZ/HO+xcj8TApL72uIG9fRND
0ifcxH+5pE1kWMbEe/iOuKVPYmTrzfjk+HdAlDW0FQ462yoDPD3Du5/Cni7m
+np5xw27irVnZpLVLyp3Au5L6JsQaA3OxmXjbaeGZfsHluzBzq6ftfnh1qCK
U9i7D3YrCvYMqcTz9KxtFekXlD4ck43/kG/xsIRlT8SugedSPRRyQ9JMzEE/
L0yDKD3TF2Lz7ebY5iaNd/le/FZbGeOu9u+OgeHfe+T4qzRhYzCdvcPtYzRy
U/ZaLBBmYpRWLPXI3A29/B/TNEKBzKsMc92vilAI2arQ/te/NjTa6tsAAXtD
+lQY+FCfoZFJPUJa7rAfxZV+KqUpZQ02H55m6FUaS9E+rIu2JnqbvGNr8JjK
uSEqsdJSeRYbkWV9ukUZ/SrxfMsfrnfy10XX3sEm+6GZaTplII7S74nzNpis
GYuxO3VlkIfGI7gQ9wPlmhRixJCHhcM+jpTz2QJN/nFspd0dnO6h8KzAXvBp
QTs/OWKpwU707bM6ByGqwDGYc2Td6DyLTBk8BtKb3kycVh2o0MRj0ppfNlaY
BCJ16hG4+VWZhAwGX1cJaQRf01RcFkdq6Q2JNldDpGKlxhQ3DobADbNqFGKR
MgYTvl8+vDZRyVMXHoZRlSPaJnsJxaYO17/8abC97lmSpufwPLpBw+xJr+ZG
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
9UY3WnN7ZuvM4mkn3bDg/VXjfxzzmwfyOTauTZuBW9y5B5+Pj+zYecIBDxLx
18zu/ZZddKMND3YM6TVik4fd+dHGSeN/PuKGqT4enDNxxOI//nVjSidmj/hp
u5fr4vyKqQu9NXSxE6tWbb7h8X7c+W350t3XPODJ5R3rV+3zxHzXX9++ct9Z
D/fEw9P7dh664UVnrh87cNoD+Hw7uWPDlhN/e4ppXt209cApj9/n47nTx67c
/+DFlM5N6FP9s4eRCPt9/oRZW/9297nu5KIFG4560hTe7Zkyav4Ob8T5jUVT
lhzw1CLAri9asPqEF2I9sXjmBi+0/PXs3iMXvHDT6d/W4j1zP3w49uuG/See
eebh/oldF7yOhc+3z5+94oX8Xp7749Rx73cfTp8+e93LT/PkxvFLDR6CVzfP
NKIIv3nh1Clv+58v7ttzxoMN1vxzZOeuK17O7tp/7j5sQPAvH9rTqPjo7cP7
bzQwi78/daEhmv7h+RNXn3rRxpo79/72QrLfnpw+f8+LPdZeOnW1ob4o9ur+
nUaA9L9PGpWZxV6+boxqv3zaGGx//6IxvP4dGUxjaPzT86fPG4PhX/5t3CR0
o2Gsj85cvtPw7Yubjxr98fXzfxshxU//+bsRf1DdvaeN+vL5xqtGoeWvHvzX
CH7td53+/B0Vzf9fWLr+//snnhf8xz/9b/98bbzUdW++q3jw6b8s0oA9ffT5
q3c33Tn/pOFv385de/jfCPxjjRM/sEcPXjfa8w8b+7Bqrz9oRHr09Wpjd9Pt
c438YHWXj/3TiFLq6KVH3in7envn6QY3wNfVi3c+8q78X9Pn7v7H28r+mZtO
NyQYrJox57BXsnybOXHJqQ+e/93+aeJ6byoWtqxvn1VeF9a3iX2mbPNm0Rwc
2m/CPq9fcn7HziP2e1wEb6Z06jzplGesDwZ07DrTWzZlcdfS3gtuug9O7fDy
gt6rPWxtR35oWTpop5vPB5vTrqho0H5P1e0fS3O7znTXo8X+bu1y5U8/85aY
lZ+yYhPy5t37jEb3oXdGs4xOvzQq7/Hz1NUNmUwPpo7b+ND71d4fJ2y+7Z2+
Od36LGjgW5rStsfi256nR8Pa9FrjdfJOa12Ev8HdsfqR7Tr02eKpP36qvHlW
990esTMpOzqxs+fpW3W2q8UEd3QDblsmJeUPPOOeo8edkhLyhl9yz9HcnMTk
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
unHhgI9PGxf3xb5j+vl/0Nu8+47r/fvf/XeGoP+f/Hw3jvd3vsu3eN/4u2/f
Pb142lClFzt3oVFSSP3hfQ8aWnl6+M9GvqEDm083fFW7b93vDZv1zLzVDWHp
2IlF6y80+J5m/rzpnndhDoyfuvfBf+4I+Q8/9U8b5yLc/6fRrqg9fqPRhvlz
5+WGY/p667brDQO6um7b5YZJOjx/6bmG77bOXven94g9HjtmRQPN0a2p41Y3
FO3dPmHiNm/CUN2c3qN3elmB7g/5YegR78tX9Ozw0xnvLv+pfbvxRzwveDO0
TZdp1zwv39i+uGqZ15nwU0l+j00ezP5xdXZWp9UeEH1ZYUpGn72eK2JGUUrO
8FNuIVE/ICsuc9h5t9i82z09rXSuh91nbmZ4dME0T/mYQUnBMW2WuQXgv+UR
YSk997inb02awz+293F3T8a67L6x1cBqAxGm5SE2R+akq+/RAbxYFhsYXL7K
zbM2PNbXEt56k7uR3hEWS1Qvr48Xu9m7Tb8N3kn5rWtJz9XeCZvYurD/Xo+8
fdUvv7D3Vs9YL3cqKKw+5JmipSXxiZ23eb4b2Dw6bdBJ936obR0TENv9mLuV
3wojgpNHXHFLpZHxAQEJI695/BoRgZG5k4iIElxfDTD5JRNR3Ri2LSvANzhv
rjth8Mcomy26ZLV77/eJshid5QfdXakIMJpDelxyk/xn2HTW6L5Xic0xNMpg
sDT7ye0cbh9o0PpmE3os9jLPV6Pzzd1M9HJZvEmjC2hzgGiyZ4hOpQ/uepZY
kRKHWml0jScIae4mGRVyU/ws4g4fGqyXqQPKdhL96hWulWsCSt0Fo4qsCqnW
2YWoQXwwyYC/zTWaSJ8YFCSXyPTx0wmCnVY2qUgRkL0CzeWDJI1EZozohCKK
sUUhCgFf7t/1POpJb7uUx5U4BiLanA8t9EIOTxM5GSXtncvwVYqV/tkb0QYY
axdz2RLfsj9QI10dIjZXFtjrwrsalDA1MUwt14WPuEGMrotDIVOGT3ZngOQa
ZVJd9CxCk33q0ksk2viZxFaZE6KVq+2FmwmfytAAKV+kRvgX/imzCHlicwGi
qcfqM3QCltCUfwy9YHuEgseWOroSXpR+/iIuW2wf/jdqpMws4El0kZPBwMY+
pWv5TJYschGahy8uJY/JU8WiWqLY4mAZhyPWNieMwhlBQjqTZywmdlh7PwFu
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
rvuyQR1qRu90l2BH1+LKvrvdD5hdVlA75qTbx7ZvWmzeWNzqB9lVkRBfMNnt
MDCvNDWzy/L7eI0Ny8/O7LoJ7wHNXeKDIiq34Ld82D8zJLr2gPsm1a7Y1F64
fNCH/gmBoS3n4O98qDAkOK7tWnz56xNtDHCWbMdu+a06SKsLrj6GJY6caekw
B2X33+7OlEJ21bftv8UTtpzVvWvjLk98dkjbzo3H3RX2ulvZiKXn3Mk4v1Xn
FPXa4y75qKK4rL6/uiel+qSo9H4n8B7woH1SePY4N9Q/J8Nhi+52Dq/2PjEB
xvhhuFTc4wpXdnVfdwxibXKQ05n3I+4A/21BqcOZtRJfOA/3TTLZizbh09Ww
ghBToNu69ki63RGY2oh3lZGRJos1uh/urVAfrpHpXXOxoPKHModCbspZjYUu
forUaPSRHY9hb9I9SKMMiMKSexGk0KTRW2PGYXHwx7lmrSnCbRE8LkKjDXAW
L8e6Qzeb2hwe0x5T5PyYa5Tw5WF1UMAUORatEvDFth4YG+inIIXSEJw1FdtD
d3XqdQZH9jKstcr1Ii5fl/ILrMu/6oodYoG2EFqcIru6t7QLxY5uV2FeR5c4
LVegT578J+hT71I1UpncnrcY+FEiY608GpWrLtwFeU8NNj6VxjP3gMDyk2SF
QCANiA7uex2rlFqbXKQIGY4v4W2tOoMzbxH2Kjddel1AUBEe3VkQqbG2blex
AmuDjg6dRucs2Y11jlyjVKwKbnMcdu+mZI1MpHbUnIYlXxehlwjV4cOwxMm+
Rj6TzQvoig2EtmY+elQKGQtVyf5K0mmdsclFmJfY8jCFTCSQJ2Jb5Xfn5ydL
ufLk3zCVo0ldo8R8XT7mTzWxU4aeK7LVYjyCTLVUrrKlzYFja2ighC/kiMKm
wl1Pn0AhncqSpWOSR0XoeY7ONUDGN3I9ls/mClSOPtBwe30gj8UWKcMG3gWX
1ehYPJFI5ZoPEwyylRyeSAFUGtAvf0eLWEKx2NQWbjTnOvkciUId3gMWrpOW
RWexZTGNcLuSLQHoMS8SEqufxwoZQoXangeNedeFiMRCkdxcDbO7e5u4dDqV
a+sCsGpkZFWmmUVmO2DU6Uu/dnkmFl2StBJwB5alWKUMhiSw6jewBFTr+AKB
WBlSDwgn/8SyAdTPCR8HrOAPJogB8iPNWAE2FJ01dI5ILDPzAufAaugPZLyJ
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
d4VlnRAskahU5rQZEADvEaIUS/iyuBVwl/LXupERfIYiAzr4IufGlxuY7IA2
p+GOb1uvCAGNba2/CbeUrSNNGpUlfTJUe50ZIufx+OpsTHx+fLAAJMzlY4e3
tiYOkyt2dIfEj2eZZqXW6MycBrf1V1PNSrk2KH8ZvMmYCL1cpguu3AFp/YMi
tUqdJbYL1JL5OjoZGHmlDYdOBK/z7HqzKbwAQ5b3u9R8Hto8MMSBTI3R8Diq
6O5wgDT1ssuVAcFZ464DrYFX/ePtJoerzXL47OcVgWq1KaHdLmyb3TvGoLGn
9z0NBSQeFFvV2tBWUzFq6vC4AJXVVbMeSn/81S0p3BmV2fvQm+ZvSNOVfLPO
HFk85doHoCW0IcNqCk6pWQ9BheZJmZGRrpyubNsMuJfaGSOkggwm2DmQowlK
mc4YhRONxkYatVpr6mhMvKR3rNlscbYcj53lO4aZjbawVhhg/KUm0mo2hJZs
gzd5Xxpq1FrjG47Dkl8rDjQaneljseZZ79LwBIrIyRhmPyXRpjUGFu+AeiVv
GqJCQiLSB2CuaG9rY5wOZ+JonG7+cmK21ZI+HVcOWNcpPMCRtxw/ps7Isemd
HX7FTiJnShJjYnNH4fjkwCSHzZkyCc4hyIc+0Tq1OXMhRkF6WhFiskW02wzF
cZA9xQkxSXnjzmPn860VrgiXO4P96ez8xKSUmuXYufTxmIzElJY992InpJeN
2XGpFROOY4auF+oKMnIrF2JOqc3bSmNiWtZvxwiDXxYUxETn9PkNA4yfDc1O
a1k+Cs+svz+otGWrvusx3wPkUkNudskANxj+sWd+bs2EE7igy/bqnFZdF13B
WL9/T6ooaD9s68PPENX5Y073mroZxzCbx3ebelW0G7Tk0suvX9ALX23tVV0z
ZCvuVnp/c2PvwbOOJk7GIKCvk9Md1uDyjTgdeWZhcnrFeJxA+mByaVbLdvPv
YP96OaFN63Y9N+G+tjdHVZW1GXIUV1i5MqiqsGT0MRwVOTOsorDjbMyQAfn0
a69WJfWrMX8x5MW6tqnplctwwfFXa9uXVo/ag192f26vTv2W4HI+yON59R37
rPZovdyZUttv4z03JHmhb+3YX+67oa+fuvabfcyNRJyZO3Dqz9dwoODp5okj
Jm13Eyzf/dS7z6RdbuD/6NyhE5afxmsWOfLzgrU7buFwU9PlZfPXHHLrOb89
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
c0wtFmCZFm9SKgJSRl2Bm/VJKTqJxOCagNGue4ZrZGp7Pmbv+qw8WKMNTq89
jlH3q+KCbdbYjtiRb2ZKoEZtco2BlBpkYaxaIjWlTMeUWYZEadWWyHbbsePt
xGJXWGRRX0ym9V2vSJ1CHVyLEaCQAdE6mSayH0Y+fzvQpZNo4sbdhu/1e4lT
pba1WosdRX/MjwqJSu15FN7k41iXXW3JGHEVs1brGqJVWXMXYH6AL7okR7py
u+HyvmfaprrSSxtPYBrQC0tcsek18zEa2PtJJamunNqV0GcLeT28MCktr+9O
PAwwsCgvr2oErsVzpmd6Yk7rCVh1IbvKIoMTO6/BUefFJTGxBYO2YzaM7xbX
tCpqP/00dmS9MSw3Ka9hCa5ncKd3ZnbloK04QHmzW0lx+6lHsEPwt421ua17
/4gzLL+uqK/tNfE3nH18ZkhN6x5TzrzBLvu9sabb8OVuyfpT4/v2HX/QLYaD
7CgKsjpT5mLnJWRjUYg9pHQ1DvYuqExPKRyJmwJ/m1uemFQy6TIOPy0rd7nK
5+BpA99G5SeldVyFeyue6ZufXjXzPI4w3BzWvqRqxCEMR/26o1t+Ts3SSxjW
8WlLm6yiHhtv4GDKmm5VXcacwk+b3w6M69Vv8Wkcini6qK6q45zjOPLx5Keu
rXssv4hDs/enlbbqvM3NlT0ztH2XyUfcSMRv0wc0LnWLz7/aMKbnsI1uWYdL
i/p1HnrAbQd5+6cps1ZfdYO9bzbOWPrrHfy1PhxeOnHhfreYzNMTq6dvPeWW
Snm+f/2abZfcfOoH+3/dcOquG6S6t3PNhiN38R9+PPzj0p8vuIGVV9vXbdx5
1Q0mv7l44uBZN+O/6dovy/eeeeoGsC7v3PabRxOj+cL+vRc8YPjXo7sPX/dA
1x9vnDvldZ29c/rIlQceKu7D06dveTViHty89PCNF4PeN3vC3K1uKQrkzPyJ
C/a6lbmbTq5bffCmB2e7tGnVrjsenO3oqk37PbGLv45v3XLivhvle7R715Hf
PVD5/VM79l12iyN9u7T3l5Neov3to7tPerR+Pp747aSPwvyj86f/9KCIH878
euqa57K3R/cc8oRDkOf7Dhz+w4Nn3Tt9zFtHyIdbv/tw6+8fO+WpWeTd+eOX
ffTJH9/xEe358tcTH+D/6aO73nsgfz/82wenf/LQl/j+9rkPsPrxr8fvvf97
c8/Hi7fpwVNfMXTkHx9I9NtnX4fU5u/04r+89UWUv/7zXRzg/+bn3a1bvkkF
D3/3hW6/e8Lnd74SNh/e+CL/Tb6Vgrz/n/Fi/5t/Hvo208v7vlbHb+749oM7
9557W+2fM16/CPQYevKe9yZNJw/d8152efP2a97qPvLTtlue/zWvWXbAG7n5
e9Gcvd5Rs2HuUq8o0L3xQ+dc8DTn0UmTVnuCAl/nNoxYdu//pIj/1z+vH/h2
gz9u+wTMHp73Ud1C/thxwxsUeL1003Vvya+u3H7J+8tDy9Z7TMSRT/NHLj3n
ue7J+P6zvHGN6b37L/Pw/5G142cdeOzuoP+O7TVzvyeCubFb+76/uDO4kLFt
qwbvdjfJ36M69p190l3tJ3qVtZ3gedyiqoL2k3FFPuTfYXlplYvcRP41JfGu
1itwuB3ZVpOSWLPerUHUNzshq2EP/pbnKpNi84efxkMeY7LiXW2mX8Nv0jfD
lVo2D3c3uFEY6ggt/QnH3vcXhduj2+7A27V/vM0e04DpyyNvOiTa7PmzcR+Y
jbkh4RF5c/FVrUMQuqPK24wthh/LgnXm5H64EM9fVU6tNrTPGk83OljfYZjH
3QCZVVla/6un7UaXFPb05Dq86ZjSsvtu9wK7vCotq26ruw1mFsTEd3DbNXwc
lBKW2GWvW9avR2JYSp+jeNWuyQ60Jg64hg+LruEmS9pU3BbkYWFkaFybxXh6
188tQwNDi1fgUYcfU8wqU/pi/AHTk/QaW8FGzDS9uQItrLX8V6weLmWHBYVk
jcUzOJckmg2hGWNvYi3SzSEXKUOG4tHn1iapSBU/A3vczaIwU4C9eBMWR1uS
HKBRW4r3YfXQOz5Apg3tgHkdfGwTjW46Ywdge+qdLg2fL4+ciCX7LSh2KkWq
tBVYFdUFK6VqSxkWtPk9Wc3jywKrj0GLkilOsURnjx6ELb71QXqlOiBuEtQG
fZOt4rG52ozlkPf8pNQp4Qi1WZB7hCyO1/M4/IC2mAdDdYhexAtIHAiVD99k
ayUylT4JI/VssHEpFKY8CyaWI3UWPpUpCWmPuScMdinoVI41pNtFrNYbI9Qy
fdwMPIuy1imTa2OmYvX8sX2YWqqKmYuV50S+TSQy5K7CeuayZL1ErMlYjzXy
yAyzgK9MWYN1h/ooJY+vycdUlD51TNPxebqyk/BxB1xqFlNo7HQF1nOtTcCg
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
jB9XdW3fa86Z59hlj9YMqB26Aucqfj42qW/PGbvc+Or5qQMGLfoN16V/t2/s
oPErzsQNw9VRNpXHhqa2W43DAYfyg6zBRVvxbIBdVdER2SOP4of8L3MqMkqm
XMbLumtocVLh1KtuoGV3TVrFenf1vVjRsajeQx/c2pDecvgRtyJ/r/yMNlOv
YPf/vLOhsFX/3W5phZUDOvWZeQqH096s7V/d48ezbtTqw9Tug1d6JB9uT+o7
eZ9Hw+LZojHzL7ufdmT19Om/uM1xkbPLJ0/f+juOeTftGdlv5m9uTflnm6ZO
XemR9UeuLV28864Hmd27dNmvjz3465mVe856UL4nO/eefO754dnt24955G+e
7tmy1yPug5xbtWKrB2d+d2LnttNu/X/k+dHfjp277y7b2ztnT9zw3P/hyYOX
b3qQwtdHD1y998kN2t89c+G2B5V/d/P0ZS+d982Ny396ddwfXb3ghdCRJzcf
erIGkObrV2/+83md21MSObd63qazHuHn88sW/3zSQ779Y/f249e84PWVvT5K
Hk9O/HrWmxuA3D10/qk3tvD3id+9lz3Zf+SGpy6vHtp7ymsAeva3o797aKbI
zUtXfExhb5878cj7reneXR8w9eOfvuLoyPV7Pt/+evbKe9nnhxe9ECly78wt
n2/3r/jkECCvnviK1Tx74Iu+P/pOwf37z3d6O9+xqz+9871HU/N/WxP///mP
t9KR5mffOQy8ev1dpOG/c4+v/0NOuf9f/HyX8fD1u7rxNbxFXt736QhPz1/2
6Z0fTl177b3N7RO3vWD4+3WrrnqvO7vhwBNvPz6z/IBnjKKT9qw9dzyVf2bp
mqPeX66YOO+U55b3J/WbcsDT48+M7D/3/HeZJv9zPt/VyndRq2e+MlWPj13y
efjhn70zJfJx+dJD3m+3V6/0ec2985Yc9qocrR4x/ah3YtsxdfklT2HfThr9
0w1P/e0aPWTrn543W9F/4A5Plz86sN9Yj0s5srB73ejfPPPtrLpOYzwet/+M
r+v3k0fKa1OnVl0Xe+wG1lUXdFzjmcjWVOc3eFTw13Zsmd/rF/dM1pAWntbz
F/eq1tkVkdRrD/7tRFVGcsWs627+f4ItMHM8rseODMmOia9cgREFkMftXMFx
HXE9H2RXqxBTeA1+k0+d4qOSisbhkZL1aYFGR+YEfEUdG2PQWXMXPcXsg4bk
hjmi2vzs1WkaWdfLGwb4u3fbnus837Z3aVW30puRMb+mbq3n294+Zf12uxv2
r575+XWb3N/ejWuV1/8Xd2Xu6pqdO8gdPrheEhUYW48T8pGJGTZLYv8zeGs1
hBvMicPO4y9WFxsWmTsJR+lfljoDjNEN5/Be9UtJsDVpxm2sah+MKg115CzA
X2xF93iLrQBTj0FuV8RYncndT36AHWdjRrTFmNAHJx90DNQGhOTMxdeW2sQg
oy1zPkZuf1ybG6YLrNiM3XJn2wSbMQQnsCNz20SpNcH1eNrAzo7RGnVQXzw9
deuIFL0qZip2yyWFoSqpLvknrDu0MfN5En0OJjrzrkAn5Ij0+Zig06E4g1Zn
c/XG8hK620Qcjix4KOZMP7g4UiXSJi3BWPCdMiwSqSEPk9m/3DFaxeEbKg/B
nt/GqlAFmJNHQMD7eaKUTefKMWERZFUU8PpVZqyCbKAF5dEBUqWjYA8etj6X
qlOqnT3wNpidYlCpIsfgDtiDIzQiReggPDPl7eMeUbrwEXge6N/rO4WaXDOx
uMnrcYVOXQAmg4vObWt6xKjNWXhuwKlZrQI1lqxNsOQvy4IlbL6hNZZZvDBS
zGKKggZinb2rhYseouOHY1SUaqdaoXYkT8AiP1kqFoMlDhqHVe399YUmkTJx
AYz8PF0wrMjAV6bvhPWwe1yXCKlQX4UdzArsFpXWED4AwC3I83S9lMvVx06E
IbZGO5/JV5pzMKbQ4qJou4SnytwK37JP63Qzj6evwLadY6vClAKhvTc8FJ4b
URokYArDpsBp+NrCbhEStjgGwp/I6ZXTXCKWqhyGIP7skGzm0dn6LldB5xtg
41ApVI61H+wpbW089JswdDacizKVIplCE5y7AdTX3iAenUalq/KBdDOyrG3L
YDGTb+sKVY0aS5KNfAY/ZDSshcb8CBmTKnbNAaN1qVMgkinVjqKtoONXKihE
KollqoVYQisNi0Qksp39QUby+5q0CBUbPeMOB6ehu8jzUB6JSGYZh8HyrE4A
DqWieMzXepxTQCWROSGYG8CrG/eHObm8mJ8wtsury4OdAnneUSzXpX+BQyLQ
FcPg2B+jJjSEi9jKiiugCPcXjGxl57O17WHPHJ3m4JOJDDvm7pcoohIIFEnC
T+BQcs7B8veji0y5cJJcZhdLZEqVpegYuOWIAGBsShFlAuo20nzz6sAwDl1R
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
Prk9qElG8eQTOFpzsqYgt/VsPCjwdUOrnOI+O+9il/3aPqRtjwnH8Q55uaRL
WZtJh7yFCfsMX3vb/QmPJg0eu9kjLfO4X4eBm/Dimt+Pzx40bJ6bpf5+0/Cu
I1a5VZqQExN6jdp9033ZoYkj5xxz00CRazPHrzrpgaKO/LbgD09By2+blqza
fcfdCl82LfjjmEcv4emqZWs9DPl3Z9euO+r54aWtm/d7NWiu7vh99zUPnHX1
8P7jdz1Hlw/v/+uFB547vffUDQ9+/O7M4Rs+8jrnL9567UEmX1y77aXEf7t8
5spzD6pdf+b8rZfey15fu+NFIr/umDNh5soL7je7tHj2rO0exOfR8gWrjnrx
uZ+HdvzlQwe/cMiXrrxhvxd9RB4fvu5TWvbun57ayKBGwi5vLOHKnk37L7lv
8uHsnj2XvdjgwzOn73nu+P3y0bNejX+k/sYNbyVj5NvNOz5E/jcnr3kDBj/v
Xvb54ZXTN31QyjenL/sy8k/d94Fu31965YN43/MtCvzxiS8l/sutpz7g8PtX
vijoy+e+KOvHf+jrfP3H0X/33/9ksV3fy+vx4gQPrr3yaT3kzT90gN74dOP/
Q3//IPLX/5t4xj9++OKJ7y8fvvRpzadHbvqUAzh92gdff3LoyGUvGr5z5iav
Cta7+dO2esfQ44WL93ok65Gdo4avv++p9bGkrm6fJyhweXDXugOejlnZuXr8
RY/A2JS+/Rd5kppWdyjtseqB+71qm2S2X+2p39q3oGjQfvjPl/9G1uq/+fcP
e/n5wDfx4/ElH4P5tHePjwLSydU7vYpfyMIJSy97GmzzoHH7vTkoiwbO3+2Z
dO6M7F67yfO8N6O6DD/gQemv1Lbo5g2VLO9YMeaYJwwwts/gOe4gNXK4b4fe
8z2JU4MKU4pGnvuAP71H47TSue6H7+haWt5/m7sxZzTLKR64y/2APlmNioa5
lWvuViUmNKlzh7MXFsRGZ09ySwQNzW6U1WolXk3kbvO4qLjiFXisc2mG1ego
+B2/ZddIe0RW1z34UduszOTsAaewW55s4jJZomuxEkfIvIpYqz116C3McOoy
go2WzNn48tQx2qCN6HwUOzW2YUiQK3nAaezZJTalUhs1EAo2IE/zrXKpJmYy
ZpmrU516R0qr2SCZ9+H5hwhysVdZ6+meBXx6adPaJQ/cM+CgZnltVrn74EO7
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
6qZvSdFzvnj709s+Qv7v7t7y3hH58PiZD2b55enr/1g5598I0vzXWjr/g5I3
/2n+3r76HwtJ/L/59+YfNvHOt7Of/UPk/9frD97xdv/6E59Tj6758N5frd71
wPvDI4u3enNokNO/7/TC5g/qRqz3Stbf+W3hMe+wmTVwyiHP0bW6XlOOeQbD
hpFjFnniDE8GdOq26JYnHNulZc0KT9bUjA7tRhz0GRv/W/7e+Ea+3v2jcMYD
b+oSuitZccI7QyDbN5/1Hr3efMBnZtkyeNQeT1WQ75Nqx+7z9MKXAV0nHfU8
4XjvLnUHPXdZNGDgXE845O9+5e2neNpoT7tmHed4MpImtGszZLW7gx7VFDbt
s9HdJSurCitG/emeaPoX5ZUPdx+96tOyoHymO7NsQtO07FaLHuCfPrUsr7A7
XtQIqW8dZQ9pMg8vzXIwz2mNLV+OT3mLm8fF5fRz5zq0CjIYwjqcwhJuXnZI
joxIn4x/wfxsl8GeORNfbetS7QZHPqYojzxvHhsZm9btKHaTeXFGrSWuH762
dwpSq2zJw7Bwy7dSlzUiqXSRN6o7vFXnWe4EPuRej5ZtfvOEwXfVtOq33hOY
Gd2qrM/Ku+6jiR3a9d/nXkUf92ia13Ore7cyrUV6Vud17rro/XIT09qtxM89
bdkwLrEDnqWJ/JHuMAe3PYQf9YmyOrJGncX7p1tSVErj/rik4Ltso1wX0hXf
FVzIdWiM0WPwNXZivFGhTxyLx5Z6xOqUxnSMIo9cz48KC2vYbidm7TMiNDKl
tQxPN+gRrEId+DYYreNHixBbaGxGHTYmLyfZzNbwHEzNFOkaYTU7o1qswBq6
wqE12cMrdsJEuid5LrvNGdvlJGz2ceFGg8nZaDgmmNc10mSwutKmYKls+Voe
O0ASMQ1GXx5narlsvjIWEwVaGmPX6a0xrTAtxSINl8EM0DY/BW9ZFWtRCGQR
w2Cy543MQDmLLYmcDPtubkGkksORZWJb9mYW1PM3hXaAkZ9LEUI6hSkKHQ2n
kRGBHArqS8bMhHycNlaJWG0IzMGFkpDTiRqxzNYKr7A0N0opkts7n8FMuH2k
3eZKGoxvsJvazY6ghhOwo6/5EUGBYc3xIseb4+xGc3A2rvjZwWnSG0Ny8ZSP
UqdGoQtEj8A9rySYVGKRPh9SsJHxIWIGU2gowXb3Ha1cplAf1/cm7IM2TqXa
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
kqQTSYyJQzCh/cVJaonSnjsLcxv6hehUusjWG9+CZ79sHaTS2BN6H4bSC19q
oo3m8MbDMXbz2YIgrSmi+TysaN2l/GB7UFJXXG5+VbrTHtVkIMYJelObHBKa
0moW9sPXg5vERzbuvhWDvI63aRSbXYEr/n/6vbhhYpPOqzDq7ocRRRlNinrt
wihoj/rlZzetmcqzdcCyw8tMXApNGArjX8izYoucz9FmwTIYyP0CPZfBNTbD
WOun0nV8rsjRAUthOJys5vPl4YPhthF1U7UiiSl5IaZ6PCNOKZaYsrFqYD+H
JppUltgamEuLvK6JtFgDM8ZiyOmlolC9zpGxHCtbeLsszKQPLsUShZHjBUFm
S1zfExjGtqkg2BmUMeEG9kHrGwfZgpotwPzzN2PTQ4ISuu3ALns7LC00ImsI
DlZf7pTgCs+ZhlW1/XmydXRwo7KVOHS6uiQyKrm7Owd/Rn5sbNE8vOrer1Ud
snPbr8LLjt4dUZCY1c9dW/FmbdPMkrHu8rdnawryq2dewIGQ7R2bVfZfj1Pq
HizvXNVxwlFchOT6nE5t+83D0waQj6t6dh++/iZ2//o9M/v1nXHATUE8uXDC
+CVuUvTXQ+NGz912Ab/s5pppc34/fg8HF+9vnz9jxRW3jvG1jYsXb8V1ApCv
R9cuX3vyAX70+tiGzbsvuRmpD/ds3n38YcPuZ7EmutMjwe5IH4e79de658cl
VPyBByHOdk2LbNh5N/4uxzulxeWOcOcGHGufntx6Fl7CoH5rTX5ul9Vu/397
ddPCvgcwSV3k0fJeVX0W4iEV5OrCPr2HrbuGI6fn5nbtNHq9G/i/OqtLrxmH
3OzBrZMGDFvuwdv3zBsxZYu7FO+X7VPr5u1zUxdvbPxt9pqD7s97+ceCBes9
2QBnl82cu9GtM/N596olK4/fcaNipzcv23TG/ezPRzav89Gsv7L9j2OP3QjJ
7d0bth/3yCY/3LX18GUP+fzU2p2HPbrxH05s33vTQ+R/fGD3n17A+/HBYxe8
dPbHx05f8Wpp3D1x6qoXx3566+wTL5J76+a9x57Xev/0vg//H3n24JUX5f3w
wlfO4/WjBz7o3KfnPvjl1w/ojmSnR3znxoaZKw+6DQe5um3juhOedzmxY+n2
S56j89u27vWW+j25c+OJO24o8vu5fYfPeTjP9af2H7zqzW64/Oclb2WCT9fP
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
dVFMaGTlMhxN2VMaHZHZfRfGfX09PS/BVTbqOK74PzjfldFiMS5Ie7tfVpPi
Hltw5tqpnlmZlaMO4525v31eSeNCHMH4uKZNQfM+m3Ef/8Gc2qL66W7thndz
ejZ0m3YZZ+o+mdep24jtOJf6+4kJ3UYs9Sjd7xszdNoGN/h0dd3ogTN2ukWh
/1gxfsz8A+4vXp87dsKyK+6rmyvnLN3v0T3YvXLp5hNP8J+9WLd41fZzXs51
o9NidY3DaaEP2yVFuVq4qfsP2rqiEtu7YyNbmsdHpnU6gP9yVYuUpKqJl3Ag
bFdDTmrFNDdvfFur3JLOG3GY+8tvrXNLR+zCm3w5rVVp3TxcYAm5OKpZebf1
t9zZALOG9Zu61w0jHRpX3zD1sBu1PTul18Bl5/AwwNcDI7oP3+DGHr4dGDd0
9h53Wcf7a8YPXrDPzYt/tn3SnE1umSHk/LKpi/acdeM/h1bNWn3orhs2OrJ0
6ZajbuLnnzvWrdh+zd1H17duXH3Yo8Xz+PdNO496oLs7WzYduPLc3cjZLTvO
e9H9G7v2XfJohL86vu+sF+P+cf7UWa+s/9ejp8699ACFt07f8hH0eX3joY/a
9qWbT154gbXHt5+99fzsy+MHviDt3z7AOPL1ySsfdvKb5y98rp5umjxn+zX3
P/7atG73BQ/j/+3erTu9QY6zu7Yf9QJ517dsOenFMx8c237qD8+zXN177LK3
kOeVw4c8gQXk+5nDpx96Pnp27NQlr2LKtzsP7nrf/Mnlw964CfLk/JmHHtjw
x7ULV3zQ91d/+NQERh6e8Y15PLnqI+T//fZDn599+fuBz88+PvGVdfn44ieA
9PNPYYCfUPf/Sj3+f+XfTyT15//4PtCrNz5j/e6mTxTk66Fjj72fPdy216tL
hezbchguyh9//+0byfj6k/DNj/9cGun/o7+fHujzTzGYe3d9UzFu+U6DF7ee
+Pzw8qHr3u68uG7bXS+ef27DwSeeHns2bcwK7xx8M2P8b95vbuo7fs8D9yh8
njdwgndPPTlk8IKznptPq2818rw7gPmiXWXdpHPuRzncqbb9XI8O0IgW5e2X
3/qEj96QZsVdN7jrB29vkVXec5c7mDCoMLVkgKcabuvUJoUDz+A3OFeRklE5
5Sb+lL0S7M6C2TgD+2VleFBUlVvVZkpWTHRuD+Q//Xv/03x76Qvu/3vgtE/X
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
ye/zhnblzTtNuoyBb8+mVpXX9t3wAPOkXkytrGjRdxuuY3u6f1VR3QR3zjVy
IFnNYYkdPTEceHO6lsNXJmBuEDKtSZDREl+7C3uh/uEqocze6gjmMP/TPkyl
jeqIa/Bvyg8PDk2fgCO/s9ICdUE5azGc9m37lOiE/C57XsLb78iLMJoShmGZ
Cci27GB9YPIYXAJ5fYsmCWUDduBe92/tWpQ377wEJ+atbpadUzHsFA5ozKou
Km2z5C8MN3gyrHVt88bf8Huf7lBSXDX4OI5vXe7eolXXxZheEPJ1VW1aetUc
t4T5unYtG0Ztw53Ud0u613WafhqHip4s7da6x5JbOCxyZmjTykHr3VdHhnTs
NO0gDnJ+O9i7bd8VN3BE4fuRqQNne6j793dOnLH2pBt8Oj93+MTN192w2+El
4xbvdQv5I1dWLVp/5DaOl3w7vmHReg/p+vWxjdsP3nb/7Pn+vbvPewDvB4e3
7bzprQa5e9/Je29xN/7dvl2HLnrUlj8e3n7gkgdXubFv68HbXsh2U3lCXP4E
d+3ijc1Tk5uvwhGZj2sbWtQOwotPIJ9ntSqpnnDUjQpfaFPVsPiq+8kuDe09
auMDN1C7fWD3qXvcMPqr7bPnbb/o/tn++YPGb3fzU5HDs0bP2unph0frVp78
ywPz3Ti37/BhD9Z/68D+0251C+Tr1QNH/vC8wqvzR095ZXRu7z9w2asz8+Ti
1T88yOebA7u2HHWDbsjnGwfP3fBgg18vnb3lqSGAfHtw6YaX1frnvsMXvPUS
n5w5ft8DkX1/cOWCD+D9/OlzH136P331dl6fv+KlxCMv7j3yAeC+v/AtMPrt
iy/8++39fw5y/+sL3H35CTz98PUnDP1ntPmnr57dsuWQR/8fubdn60lPpyNP
b533gZHvHD1zzwsjPzt68i9vO59v3vHBlO+d8yndibz7x+fi663bz71v9OLS
Fd9yoJ//C0Gb/1v+fhrOf33VmpAvb3xI6i/O/eUT67h+9L7PD7cfeeC9urR2
90OPrs3d5bN3e2XWj46bvtebGzF98JADnuSAy6OGzzv+33+L/61/P2sXvfZl
9b+84FMN+vvBfbe8O9mrzYfuenvlxsZTz7yz6cCqc96OvjVr8SlvUGDrlDkn
vSG/VdPXezX49wztt/CC52p2Y+MUz9Wz3uVNR59xD9D57i0b13iWzeyubfrs
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
n0vXnPQGR9aNnnHYW4NizbyNHiUe5P6ofhMPeoZk09C+U065V/6H4e07TPEU
5n01oFlxx41uoHRFl4ah63FGOfJ+eKuK9mvdu/v92qzsrrvcU35YSWZR933u
5dA5KSq982H8s0s18eGpg9yia7OyIxzpo90HXuvY4Khmi/Gg6JuW0YGRLVbg
kckVOQ5LWN3Wf2Cv/Nsh3GCK7X0Oe8oHuTajJX44Dr2OSQtxuGqRn/58V9Gb
P3xDRDfPPfV++PnA4afetfh8xbbr3iHZPn3LLc/Vl3GDVnq0kZCVw8du9Owz
b3s0r5lyzT0iKyryqid7Nv45NcXNprjT7ZBR5Tl189w1gu92ykxsucitorSu
Ojq6dLY7+tIr2eEsW4LHNT62jQmOrHFj9kcrI0ISO7tDBL1jjMEJPY7itP4S
i1wb1RO3qf4oi4pJar4UH7uBkRqlLmkKdrT8Wx6kUVpS8I6+mm5SyiwVuILP
kCidWBxYfRzThqwNC7SFZ4zAKtK8z7TqZMbMuU8+gG18dLiMJ1RlbngJn7Kl
WSiSGIs2wpLj75P0wgBJYB302ZDtEVIuRxLUFqse2ydUEsBVxo/ECqEXabhs
nqrJIji937WKVrA56pS10No6nG4UsXnaUkw8s7mFx2CIbF2xMcjXclhsSQRU
0kWmhcikWrO9ZKjbmDxenZ9aOccdCO/qCk+qXepePw0p8anNV+A8hU/5IWZ7
wUI86+JJ/8Qga/ZiXPFxS9NoU1DeFnwVTsgwKc1lGJceeZ3psIfE1uOm2MQw
mVBqKN2LTZVmFqFAHNgeZ4rUhCr4IksDppF5sSBMJ5KF9sWy1Xe4jDKhxDkY
i4c1hKp4AbKI0VjaYZmez2SLY+fDjfFDmorLYEuTMQT/Uq5VwubpCiHPGhkQ
zKey+cbmWBWOPBmdROHae0DCwT8ZWqnS4GiK1fMdZ2JTiRRhDKxchxRIGWQy
Q5q7H6zyb1lAwYdjaA1JZMtCAUeVG9L3Nqip29Gqkik0lqSl0OAuM0pEATJD
8npgQNyKRz1ctJEcTAYomE0ik+macqA2jXRU0agkaoCpw3UwU0qlJCKRxrH3
uvvxB/I1FRQRYIoTIf9zkZlJJBDp8sJj4N5z8+xSBommqoLZ/dVOg4hBZAYN
A9Ibt6LkdII/iZewAVhRA+x8KolElTWDNluGiC1WqlRCY2uMnnXWZdDrdVHD
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
MeNvwm8v59v0tvia7dgPr1YnRkWndtyHOWvrEkxaS1o/D5n++Li8MPe4q7jP
f75bZkzpUpwjf2hoZUJyD6zAMvJ+Srua/JZTcRnY573TwqPz5+BaBKfq4sNi
a9bg7uaeLqVFbcYewyGZo33q2zX86hH3Wdy9vGVfj2bPmzWDO9YP3objOk8W
DejWfTaeMIE8X9Kv5+CVeB0E5NKkTl2GrfWUGzw4pG3NyJ04l/Dt6t5tO8zy
ZF0g5+bNWfiXh7N5b/XwIbM2eavabpw8Ye5+L0ZycMbMP455QaS1M5cc8YB3
Hw5uWPXnOY9a/5ntK+ZvuOjB565vXf3nwXueOz44uuOvQ96qsy/PHz5x1wuX
3Di199w1LxJ159CZi8+9wMr148fv+NDQGxcu3PbiMR9v3LjpRWzfXD9/yVca
4P29Szef+RDb97fuva75yaMgfn9cy7Ju6z01Rk+O6Nz7F0/iCHJz4fjx67wq
79tGDpyww1eM9PnsWXt8Ihznl6w6+Mhz9fnI4k0XPWBs47/bdh+55vnq7q6N
a3d6UaRr65auPuEl8l/fdfDYTR80++Dmda9CNPLg9PkLPsT0/qGj//g46w+u
XPWpWn+5dfamH7n3yrlLvn+8uf/g6ceeBrw/s/WYXzWAr+/f+QGy18/f/uR9
duO/l574YY8v7770w+xfPPVDnT8/9Gdpv37qp/+PfPlBz+fbj7Dz/yla9vfX
/99/P3HdO8PeHNl/4q731b5eufrM957fn9196Wv5k3OXf0DYH/5QwvYHFaAf
wfcfW/eDLs+3//GC9PjnrX9I5uUbv9H9cv2BXyOfn7zpJ2Rz6rhfvOTq1sN+
CSl7l+31TfiXS1af9vGzz0yZd8Ab90Imj5h50It4b+nefsJhDzr9cXzbrouv
eKt59Gzbe9WNH3r/v8/nh9nzozjSq7t+Hfb3KT/q/scjh/zKIb/autevnsfl
pX9c8N7027y5Gy55LezWYcNX/+295y8NE1Zd9UqrTR0ydbvXYOxv6DRinzf6
Mq2mauhOjy7Z04FVZb23ebIPNtQU1E87/Bp7euO40uyqUX971OBaxkXlDfWo
p60ojnRmjPbo5kwtTEyunnsVe82nte641HZr8V1hTUFiTHqPbbilGZIaGZvT
7zB2k6+1MaGRGYNxDaKN2aH2yILpeJyhc6hOE1S0AttNXqbrlbqYVhglAvk9
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
7CjmPR2uS4xOqf7pH/iz7382j4vP6LYCE/5BVlamZ5SN3435nu+X1JVW9178
N/bVzbl1pc17/XYDc2Cf/dSptsekvx5ierEnRta17DnnGHb/7wdG924YtxkH
h15uGdl35CIc+Efeb5nQb9zvN3FH/t814yZM2Yajwt/OLpo6e/0/HmL1yV/G
z92Gy+QgV1dPn7V4mzywI8ape1Fuk4jUCWMw0eNHVTapRBs/+RZ8zxPZNrnS
VrQRc9YuNwtSmxw1O7E3+73QbjAk9MNJe79XhdscGRMxvhAyN91pj6z4HUOF
X4xNddpju/yF+XifhmeHRaUMOfQWtuFqv8z4jI7rcPj45vCc1MIeO3FsYG/n
rPTmUz1U9L/6lDer+8Xj/58c3LJ1vzW47/lxY7fmbWftwsG1T792btVl5jEc
Uri/qGPLnks8iqc35vZsGLUNxy6/7p7Sb+hCnPeHfNo6dfDkDR6YvnHnpPEL
9nkU/1/smDNl6REPj/HG0l+X7fbqn5z9Y+Gqgx7s8sveNUvXH/Kw4L8eXL9u
v7fM7MujO3Zf9cKBz/fu3nrJC3i/OXXi9E0PgPXhwv4dF3yi63eOHL731IsG
Pjtz7cF779WtUxd9WjLfn1y+52Ns3v33sZ9cxvNnt314z8c7V++9bTf7EN5h
t8dVlXVf5hH+vT6tXVXDSs9cOTqprtXEHR4g5+KcPgMXHfdAPgen9xq24gL+
+I+H5o2bv80r5LBt9pQ5Xsn/zzuWzVztyepAXu5YMm+VNyjwYtPqP096Myve
Hvpz22kvpPTPnxu2nvZCSo+PHjzqk5u4dODISZ+U+Y0DB3wY37trJ49d82l9
nz70j08x5v2/p/955e2+B8cv++Gzby/c9cOxH1994AfdPrn12o+7/+jWOz98
+gfJ+i+v/bHw/1Sy/v8K7u9915O3vBPn4YHj//r66+mRA0d9Pfv44klfYgry
7fY/fnkQLy5cfuTrh8ZLj/w67OX9x37te/HMT3sdefvshz768fNDj/3fC438
B5//ZDyfXfATSkFe/5Aacf6m39Vfy4758nmQa7vO+xbt5SXrznvLjLz9dfJC
L3UfeTVv/BKfvsqqnl1meUXEno/oNuA3bzhwW33LhvXeHJfhlWX9N3pyA+52
zi/qt+3JD7GV/zafT/6vderMU7+rI2ee+C7ubdrnJzd1ZM0x39S6uWz9ZV/M
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
z53Ny1bvuebBeG7v2LT+pGdkP57YtG77mUcEbvrPmW827bviQbBenDj07Qlv
UuDDieM/P/Jisu8vHT3rK1m/c/TE5UdeOOvx2Z9+98KGLX+cuPTHOw86+v7e
b7f+8iLjLy+dvemrM35y+Z5fYfWXm7cf+5VZz69ok9OPkGdA3yyoLOm88Czx
wLtjqqoHbCCyVejFWd26TDzu4eI5P7tP46Ijnpc9NGPshDUXPBjm9W+mzj90
iXijf35aPnftHi+YfGb9mu+96P6b3Zu2nLjl+dWvj67fcNiH7v+058hFL+R3
f+/OIz97UdF7xw6fu+F9h7/3HTzzwIuR/nz8hJ8i7Z0zftD101OnrvrI5/8+
/9MDf0b+q745QB9d//2pF/5GH1+77wfd3rpzz49O5/YT/1rvF69e+4qVW14+
86NZ+fLurR9w/OH/Y8W/5w//Bc0n9hy46kUD35/fc/p37+p79uPZ6740wOef
z/mx9TefuXjDl056efcXn8Yn2nL/dz9F1i8vfbLT2N/H/9508/+Xf/9uT/jX
5L71XyEPz9x66VsHf17zk1n+5+R5P9Kln77e7VXGQN/vXPnVBe9tHo0Yt+13
rxlYPnjIuiue/52fOHjCdm/J+qLe3SYe9diB1yNqu0zyMp1tqqvsvuA//3r/
7//+0+v/2W2/KvWXh8/7gdVXt5z2ZZHerF592LcGn32z7ZrvezvXfO+F7NHn
k8fMOOPdwt8M6b/CK2DePH3YJK/iO/rXhAGjtnsR75WD+k72MMqjLb2LKpq+
9ehanKgprx6133M1ubKobMD3BPHap/rkyIx+HnT6QmlUWHL/U+/w3zItPbZN
x/lXCSMxPD0yrWot8QbnChwWZ94yIuU/NzciJDh/LSFJMjjBpHd03If/lKvt
o/TasJ6n8Qf0cwVbw1In4zu4ucikVARlzcLN5tYkrRIx5K7Gt3rPMKPRGuXf
ioK++Vfq6g///1047usQQl+fO+dHsLRt8aqTvnNn9rBZ57zL9M3EIbOOea82
9qmf4u0U+NSzsKyfJ1mPXqks7jrygmexL+pU3mPWr57l3S83K3/CFeIB59pG
hSaNJGrP0b35TlvqxF+Jqx7u4KDEJqIb4Fl5UmxyzVeEWduc7opP6rKdMEn1
ETqtOYdgqf/UwaHTh9QcxW3S/lSzNTipkRjMeQkOe3jWsKv4wytCbGGRGfPx
+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
fjp+zzc4pzfu8ePg//nb87567OvzNx32JQD3zll42KdLvWTC4oPe/XVgZK8Z
P3rx1VVTZn3vlXM40K1jj/leO7O6tqxxnYdoqGVC57pZR/+tkfzf5e+zPykW
ZqD8mmreXT33xPfPxwcv+Mxhy441B3wyJ+j2jb5+IfTuiq8v+4b26xlT9njZ
fW6O6z35lPeT+0dM3vKzZxP/Nblx8IKfPMP3cFS3vqu9ecljvWsal93wStd2
LOm5iOBER891b1vWY6VH1mRCZUH7gfs99q8h1hpW4WHwedrWZgrtsI+4Ol2e
EJs5zJOR6B7jiEwdThAGve6YFB6WMZMQyvm+yGUNSp5DzOTM1CBDUP4qvHnp
dWVyYkLugNO4TZoYrpAqHN3P4MthYJhSoo6b/Af+tNoIkzW6eI5PwQX9+Jf/
Ej57yX8/377jt4T/OHjJL613dPsF39XPS2Z/6+u+mj940lZvvuX1yD5N33tP
uZU9Ow/f4zXT9bnZnVd47rKrJD6173aP3VncIbOszz7PqTDYHRHbcRNx1Tws
P9rd+wixER5XueyhHY8QM3m9S2y4u/854i49k1zu/ElEwuByhkmtCR1M9HMO
TzBrLWmL7+E/umuUNTSp82o8k3E63xkcGtOREE7ekBhsD09pOIk/fGC03WZ3
D7wA87wvOkRarM7Ufjg9zfp4s9UWko4LZaFdHCazNapgGb4yc9VcFleRuACO
w/tUJYfBU2bjkgxfxRg1KoOrF866X6uXSKRI8OAroJPjWftIu1GmTJgHJYMO
FUUYhRxF4nog0og5/qFKPleRBukZP2SZzSaLLb4/bH1ZHcSlkKkgxAUfHBIs
oFLYSlhDiqKVdqUY0QS3+8EzzgMSw6LKt3iuOoRbYxo8KcPXVSlJecNPEGt9
Z0mb1OKhnvKJASlRaeXjPJ1/NTFhwUkDicqUY7lRoVHpEwiCqsnJdrszczRe
KP6pbbBeZ0iaiedNXiUoBSIkaiZemTTXKebJgss34NPaFG03WmPLtuIdGUV6
AZunTFgECbferuuTYdREdP4BspR+Hp1j5HI1eXiV+vMlZQ6JOLg3ThFUEWow
GK1Jw6CD8toloAaQubZRsJRjdZSCQ2VIoxfB3sneJpFAjoUumyBjbppaodHo
I6pg887rBCUi01gi+sJuz4VhSkQu18WMuPkGaBCGaOQKhTV5HpzydK0U+15Q
NqDuRs+FSUUyucpetB8oBSw00FoHBFLlaYfB0m8wsEBHvaIWGo58hViGKPTu
SWDH3I7gMtgMGj9q+VNAT5AdFRcpYkpz9z3FzsumtOgQCY2u6HwZvOrAEpdZ
yKAbhwB0f5ED0apVGmv2d6CxK1MAgnmyvOwI5gr+kyVnkgPIAtdgwHL2Yxwi
EUokatcYgoSxRs9nMiWJOEsPWqzh0llIzl64nj/mWAw6W0x3mNZAzyaZtYag
+AE/wykf7NRoDAbXQLzspjJIqVDpE4ZDLPljukmr1prjR0G5ustxeoVaF5SE
d1101IslAq4sYQtci8UIk0ymilNh+8Q/SRI6lat0doZW62q0Rq1Um8O6wsdN
trCpFDpTXgRbprbNn10TpjLGj4GJs/0jymw8GscyCdD6f964fmiinCVrA7X+
loZqdHq9xpANWYdKhYCCgiLKBZWoaI5GzCCT6eqa69jjnkbyBTKlSuUcDkal
0ShS6A1mixvyDNRoxRKZUmMu2AO+VqATKxApYikHUNyjcESpV8l1kRAGnOWQ
IIhWq4mdBXzSCpVQKpfJte61wAC04bQODAggcWLAqz6K5tIDAwPJ0rbAym+w
88UKhVIX0R9knToidCqVzhVGzAKroU9OTkEYnyZK/v5lM/q0Q0pWpJjOVHUC
59TdnhWZYVI6y9gEvlamURpUWp01dTkWAH2MAVXvFJq8cO9j7NBw8lkUMk3k
7HHhXQs6IkgkEoik6qght+DMzVRTQVG0qAAUZKPd9bAPQl4PT7syvVSh1mjD
8NaNFIVcoVQZ01aBQWmOBprAiC5pDdiRF4KAZgViSPsWrO4BegGiUqo0+UDP
FW2rQRSIQh3U/sqrZvShkyUSCxh0pBcI9u46Qe05jWkcBE60KSZAKC/Xxi0H
kW0XrVwmVWuMSTAHUQTLpwMZoVBvuWnwgmmJMqGmA8znrJ49NFtFo0jaAyP8
eNORFR3UDKa5L+hgaNTJNSqNQhk8Axz6GazWrVr9j1Y0JxBO/ZimlACuY1bc
npef0EMmplChVCvMFcC89VQLpAq9UetsArFfsUwglcpUmtjZIK5KkykUMuwy
A9juE0FclU4mU1srTr78gtZrZQq5XKkOGwL5fCRCRCWXIBFTgblJpP2PVq1a
taaHA/Lpa04WldS6VaAgA3BW7whiC0USudJaAyhcyqWkgNYkoIZ94+0XdExJ
aYqGReXGzv3zE/qxLDXNISDTkEJg6n5tqil2SqgcY48L2Gqo1CIKmUJrc8/B
3vSfBEYgtuMZ6rytT5pbvnJyGBQyA4ms+flV8+cJdiGfwxNr3ZPxBF6FgEIn
kSj0kG/BOBcrRKCtg+WGXZIpiEypVinNnUF4/84pQpRKjcY5BPR3H3dIgMi1
NhKujcEaCSJXabQuqBFeKhXKFWqlInE7FIyVKTRqlTqoAEDS50wcbP8zKPwS
UNqywcJn0wB5VVeQIqpRsGlkpkzlnA5uUoI9WKHRq2OWgBlPYwNeMwrTMRfU
/49oWjc3XsgQZ0H5xRWL1vVwsKlIu9PY0D5YdWhJjkrA1Q68DayNWgbSOdqI
2fffo80xYL5bB7Bd27HNdKuNRgQosET5QK9puI4h1ipV6pA+IK/dTi1Saqwh
+sTpgHAjXSwAC9iQAdL7b5PUajV2ApjaHcFGfaFVrFLJFfrQngCg6GbC9r9c
oUuaBlZbKSJUqBGFLmMd2C8p7FaANkucvgM73a7HQlIwlr49KNc94eRhe0mp
i6z/5fUXtKeBCjppxAlQMH5+dUGolMXXlwG2wldVyWFaHlsS2QvU4z8Y3S7J
KBRq0xeA7GHvEINGrTFHdNgFFXXFdAadj7j6nMVW1GmXjCcQy22Z80B0sD0B
EQpESnvJVtzgZ7CpoH2C4YR1yslSHrYaSAzI4PTaJUEwG6wJ6gyqos/bxHK1
Dsw/wM0XWhG13qA1RMCmgn56zGXBTC3Mm6GFYqFcpkA0aXvA9KTKFRqdQmku
AdJHx83YWsfmUlgBqgO/tfGZlMBAElIPILY6PZMcSBWpYpaDI6yHRWMOUspV
KXD4ikTYVAHzuR50MS9fvrGLjUkVtYXFC6unf9XDRKcbGgFUfmPF5v5WzNOy
TQMIeKNJJFGo1MY04Di+T+O0AoRU4hyAXX0p0nAwU0fTdQGNXBfD+NgkK/Xu
cYBreVCwRCIPCrVmrwRPazAKgeqOHeesr47G7JlKG14PDMW9HIMCO/gsCeNA
evJ0nAqzBfrgoo3Ag5nqVKi1Gl1kzakXIFdtoJFITGFId8Ci+LqtkUlh8NSu
8eBrr7LB7tE48hYAJ+JAjIBBZYmsHQ8AotZddQl6EbZZx8Ail2H5TqVQHpK/
ArbITs23KxFjTM1O0GN/IjtMrzMFZw2H0OK0YBFfpHDkzYVZ87owLXZ8xdZu
h3FQt1CNWmtNbiJYR8uxA4VOo7DawDRggZxBw44Dbj4ke8xQIUC12TEU2NL7
cUpsNWgNcdCWXnWpVBqlypAMy4H3x8gkmOdjyoRtpAMNmOMjVwRVQpyuRxC2
MtSayP7XsQH7K00mFHEYHPs0UJr+BJTnk8ic6FVgn62M4lMCaVJzBWwbWRan
C4pQy4PrYJH0GAtwFAR2HDC+vrVnmJDGc06AxT6bx3ZNkHOVycvBOfvPt1Pd
MgZbnQ/bW39PNqoQrSG2L/QGB9s4FDJFGD4cVi+Nj5LSaWxl5moAj36oDkJU
GlNMt12gAO9BkUOtMoW7m6BHfi/LpFYbnNkzYAvz6YpgpcYS3XkbhF9HJdow
/7JNjwPAx3tdF202R7hLp8Gf9aFdtMMRGl22HBK6XM40iiTa6Ood0O/ZkqpX
aJxZjTiIui41PCTEVTAGVuC/rY82m4JiylZC171lclF0aFRh36MwNnzbVBQe
kth+3DU8XOuRFhOX12M11HNG13dKT8gs6X8I3v/T4PTo6KTSiRdxKa3emanu
7J7LcEm5B3V5aZllfQ8/xwOyHWEszFegyivguy4LE9BIgVRNI+yRHhGtVahU
ppSl0CPvFa7RqA0hpTvhI+qcOoVc4+x+DrzClwqbQqkxRfeCDedPklUyRK5N
wlffL7l2U5DRUbgBvuukKGyPKCztj8NYZ2i0gs8RWbrB1upP3ewSjjgoaxpe
qN6QGBFvtxeshYDu5w4ORKJ2tiOCw5/qolTK8OrTeCjyXadYi8U9AqdTfzQ/
x6Sx5szAYfQpGbFhkak9dsLhu1cfZdCaEwdCTwd90hBl1Nuy5kEnFf2xMjYm
Ma9+Iy4KvKMyMTqheAhR/7+yODExo5zg/2/5ujQlMbfnBrww7+nIwuzU4kai
rP+XQYXZFWOWE6wwp3t3bN+xfiUedTevr87OLB2ynQAf1nfOL+k2nWAP+rh5
cG3n+mVX8K9dn9qtuna4R/+veVVjz6FrPdQAf8+q7zv661tERH53WtPQaQc9
3AMX5wwes8jDx35j4/D+47/x0Lj/sXHS8HnHPLDRjQ2rp27yRu4vqmxittCQ
gxMUfap1qiRyWw0OHDzsHh/pCM+agjdkPOiRCASkF+Gh252auFBnIhaCwasj
ZQmuuJy+R/GIb1lOdGRk1gRcWfjLuo5ZaRllhCT109EFca6UrjvxAXvelB0V
nth9B84Rc7PRHRZfPp0oen06srK0oOM6fHrQX3tnpWb3+cGD3cxtm1E09jCB
BzWPbVfQafZ5Yozu9yks6PM1QUH095aB3frNPESAD9fmNlTWL7hE4CyPxtfU
jFnv0d38cfG48QuO/kmgFFcWTZi09iwxYh+OLZ64YMdlDwh3fsW8Zce8pECH
Fi/56rQneP7r0LLtpx551X2P7tn3kxda/nHr1u0/ej747vrub87c9cKh1348
dfY3DxL117GD+6889SIyty5d9ml8/vP72Ws+iPvBL+fu+HDs17fv+Chu0Fu/
3PQjn7939aEfTPnk8TPfv/4aU55eONiDs7xY0LV9l5mnibzGyzl9Gkbu8Igv
f9g8qv+UQ56001+rRzTN+9GbFFgxYcp6D3vwp8OzRk//7levpvLmuQsPeBoF
Hu5ZumDTWQ8zyb2Dy2ZvOOsZ2UffzP3mpKfrAr1/7oftP3t0NtF7P6zf51fW
f3Xn0Uu+Ivwr+0/e8gLZb3/ef8FHT33t+kUfuv/h4okTPhKWvw6fOO9tg8GG
9t5fPqD+5V/+Ff/vfr3nh4L9ed+fFOj2rZd+SYEP/qh2y/t/Qfj/zhf4k5r/
//l7ewPuwpcHt+/39Vl8vnry+O++V394/doLH876/M5TP6Tw3h8+YVr07d0H
j33j8Or+b/5k4s0v/ChFXvz10n8cnr70u+XDf6kBfH7uj0Si/0VtA/8LZdz7
f/otg5ZHz/zr0i/7gfvo5XN+RP4vtxy44bvpmVUnvDoZ6Mcje477MNTHq1cd
96qBo1uGT9nkE9aeM3T6Qe9w72yqx6yf5wlru3Wd7C26fjG9X+PyK57Hre1a
Wrv4hucmA3Lzq7/zzMtPtekp1f/xq/5X/z3xzw01v/Ibyy9Xzvp1llzdsMuH
XH/YtGSDl3QG/WXkqE2/eL94fsmiA15RkA8zBi846l2DB7p3HLD5psdWTq4s
67XTY2I/DCoo6ucFnU9WJmc1emhm0Bk5riyP1A/mDmFuQNOJZy1w0R9sFxeZ
PewSMeyz8qJdJTNuER/sFmF1FK4kDM2OdJsxtHgdcXxMS4uKTu2zm3j1PqmR
MRn9CKfgtxyT1hDWG5cgQtekmrSWxNF45yLa1alWGdqsePAB3PNm11iL0lyw
Azeiu/MjHKHJfXE38EtHs1quCO6BL4eWbJNcrIqdijdw7U82yMQa/0Ym9Jd7
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

        "], {{0, 512.}, {512., 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None, 
        MetaInformation -> <|
         "Exif" -> <|
           "NewSubfileType" -> "Full-resolution Image", "ImageWidth" -> 512, 
            "ImageLength" -> 512, "BitsPerSample" -> 8, "Compression" -> 
            "Uncompressed", "PhotometricInterpretation" -> "BlackIsZero", 
            "StripOffsets" -> 8, "SamplesPerPixel" -> 1, "StripByteCounts" -> 
            262144, "PlanarConfiguration" -> "Chunky"|>|>],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{512., 512.},
      PlotRange->{{0, 512.}, {0, 512.}}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.940021833340876*^9},
 CellLabel->
  "In[140]:=",ExpressionUUID->"0aba06a4-18bf-4471-91c0-1a82bcbd1da1"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.940021828189033*^9},ExpressionUUID->"2d852f49-9783-4dc4-bf1d-\
8ce9f64b2c2d"],

Cell["We  can work with Graphs using Esc ue Esc and Esc de Esc.", "Text",
 CellChangeTimes->{{3.9400211900403976`*^9, 
  3.940021204624771*^9}},ExpressionUUID->"35f192fa-a880-40a7-86e7-\
46a37c7079cb"],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", " ", "\[UndirectedEdge]", " ", "2"}], ",", 
    RowBox[{"2", " ", "\[UndirectedEdge]", " ", "3"}], ",", 
    RowBox[{"3", " ", "\[UndirectedEdge]", " ", "1"}], ",", 
    RowBox[{"2", " ", "\[UndirectedEdge]", "4"}], ",", 
    RowBox[{"1", " ", "\[UndirectedEdge]", "4"}], ",", 
    RowBox[{"2", " ", "\[UndirectedEdge]", " ", "2"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.940021205669039*^9, 3.9400212182927027`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"5c3fb4cb-8701-41d2-8b62-d6b89b71a3e9"],

Cell["\<\
Table  is  used  to  create  a  list  of  values, and  it  is  one  of  the  \
most  used  Wolfram
Language  commands.\
\>", "Text",
 CellChangeTimes->{{3.940013655808117*^9, 
  3.940013661246111*^9}},ExpressionUUID->"17d383c0-20e8-44e1-ae0a-\
937caacda239"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"i", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940013668081862*^9, 3.9400136680827703`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"7d1225c5-43fa-4a51-9558-fa0d873ed64d"],

Cell["\<\
% represents the last calculation or the last output cell. Namely,\
\>", "Text",
 CellChangeTimes->{{3.940013682413878*^9, 
  3.940013694125304*^9}},ExpressionUUID->"bc08bee7-4e83-4c80-8b60-\
6c89a97559d5"],

Cell[BoxData["%"], "Input",
 CellChangeTimes->{3.940013695975253*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"3e4758b6-1434-4de8-bf6e-bbd0b1a905d8"],

Cell["We  can  plot  this  list", "Text",
 CellChangeTimes->{{3.9400137078696423`*^9, 
  3.94001371355691*^9}},ExpressionUUID->"fb96cdd9-56f6-4481-8960-\
dab5ac5edc46"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "^", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9400137049086018`*^9, 3.9400137049093103`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"0eb1943b-2d1e-4650-be76-5099ac66db4b"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Prime", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "200"}], "]"}], "]"}], ",", " ", 
   RowBox[{"PlotTheme", "->", "\"\<Marketing\>\""}], ",", " ", 
   RowBox[{"Filling", "->", "Bottom"}], ",", 
   RowBox[{"Mesh", "->", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9400147464675922`*^9, 3.940014816404422*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"1eb44261-ef04-4546-91b1-cd54465da55f"],

Cell["And  do  the math (diff, int).", "Text",
 CellChangeTimes->{{3.940013728023987*^9, 
  3.940013736482953*^9}},ExpressionUUID->"ff538fba-9366-4268-b94a-\
a52e90c25a71"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"integral", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{"x", "^", "2"}]}], ")"}], "]"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "integral"}], "Input",
 CellChangeTimes->{{3.940013738439151*^9, 3.940013793644504*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"ce1239ab-e385-4360-ba0b-c393733f84d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"integral", "/.", 
    RowBox[{"x", "->", "\[Infinity]"}]}], " ", ")"}], "-", 
  RowBox[{"(", 
   RowBox[{"integral", "/.", 
    RowBox[{"x", "->", 
     RowBox[{"-", "\[Infinity]"}]}]}], " ", ")"}], " "}]], "Input",
 CellChangeTimes->{{3.940013783323736*^9, 3.940013822715088*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"38764eb5-fc2c-47b7-b3c0-500d474e5ddb"],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"\[Sqrt]", 
    RowBox[{"Tan", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940013838513583*^9, 3.940013852592072*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"f9676773-8406-44f3-9aa6-ca0cd908513a"],

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", "1"}]], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940013889902549*^9, 3.940013925324748*^9}, {
  3.940013977655772*^9, 3.940014044472227*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"9e915d69-1683-4f09-85eb-dbc7dbb6e538"],

Cell["Now  let  us  cover  a  bit  of  managing  data", "Text",
 CellChangeTimes->{{3.9400140878345757`*^9, 
  3.940014098489566*^9}},ExpressionUUID->"da38ba69-4636-4579-8779-\
4991c451f05c"],

Cell[BoxData[
 RowBox[{"CountryData", "[", "\"\<Colombia\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.940014226595487*^9, 3.9400142328767643`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"e45cfc6d-3f5d-41d9-b7bf-4eafd5f7b573"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"#1", "\[Rule]", 
     RowBox[{"CountryData", "[", 
      RowBox[{
       TemplateBox[{"\"Colombia\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"", "\"country\""},
        "Entity"], ",", "#1"}], "]"}]}], "&"}], ")"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<GDP\>\"", ",", "\"\<GDPAtParity\>\"", ",", "\"\<GDPPerCapita\>\"", 
    ",", "\"\<GDPRealGrowth\>\"", ",", "\"\<GDPSectorFractions\>\""}], 
   "}"}]}]], "Input",
 NumberMarks->False,
 CellLabel->"In[62]:=",ExpressionUUID->"c9e59606-34e7-4a58-89d8-6794aa27ccf5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"#1", "\[Rule]", 
     RowBox[{"CountryData", "[", 
      RowBox[{
       TemplateBox[{"\"Colombia\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"", "\"country\""},
        "Entity"], ",", "#1"}], "]"}]}], "&"}], ")"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<NaturalGasConsumption\>\"", ",", "\"\<NaturalGasExports\>\"", ",", 
    "\"\<NaturalGasImports\>\"", ",", "\"\<NaturalGasProduction\>\"", ",", 
    "\"\<NaturalGasReserves\>\""}], "}"}]}]], "Input",
 NumberMarks->False,
 CellLabel->"In[61]:=",ExpressionUUID->"d4c25181-7fd2-4be6-ae54-664c42ede820"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "caffeine molecule", Typeset`newq$$ = 
   "caffeine molecule", Typeset`chosen$$ = 
   "Molecule[Entity[\"Chemical\", \"Caffeine\"]]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "caffeine molecule", 
                  Defer[
                   Molecule[
                    Entity["Chemical", "Caffeine"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Molecule", "[", 
                  TemplateBox[{"\"caffeine\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Chemical\"", ",", "\"Caffeine\""}], "]"}], 
                    "\"Entity[\\\"Chemical\\\", \\\"Caffeine\\\"]\"", 
                    "\"chemical\""},
                   "Entity"], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Molecule", "[", 
                  TemplateBox[{"\"caffeine\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Chemical\"", ",", "\"Caffeine\""}], "]"}], 
                    "\"Entity[\\\"Chemical\\\", \\\"Caffeine\\\"]\"", 
                    "\"chemical\""},
                   "Entity"], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Molecule", "[", 
                    TemplateBox[{"\"caffeine\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Chemical\"", ",", "\"Caffeine\""}], "]"}], 
                    "\"Entity[\\\"Chemical\\\", \\\"Caffeine\\\"]\"", 
                    "\"chemical\""}, "Entity"], "]"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "caffeine molecule", 
                    Defer[
                    Molecule[
                    Entity["Chemical", "Caffeine"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Molecule", "[", 
                    TemplateBox[{"\"caffeine\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Chemical\"", ",", "\"Caffeine\""}], "]"}], 
                    "\"Entity[\\\"Chemical\\\", \\\"Caffeine\\\"]\"", 
                    "\"chemical\""},
                    "Entity"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Molecule", "[", 
                    TemplateBox[{"\"caffeine\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Chemical\"", ",", "\"Caffeine\""}], "]"}], 
                    "\"Entity[\\\"Chemical\\\", \\\"Caffeine\\\"]\"", 
                    "\"chemical\""},
                    "Entity"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Molecule", "[", 
                    TemplateBox[{"\"caffeine\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Chemical\"", ",", "\"Caffeine\""}], "]"}], 
                    "\"Entity[\\\"Chemical\\\", \\\"Caffeine\\\"]\"", 
                    "\"chemical\""}, "Entity"], "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[70]:=",ExpressionUUID->"9b768858-b999-45c9-a0ed-870dea06f7b5"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "toast+orange juice", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", 
        "EntityGroup[{EntityInstance[Entity[\"Food\", \
{EntityProperty[\"Food\", \"FoodType\"] -> ContainsExactly[{Entity[\"FoodType\
\", \"Bread\"]}], EntityProperty[\"Food\", \"AddedFoodTypes\"] -> \
ContainsExactly[{}], EntityProperty[\"Food\", \"CompleteItem\"] -> True}], \
Quantity[1, \"Items\"]], EntityInstance[Entity[\"Food\", \
{EntityProperty[\"Food\", \"FoodType\"] -> ContainsExactly[{Entity[\"FoodType\
\", \"OrangeJuice\"]}], EntityProperty[\"Food\", \"AddedFoodTypes\"] -> \
ContainsExactly[{}]}], Quantity[1, \"Servings\"]]}]"}, "ExtrusionOpen" -> 
      True, "Formats" -> {
       "cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Data", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FormBox[
                TagBox[
                 GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    "\"bread\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], {LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center], 
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"amount\"", {
                    GrayLevel[0.6]}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["50", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50", "SRString" -> "50"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"grams\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    StyleBox["\"type\"", {
                    GrayLevel[0.6]}], "\"toasted\""}}, 
                    GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 
                    Automatic], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  ColumnsEqual -> False, RowsEqual -> False, 
                  GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                  AllowScriptLevelChange -> False], 
                 $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                TraditionalForm], "+", 
               FormBox[
                TagBox[
                 GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    "\"orange juice\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], {LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    StyleBox["\"amount\"", {
                    GrayLevel[0.6]}], 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", #& ], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"c\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "  ", 
                    StyleBox[
                    
                    RowBox[{"\"(\"", "\[NoBreak]", "\"cup\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  ColumnsEqual -> False, RowsEqual -> False, 
                  GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                  AllowScriptLevelChange -> False], 
                 $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                TraditionalForm]}], HoldForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Total nutrition facts", "scanner" -> "ExpandedFood", 
     "id" -> "NutritionLabelMultiplePlus", "position" -> "200", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"serving sizes (total: \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["298", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "298", "SRString" -> "298"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\")\""}, "RowDefault"], 
                    FontFamily -> "Roboto", FontSize -> 11, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TemplateBox[{"\"       \"", "\"bread\"", "\":  \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["50", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50", "SRString" -> "50"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False]}, {
                    StyleBox[
                    TemplateBox[{"\"       \"", "\"orange juice\"", "\":  \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", #& ], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"c\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\" (\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["248", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "248", "SRString" -> "248"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\")\""}, "RowDefault"], 
                    FontFamily -> "Roboto", FontSize -> 11, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {"Rows" -> {None, None, None, 
                    Directive[
                    Thickness[10], 
                    GrayLevel[0.5], 
                    Opacity[0.5]]}}, GridBoxItemSize -> {"Columns" -> {{
                    Scaled[1]}}}, GridBoxSpacings -> {"Columns" -> {{0}}}], 
                  "Grid"]}, {
                 TagBox[
                  GridBox[{{
                    ItemBox[
                    TemplateBox[{"  ", "\"  \"", 
                    StyleBox[
                    "\"total calories\"", FontFamily -> "Roboto", FontSize -> 
                    11, Bold, StripOnInput -> False], 
                    StyleBox[
                    "259", FontFamily -> "Roboto", FontSize -> 11, 
                    StripOnInput -> False]}, "RowWithSeparators"], 
                    StripOnInput -> False], 
                    ItemBox[
                    TemplateBox[{"  ", "\"  \"", 
                    StyleBox[
                    "\"fat calories\"", FontFamily -> "Roboto", FontSize -> 
                    10, StripOnInput -> False], 
                    StyleBox[
                    "20", FontFamily -> "Roboto", FontSize -> 11, 
                    StripOnInput -> False]}, "RowWithSeparators"], 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {Left, Right}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Rows" -> {None, 
                    Directive[
                    Thickness[5], 
                    GrayLevel[0.5], 
                    Opacity[0.5]]}}, GridBoxItemSize -> {"Columns" -> {{
                    Scaled[0.5]}}}, GridBoxSpacings -> {"Columns" -> {{0}}}], 
                  "Grid"]}, {
                 ItemBox[
                  TagBox[
                   GridBox[{{
                    ItemBox[
                    StyleBox[
                    TemplateBox[{"\"% daily \"", 
                    
                    TemplateBox[{"\"value\"", "\"*\""}, "Superscript", 
                    SyntaxForm -> SuperscriptBox]}, "RowDefault"], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    Alignment -> Right, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {
                    TemplateBox[{"  ", "\"  \"", "\"\"", 
                    StyleBox[
                    "\"total fat\"", FontFamily -> "Roboto", FontSize -> 11, 
                    Bold, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4", "SRString" -> "4"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, Bold, StripOnInput -> False], Alignment -> 
                    Right, StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"     \"", 
                    StyleBox[
                    "\"saturated fat\"", FontFamily -> "Roboto", FontSize -> 
                    10, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["443", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "443", "SRString" -> "443"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, Bold, StripOnInput -> False], Alignment -> 
                    Right, StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"     \"", 
                    StyleBox[
                    "\"trans fat\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{"0", "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    FormBox[
                    TagBox["\"\"", 
                    $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]],
                     TraditionalForm], FontFamily -> "Roboto", FontSize -> 11,
                     Bold, StripOnInput -> False], Alignment -> Right, 
                    StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\"", 
                    StyleBox[
                    "\"cholesterol\"", FontFamily -> "Roboto", FontSize -> 11,
                     Bold, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1", "SRString" -> "1"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, Bold, StripOnInput -> False], Alignment -> 
                    Right, StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\"", 
                    StyleBox[
                    "\"sodium\"", FontFamily -> "Roboto", FontSize -> 11, 
                    Bold, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["270", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "270", "SRString" -> "270"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["11", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "11", "SRString" -> "11"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, Bold, StripOnInput -> False], Alignment -> 
                    Right, StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\"", 
                    StyleBox[
                    "\"total carbohydrates\"", FontFamily -> "Roboto", 
                    FontSize -> 11, Bold, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["53", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "53", "SRString" -> "53"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["18", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "18", "SRString" -> "18"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, Bold, StripOnInput -> False], Alignment -> 
                    Right, StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"     \"", 
                    StyleBox[
                    "\"dietary fiber\"", FontFamily -> "Roboto", FontSize -> 
                    10, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4", "SRString" -> "4"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["15", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "15", "SRString" -> "15"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, Bold, StripOnInput -> False], Alignment -> 
                    Right, StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"     \"", 
                    StyleBox[
                    "\"sugar\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["23", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "23", "SRString" -> "23"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    FormBox[
                    TagBox["\"\"", 
                    $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]],
                     TraditionalForm], FontFamily -> "Roboto", FontSize -> 11,
                     Bold, StripOnInput -> False], Alignment -> Right, 
                    StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\"", 
                    StyleBox[
                    "\"protein\"", FontFamily -> "Roboto", FontSize -> 11, 
                    Bold, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7", "SRString" -> "7"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["14", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14", "SRString" -> "14"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, Bold, StripOnInput -> False], Alignment -> 
                    Right, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {Left, Right}}, 
                    AutoDelete -> False, GridBoxDividers -> {"Rows" -> {None, {
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.5]]}, 
                    Directive[
                    Thickness[5], 
                    GrayLevel[0.5], 
                    Opacity[0.5]]}}, GridBoxItemSize -> {"Columns" -> {
                    Scaled[0.72], 
                    Scaled[0.28]}}, 
                    GridBoxSpacings -> {"Columns" -> {0}, "Rows" -> {1}}], 
                   "Grid"], Alignment -> Center, StripOnInput -> False]}, {
                 ItemBox[
                  TagBox[
                   GridBox[{{
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"vitamin A\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "6", "SRString" -> "6"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"], 
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"vitamin C\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["155", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "155", "SRString" -> "155"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"calcium\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["21", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "21", "SRString" -> "21"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"], 
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"iron\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["13", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "13", "SRString" -> "13"]], "\[NoBreak]", 
                    StyleBox["\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"vitamin D\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["18", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "18", "SRString" -> "18"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"], 
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"vitamin E\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3", "SRString" -> "3"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"thiamin\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["24", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "24", "SRString" -> "24"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"], 
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"riboflavin\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["14", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14", "SRString" -> "14"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"niacin\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["13", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "13", "SRString" -> "13"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"], 
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"vitamin B6\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["11", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "11", "SRString" -> "11"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"folate\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["27", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "27", "SRString" -> "27"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"], 
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"phosphorus\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["14", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14", "SRString" -> "14"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"magnesium\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["13", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "13", "SRString" -> "13"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"], 
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"zinc\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5", "SRString" -> "5"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {FontSize -> 0.9 Inherited, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"]}}, 
                    GridBoxAlignment -> {"Columns" -> {Left, Left}}, 
                    AutoDelete -> False, GridBoxDividers -> {"Rows" -> {None, {
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.5]]}}}, GridBoxItemSize -> {"Columns" -> {
                    Scaled[0.6]}}, GridBoxSpacings -> {"Columns" -> {{0}}}], 
                   "Grid"], Alignment -> Center, StripOnInput -> False]}, {
                 PaneBox[
                  StyleBox[
                  "\"*percent daily values are based on a 2000 calorie \
diet\"", FontFamily -> "Roboto", FontSize -> 12, StripOnInput -> False], 
                  ImageSize -> {Full, 15}, ImageSizeAction -> 
                  "ShrinkToFit"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxFrame -> {
                "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
                    GrayLevel[0.6]]}}, GridBoxItemSize -> {"Columns" -> {{
                    Scaled[0.5]}}}, 
               GridBoxSpacings -> {"Rows" -> {1, {None}, None}}], "Column"], 
             FontColor -> GrayLevel[0.2], StripOnInput -> False], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Individual nutrition facts", "input" -> 
         "NutritionLabelMultiplePlus__Individual nutrition facts"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Calories", "scanner" -> "ExpandedFood", "id" -> 
     "CaloriesPlus", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"% daily value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"range\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"total calories\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["144", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "144", "SRString" -> "144"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7", "SRString" -> "7"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["120", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "120", "SRString" -> "120"]], 
                    TagBox["160", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "160", "SRString" -> "160"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["120", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "120", "SRString" -> "120"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["160", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "160", "SRString" -> "160"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["115", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "115", "SRString" -> "115"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "6", "SRString" -> "6"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["109", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "109", "SRString" -> "109"]], 
                    TagBox["122", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "122", "SRString" -> "122"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["109", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "109", "SRString" -> "109"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["122", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "122", "SRString" -> "122"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["259", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "259", "SRString" -> "259"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["13", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "13", "SRString" -> "13"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                  "\"fat calories\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["17", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "17", "SRString" -> "17"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]], 
                  TraditionalForm], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["17", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "17", "SRString" -> "17"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.2", "SRString" -> "3.2"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]], 
                  TraditionalForm], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["1.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.2", "SRString" -> "1.2"]], 
                    TagBox["5.6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5.6", "SRString" -> "5.6"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["1.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.2", "SRString" -> "1.2"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["5.6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5.6", "SRString" -> "5.6"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "20", "SRString" -> "20"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]], 
                  TraditionalForm], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Center, Center, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {
                    Center, Center, Center, Center}, {1, 2} -> {
                    Center, Center, Center, Center}, {1, 3} -> {
                    Center, Center, Center, Center}, {1, 4} -> {
                    Center, Center, Center, Center}, {1, 5} -> {
                    Center, Center, Center, Center}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{4, 4}, {2, 5}} -> 
                   GrayLevel[0.949], {{7, 7}, {2, 5}} -> GrayLevel[0.949]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {7.2, 6.8, 4.6, 4.15, 8.25}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "CaloriesPlus__More"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Carbohydrates", "scanner" -> "ExpandedFood", "id" -> 
     "CarbohydratesPlus", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"% daily value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"range\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"total carbohydrates\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["26", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "26", "SRString" -> "26"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["9", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "9", "SRString" -> "9"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["22", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22", "SRString" -> "22"]], 
                    TagBox["31", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "31", "SRString" -> "31"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["22", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22", "SRString" -> "22"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["31", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "31", "SRString" -> "31"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["27", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "27", "SRString" -> "27"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["9", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "9", "SRString" -> "9"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["25", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "25", "SRString" -> "25"]], 
                    TagBox["29", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "29", "SRString" -> "29"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["25", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "25", "SRString" -> "25"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["29", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "29", "SRString" -> "29"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["53", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "53", "SRString" -> "53"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["18", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "18", "SRString" -> "18"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                  "\"dietary fiber\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2.8", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.8", "SRString" -> "2.8"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["11", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "11", "SRString" -> "11"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["1.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.2", "SRString" -> "1.2"]], 
                    TagBox["7.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7.2", "SRString" -> "7.2"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["1.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.2", "SRString" -> "1.2"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["7.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7.2", "SRString" -> "7.2"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["661", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "661", "SRString" -> "661"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3", "SRString" -> "3"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["496", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "496", "SRString" -> "496"]], 
                    TagBox["744", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "744", "SRString" -> "744"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["496", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "496", "SRString" -> "496"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["744", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "744", "SRString" -> "744"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.5", "SRString" -> "3.5"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["14", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14", "SRString" -> "14"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                  "\"sugar\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2.4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.4", "SRString" -> "2.4"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]], 
                  TraditionalForm], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["0.29", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.29", "SRString" -> "0.29"]], 
                    TagBox["4.4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4.4", "SRString" -> "4.4"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["0.29", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.29", "SRString" -> "0.29"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["4.4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4.4", "SRString" -> "4.4"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["21", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "21", "SRString" -> "21"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]], 
                  TraditionalForm], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["21", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "21", "SRString" -> "21"]], 
                    TagBox["22", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22", "SRString" -> "22"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["21", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "21", "SRString" -> "21"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["22", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22", "SRString" -> "22"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["23", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "23", "SRString" -> "23"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Center, Center, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {
                    Center, Center, Center, Center}, {1, 2} -> {
                    Center, Center, Center, Center}, {1, 3} -> {
                    Center, Center, Center, Center}, {1, 4} -> {
                    Center, Center, Center, Center}, {1, 5} -> {
                    Center, Center, Center, Center}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{4, 4}, {2, 5}} -> 
                   GrayLevel[0.949], {{7, 7}, {2, 5}} -> 
                   GrayLevel[0.949], {{10, 10}, {2, 5}} -> GrayLevel[0.949]}},
                GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {7.2, 6.8, 4.6, 4.15, 8.25}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "CarbohydratesPlus__More"}, {}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Fats and fatty acids", "scanner" -> "ExpandedFood", 
     "id" -> "FatsPlus", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"% daily value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"range\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"total fat\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.1", "SRString" -> "2.1"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3", "SRString" -> "3"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["1.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.1", "SRString" -> "1.1"]], 
                    TagBox["3.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.3", "SRString" -> "3.3"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["1.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.1", "SRString" -> "1.1"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["3.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.3", "SRString" -> "3.3"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["368", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "368", "SRString" -> "368"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1", "SRString" -> "1"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["149", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "149", "SRString" -> "149"]], 
                    TagBox["670", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "670", "SRString" -> "670"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["149", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "149", "SRString" -> "149"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["670", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "670", "SRString" -> "670"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.5", "SRString" -> "2.5"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4", "SRString" -> "4"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                  "\"saturated fat\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["400", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "400", "SRString" -> "400"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["182", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "182", "SRString" -> "182"]], 
                    TagBox["808", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "808", "SRString" -> "808"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["182", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "182", "SRString" -> "182"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["808", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "808", "SRString" -> "808"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["43", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "43", "SRString" -> "43"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["17", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "17", "SRString" -> "17"]], 
                    TagBox["72", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "72", "SRString" -> "72"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["17", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "17", "SRString" -> "17"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["72", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "72", "SRString" -> "72"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["443", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "443", "SRString" -> "443"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                  "\"trans fat\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{"0", "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]], 
                  TraditionalForm], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{"0", "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Center, Center, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {
                    Center, Center, Center, Center}, {1, 2} -> {
                    Center, Center, Center, Center}, {1, 3} -> {
                    Center, Center, Center, Center}, {1, 4} -> {
                    Center, Center, Center, Center}, {1, 5} -> {
                    Center, Center, Center, Center}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{4, 4}, {2, 5}} -> 
                   GrayLevel[0.949], {{7, 7}, {2, 5}} -> 
                   GrayLevel[0.949], {{9, 9}, {2, 5}} -> GrayLevel[0.949]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {7.2, 6.8, 4.6, 4.15, 8.25}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "FatsPlus__More"}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Protein and amino acids", "scanner" -> "ExpandedFood", 
     "id" -> "ProteinPlus", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"% daily value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"range\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"protein\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5.5", "SRString" -> "5.5"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["11", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "11", "SRString" -> "11"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["4.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4.3", "SRString" -> "4.3"]], 
                    TagBox["8.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "8.1", "SRString" -> "8.1"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["4.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4.3", "SRString" -> "4.3"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["8.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "8.1", "SRString" -> "8.1"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.7", "SRString" -> "1.7"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3", "SRString" -> "3"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["1.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.7", "SRString" -> "1.7"]], 
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["1.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.7", "SRString" -> "1.7"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["7.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7.2", "SRString" -> "7.2"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["14", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14", "SRString" -> "14"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Center, Center, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {
                    Center, Center, Center, Center}, {1, 2} -> {
                    Center, Center, Center, Center}, {1, 3} -> {
                    Center, Center, Center, Center}, {1, 4} -> {
                    Center, Center, Center, Center}, {1, 5} -> {
                    Center, Center, Center, Center}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{4, 4}, {2, 5}} -> GrayLevel[0.949]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {7.2, 6.8, 4.6, 4.15, 8.25}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "ProteinPlus__More"}, {}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Vitamins", "scanner" -> "ExpandedFood", "id" -> 
     "VitaminsPlus", "position" -> "700", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"% daily value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"range\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"vitamin A\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["8.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "8.2", "SRString" -> "8.2"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"IU\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{"0", 
                    TagBox["116", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "116", "SRString" -> "116"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], "0", 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["116", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "116", "SRString" -> "116"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"IU\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["267", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "267", "SRString" -> "267"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"IU\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5", "SRString" -> "5"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["104", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "104", "SRString" -> "104"]], 
                    TagBox["496", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "496", "SRString" -> "496"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["104", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "104", "SRString" -> "104"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["496", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "496", "SRString" -> "496"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"IU\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["275", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "275", "SRString" -> "275"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"IU\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5", "SRString" -> "5"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                  "\"vitamin C\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["50", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50", "SRString" -> "50"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Mu]g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{"0", 
                    TagBox["200", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "200", "SRString" -> "200"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], "0", 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["200", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "200", "SRString" -> "200"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Mu]g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["93", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "93", "SRString" -> "93"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["155", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "155", "SRString" -> "155"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["75", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "75", "SRString" -> "75"]], 
                    TagBox["124", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "124", "SRString" -> "124"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["75", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "75", "SRString" -> "75"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["124", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "124", "SRString" -> "124"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["93", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "93", "SRString" -> "93"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["155", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "155", "SRString" -> "155"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Center, Center, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {
                    Center, Center, Center, Center}, {1, 2} -> {
                    Center, Center, Center, Center}, {1, 3} -> {
                    Center, Center, Center, Center}, {1, 4} -> {
                    Center, Center, Center, Center}, {1, 5} -> {
                    Center, Center, Center, Center}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{4, 4}, {2, 5}} -> 
                   GrayLevel[0.949], {{7, 7}, {2, 5}} -> GrayLevel[0.949]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {7.2, 6.8, 4.6, 4.15, 8.25}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "VitaminsPlus__More"}, {}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Minerals", "scanner" -> "ExpandedFood", "id" -> 
     "MineralsPlus", "position" -> "800", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"% daily value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"range\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"calcium\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["46", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "46", "SRString" -> "46"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5", "SRString" -> "5"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["18", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "18", "SRString" -> "18"]], 
                    TagBox["83", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "83", "SRString" -> "83"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["18", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "18", "SRString" -> "18"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["83", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "83", "SRString" -> "83"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["160", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "160", "SRString" -> "160"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["16", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "16", "SRString" -> "16"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["22", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22", "SRString" -> "22"]], 
                    TagBox["498", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "498", "SRString" -> "498"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["22", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22", "SRString" -> "22"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["498", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "498", "SRString" -> "498"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["206", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "206", "SRString" -> "206"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["21", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "21", "SRString" -> "21"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                  "\"iron\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.7", "SRString" -> "1.7"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["10", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "10", "SRString" -> "10"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["1.4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.4", "SRString" -> "1.4"]], 
                    TagBox["2.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.3", "SRString" -> "2.3"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["1.4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.4", "SRString" -> "1.4"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["2.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.3", "SRString" -> "2.3"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["340", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "340", "SRString" -> "340"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Mu]g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["248", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "248", "SRString" -> "248"]], 
                    TagBox["496", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "496", "SRString" -> "496"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["248", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "248", "SRString" -> "248"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["496", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "496", "SRString" -> "496"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Mu]g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["12", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "12", "SRString" -> "12"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Center, Center, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {
                    Center, Center, Center, Center}, {1, 2} -> {
                    Center, Center, Center, Center}, {1, 3} -> {
                    Center, Center, Center, Center}, {1, 4} -> {
                    Center, Center, Center, Center}, {1, 5} -> {
                    Center, Center, Center, Center}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{4, 4}, {2, 5}} -> 
                   GrayLevel[0.949], {{7, 7}, {2, 5}} -> GrayLevel[0.949]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {7.2, 6.8, 4.6, 4.15, 8.25}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "MineralsPlus__More"}, {}]}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Sterols", "scanner" -> "ExpandedFood", "id" -> 
     "SterolsPlus", "position" -> "900", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"% daily value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"range\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"cholesterol\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.7", "SRString" -> "1.7"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1", "SRString" -> "1"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{"0", 
                    TagBox["28", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "28", "SRString" -> "28"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], "0", 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["28", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "28", "SRString" -> "28"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{"0", "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.7", "SRString" -> "1.7"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1", "SRString" -> "1"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Center, Center, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {
                    Center, Center, Center, Center}, {1, 2} -> {
                    Center, Center, Center, Center}, {1, 3} -> {
                    Center, Center, Center, Center}, {1, 4} -> {
                    Center, Center, Center, Center}, {1, 5} -> {
                    Center, Center, Center, Center}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{4, 4}, {2, 5}} -> GrayLevel[0.949]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {7.2, 6.8, 4.6, 4.15, 8.25}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "SterolsPlus__More"}, {}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Physical properties", "scanner" -> "ExpandedFood", 
     "id" -> "PhysicalPropertiesPlusCalories", "position" -> "1000", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"mass\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["50", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50", "SRString" -> "50"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"grams\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["248", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "248", "SRString" -> "248"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"grams\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["298", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "298", "SRString" -> "298"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"grams\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"serving volume\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["263", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "263", "SRString" -> "263"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mL\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"milliliters\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["237", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "237", "SRString" -> "237"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mL\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"milliliters\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["500", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "500", "SRString" -> "500"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mL\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"milliliters\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"serving density\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.19", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.19", "SRString" -> "0.19"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"grams per cubic centimeter\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.1", "SRString" -> "1.1"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"grams per cubic centimeter\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Left}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{3, 3}, {2, 3}} -> 
                   GrayLevel[0.949], {{6, 6}, {2, 3}} -> GrayLevel[0.949]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {8, Automatic, 12}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "3"}, {
      XMLElement[
      "assumption", {
       "type" -> "SubCategory", "word" -> "orange juice", "template" -> 
        "Assuming orange juice${separator}Use ${desc} or ${pulldown} instead",
         "count" -> "5", "pulldown" -> "true", "pulldownlabel" -> "more >>", 
        "pulldownlength" -> "3", "default" -> 
        "{\"DPClash\", \"ExpandedFoodE\", \"orange juice\"} -> {\"OrangeJuice\
\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "OrangeJuice", "desc" -> "orange juice", "input" -> 
          "{\"DPClash\", \"ExpandedFoodE\", \"orange juice\"} -> \
{\"OrangeJuice\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "CapriSun25PercentLessSugarOrangeJuicePouch", "desc" -> 
          "Capri Sun 25% less sugar orange juice pouch", "input" -> 
          "{\"DPClash\", \"ExpandedFoodE\", \"orange juice\"} -> \
{\"CapriSun25PercentLessSugarOrangeJuicePouch\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "CapriSunSunriseOrangeWakeUpJuicePouch", "desc" -> 
          "Capri Sun sunrise orange wake up juice pouch", "input" -> 
          "{\"DPClash\", \"ExpandedFoodE\", \"orange juice\"} -> \
{\"CapriSunSunriseOrangeWakeUpJuicePouch\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "OrangeJuiceDrink", "desc" -> "orange juice drink", 
          "input" -> 
          "{\"DPClash\", \"ExpandedFoodE\", \"orange juice\"} -> \
{\"OrangeJuiceDrink\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "TropicanaTrop50NoPulpLessSugarOrangeJuice", "desc" -> 
          "Tropicana Trop50 no pulp orange juice", "input" -> 
          "{\"DPClash\", \"ExpandedFoodE\", \"orange juice\"} -> \
{\"TropicanaTrop50NoPulpLessSugarOrangeJuice\"}"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "Attribute", "word" -> "Bread", "template" -> 
        "Assuming any type of bread, toasted${separator}Use ${desc} or \
${pulldown} instead", "count" -> "18", "pulldown" -> "true", "pulldownlabel" -> 
        "more >>", "pulldownlength" -> "16", "default" -> 
        "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"a\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}}, \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "{a, {Bread, {Food:Variety -> Food:Toasted}}}", "desc" -> 
          "any type of bread, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"a\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:Egg, Food:Variety -> Food:Toasted}}",
           "desc" -> "bread, egg, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:Egg\", \
\"Food:Variety\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:Rye, Food:Variety -> Food:Toasted}}",
           "desc" -> "bread, rye, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:Rye\", \
\"Food:Variety\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:Toasted, Food:Variety -> \
Food:Wheat}}", "desc" -> "bread, toasted, wheat", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:Toasted\", \
\"Food:Variety\" -> \"Food:Wheat\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:OatBran, Food:Variety -> \
Food:Toasted}}", "desc" -> "bread, oat bran, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:OatBran\", \
\"Food:Variety\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:Oatmeal, Food:Variety -> \
Food:Toasted}}", "desc" -> "bread, oatmeal, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:Oatmeal\", \
\"Food:Variety\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:RiceBran, Food:Variety -> \
Food:Toasted}}", "desc" -> "bread, rice bran, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:RiceBran\", \
\"Food:Variety\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:Toasted, Food:Variety -> \
Food:WheatGerm}}", "desc" -> "bread, toasted, wheat germ", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:Toasted\", \
\"Food:Variety\" -> \"Food:WheatGerm\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:MultiGrain, Food:Variety -> \
Food:Toasted}}", "desc" -> "bread, multi grain, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:MultiGrain\", \
\"Food:Variety\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:Pumpernickel, Food:Variety -> \
Food:Toasted}}", "desc" -> "bread, pumpernickel, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \
\"Food:Pumpernickel\", \"Food:Variety\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:Enriched, Food:Variety -> \
Food:Raisin, Food:Variety -> Food:Toasted}}", "desc" -> 
          "bread, enriched, raisin, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:Enriched\", \
\"Food:Variety\" -> \"Food:Raisin\", \"Food:Variety\" -> \
\"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:NutritionalSupplement -> Food:ProteinIncludesGluten, \
Food:Variety -> Food:Toasted}}", "desc" -> 
          "bread, protein (includes gluten), toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:NutritionalSupplement\" -> \
\"Food:ProteinIncludesGluten\", \"Food:Variety\" -> \"Food:Toasted\"}}}"}, \
{}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:CalorieContent -> Food:ReducedCalorie, Food:Variety \
-> Food:OatBran, Food:Variety -> Food:Toasted}}", "desc" -> 
          "bread, oat bran, reduced calorie, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:CalorieContent\" -> \
\"Food:ReducedCalorie\", \"Food:Variety\" -> \"Food:OatBran\", \"Food:Variety\
\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:CookingMethod -> Food:CommerciallyPrepared, \
Food:Variety -> Food:Toasted, Food:Variety -> Food:White}}", "desc" -> 
          "bread, commercially prepared, toasted, white", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:CookingMethod\" -> \
\"Food:CommerciallyPrepared\", \"Food:Variety\" -> \"Food:Toasted\", \
\"Food:Variety\" -> \"Food:White\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:French, Food:Variety -> \
Food:Sourdough, Food:Variety -> Food:Toasted, Food:Variety -> Food:Vienna}}", 
          "desc" -> "bread, french, sourdough, toasted, vienna", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:French\", \
\"Food:Variety\" -> \"Food:Sourdough\", \"Food:Variety\" -> \"Food:Toasted\", \
\"Food:Variety\" -> \"Food:Vienna\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:CookingMethod -> Food:PreparedFromRecipe, \
Food:Variety -> Food:Toasted, Food:Variety -> Food:WholeWheat}}", "desc" -> 
          "bread, prepared from recipe, toasted, whole-wheat", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:CookingMethod\" -> \
\"Food:PreparedFromRecipe\", \"Food:Variety\" -> \"Food:Toasted\", \
\"Food:Variety\" -> \"Food:WholeWheat\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:CookingMethod -> Food:CommerciallyPrepared, \
Food:Variety -> Food:Toasted, Food:Variety -> Food:WholeWheat}}", "desc" -> 
          "bread, commercially prepared, toasted, whole-wheat", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:CookingMethod\" -> \
\"Food:CommerciallyPrepared\", \"Food:Variety\" -> \"Food:Toasted\", \
\"Food:Variety\" -> \"Food:WholeWheat\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:CookingMethod -> Food:CommerciallyPrepared, \
Food:SodiumContent -> Food:LowSodiumNoSalt, Food:Variety -> Food:Toasted, \
Food:Variety -> Food:White}}", "desc" -> 
          "bread, commercially prepared, low sodium no salt, toasted, white", 
          "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:CookingMethod\" -> \
\"Food:CommerciallyPrepared\", \"Food:SodiumContent\" -> \
\"Food:LowSodiumNoSalt\", \"Food:Variety\" -> \"Food:Toasted\", \
\"Food:Variety\" -> \"Food:White\"}}}"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "Attribute", "word" -> "OrangeJuice", "template" -> 
        "Assuming any type of orange juice${separator}Use ${desc} or \
${pulldown} instead", "count" -> "8", "pulldown" -> "true", "pulldownlabel" -> 
        "more >>", "pulldownlength" -> "6", "default" -> 
        "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"a\", \
\"OrangeJuice\"}, \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "OrangeJuice", "desc" -> "any type of orange juice", 
          "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"a\", \
\"OrangeJuice\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "{OrangeJuice, {Food:FoodConstitution -> Food:Fresh}}", 
          "desc" -> "orange juice, fresh", "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"OrangeJuice\", \
{\"Food:FoodConstitution\" -> \"Food:Fresh\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{OrangeJuice, {Food:Packaging -> Food:Canned, Food:SugarContent -> \
Food:Unsweetened}}", "desc" -> "orange juice, canned, unsweetened", "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"OrangeJuice\", \
{\"Food:Packaging\" -> \"Food:Canned\", \"Food:SugarContent\" -> \
\"Food:Unsweetened\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          
          "{OrangeJuice, {Food:FoodConstitution -> Food:FromConcentrate, \
Food:ServingType -> Food:Chilled}}", "desc" -> 
          "orange juice, chilled, from concentrate", "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"OrangeJuice\", \
{\"Food:FoodConstitution\" -> \"Food:FromConcentrate\", \"Food:ServingType\" \
-> \"Food:Chilled\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{OrangeJuice, {Food:FoodConstitution -> \
Food:FromFrozenConcentrate, Food:SugarContent -> Food:Unsweetened}}", "desc" -> 
          "orange juice, from frozen concentrate, unsweetened", "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"OrangeJuice\", \
{\"Food:FoodConstitution\" -> \"Food:FromFrozenConcentrate\", \
\"Food:SugarContent\" -> \"Food:Unsweetened\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{OrangeJuice, {Food:MadeFrom -> Food:FromConcentrate, \
Food:NutritionalSupplement -> Food:Calcium, Food:ProcessingType -> \
Food:Chilled}}", "desc" -> 
          "orange juice, chilled, from concentrate, with calcium", "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"OrangeJuice\", \
{\"Food:MadeFrom\" -> \"Food:FromConcentrate\", \
\"Food:NutritionalSupplement\" -> \"Food:Calcium\", \"Food:ProcessingType\" \
-> \"Food:Chilled\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{OrangeJuice, {Food:FoodConstitution -> Food:FromConcentrate, \
Food:ServingType -> Food:Chilled, Food:SubBrandName -> Food:California}}", 
          "desc" -> "orange juice, California, chilled, from concentrate", 
          "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"OrangeJuice\", \
{\"Food:FoodConstitution\" -> \"Food:FromConcentrate\", \"Food:ServingType\" \
-> \"Food:Chilled\", \"Food:SubBrandName\" -> \"Food:California\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{OrangeJuice, {Food:FoodConstitution -> Food:FromConcentrate, \
Food:NutritionalSupplement -> Food:Calcium, Food:NutritionalSupplement -> \
Food:VitaminD, Food:ServingType -> Food:Chilled}}", "desc" -> 
          "orange juice, chilled, from concentrate, with calcium, with \
vitamin D", "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"OrangeJuice\", \
{\"Food:FoodConstitution\" -> \"Food:FromConcentrate\", \
\"Food:NutritionalSupplement\" -> \"Food:Calcium\", \
\"Food:NutritionalSupplement\" -> \"Food:VitaminD\", \"Food:ServingType\" -> \
\"Food:Chilled\"}}}"}, {}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
ExpandedFoodDataSourceInformationNotes.html", "text" -> 
        "Expanded food data"}, {}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "10", "datatypes" -> "ExpandedFood,Math", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.16", "parsetiming" -> "0.266", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP398020db96e3eh89ha8a00002gg74b023348f25e", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "2", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa398120db96e3eh89ha8a00001955c54c972ed639724077331436509559", "version" -> 
    "2.6", "inputstring" -> "toast+orange juice"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2024, 11, 7, 19, 29, 23.331042`8.120509118368968}, "Line" -> 
    73, "SessionID" -> 22811745135520521692}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9, 10}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", 
    "EntityGroup[{EntityInstance[Entity[\"Food\", {EntityProperty[\"Food\", \
\"FoodType\"] -> ContainsExactly[{Entity[\"FoodType\", \"Bread\"]}], \
EntityProperty[\"Food\", \"AddedFoodTypes\"] -> ContainsExactly[{}], \
EntityProperty[\"Food\", \"CompleteItem\"] -> True}], Quantity[1, \
\"Items\"]], EntityInstance[Entity[\"Food\", {EntityProperty[\"Food\", \
\"FoodType\"] -> ContainsExactly[{Entity[\"FoodType\", \"OrangeJuice\"]}], \
EntityProperty[\"Food\", \"AddedFoodTypes\"] -> ContainsExactly[{}]}], \
Quantity[1, \"Servings\"]]}]"}, Typeset`open$$ = True, Typeset`newq$$ = 
   "toast+orange juice"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{560., {485., 26.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"49bf5eea-9655-496a-8f9c-61747beec24f"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "30-year mortgage of $250,000 at 5%", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "MonthlyPayments", "Monthly payments", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Formula", "title" -> 
     "Input information"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   StyleBox["\"fixed rate mortgage\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\[SpanFromLeft]"}, {
                 TagBox[
                  PaneBox[
                  "\"loan period\"", 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["30", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"]}, {
                 TagBox[
                  PaneBox[
                  "\"loan amount\"", 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["250000.00", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "250000.00", "SRString" -> 
                    "250000.00"]]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"Colombian pesos\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"]}, {
                 TagBox[
                  PaneBox[
                  "\"annual percentage rate\"", 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5", "SRString" -> "5"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {Left, Baseline}, {1, 2} -> {
                    Left, Baseline}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{1, 1}, {1, 2}} -> GrayLevel[0.949]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "MonthlyPayments", "numsubpods" -> "1",
      "position" -> "200", "primary" -> "true", "scanner" -> "Formula", 
     "title" -> "Monthly payments"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"monthly payment\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"effective interest rate\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    "\"5.116\"", 5.116189788173364, AutoDelete -> True], 
                    NumberForm[#, {10, 3}]& ], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, {Right}}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "MortgageTotals", "numsubpods" -> "1", 
     "position" -> "300", "scanner" -> "Formula", "title" -> 
     "Mortgage totals"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"principal paid\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["250000", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"total interest paid\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["233139", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"total payments\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["483139", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, {Right}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False], 
                GraphicsBox[{
                  EdgeForm[
                   RGBColor[0.59, 0.615, 0.71]], 
                  Directive[
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   Opacity[0.15], 
                   EdgeForm[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798]}]], 
                  DiskBox[{0, 0}, 1, {0, 3.2512275533932087`}], 
                  Directive[
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   Opacity[0.15], 
                   EdgeForm[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051]}]], 
                  
                  DiskBox[{0, 0}, 1, {3.2512275533932087`, 
                   6.283185307179586}], 
                  RGBColor[0.59, 0.615, 0.71], 
                  PointBox[{-0.05479000005125369, 0.9984978997946784}], 
                  PointBox[{0.05479000005125356, -0.9984978997946784}], {
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.25]], 
                   LineBox[
                    NCache[{{-0.05479000005125369, 0.9984978997946784}, {
                    Rational[-21, 20], 0.9984978997946784}, {-1.15, 
                    0.9984978997946784}}, {{-0.05479000005125369, 
                    0.9984978997946784}, {-1.05, 0.9984978997946784}, {-1.15, 
                    0.9984978997946784}}]], 
                   LineBox[
                    NCache[{{0.05479000005125356, -0.9984978997946784}, {
                    Rational[21, 20], -0.9984978997946784}, {
                    1.15, -0.9984978997946784}}, {{
                    0.05479000005125356, -0.9984978997946784}, {
                    1.05, -0.9984978997946784}, {
                    1.15, -0.9984978997946784}}]]}, 
                  InsetBox[
                   FormBox[
                    StyleBox[
                    StyleBox["\"principal\"", 
                    Opacity[1], FontFamily -> "Roboto", LineBreakWithin -> 
                    False, StripOnInput -> False], {
                    FontColor -> GrayLevel[0.2], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], 
                   NCache[{
                    Rational[-6, 5], 0.9984978997946784}, {-1.2, 
                    0.9984978997946784}], {1, 0}], 
                  InsetBox[
                   FormBox[
                    StyleBox[
                    StyleBox["\"interest\"", 
                    Opacity[1], FontFamily -> "Roboto", LineBreakWithin -> 
                    False, StripOnInput -> False], {
                    FontColor -> GrayLevel[0.2], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], 
                   NCache[{
                    Rational[6, 5], -0.9984978997946784}, {
                    1.2, -0.9984978997946784}], {-1, 0}]}, 
                 ImageSize -> {250, 100}, {
                 Background -> None, ImageSize -> {Automatic, 120}, 
                  LabelStyle -> Automatic, RotateLabel -> False, 
                  AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> 
                  False, AxesLabel -> None, AxesOrigin -> Automatic, 
                  AxesStyle -> {}, Background -> None, BaselinePosition -> 
                  Automatic, BaseStyle -> {}, ColorOutput -> Automatic, 
                  ContentSelectable -> Automatic, CoordinatesToolOptions -> 
                  Automatic, DisplayFunction :> $DisplayFunction, 
                  Epilog -> {}, FormatType :> TraditionalForm, Frame -> False,
                   FrameLabel -> None, FrameStyle -> {}, FrameTicks -> 
                  Automatic, FrameTicksStyle -> {}, GridLines -> None, 
                  GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> 
                  All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, 
                  LabelStyle -> {}, Method -> Automatic, PlotLabel -> None, 
                  PlotRange -> Automatic, PlotRangeClipping -> False, 
                  PlotRangePadding -> Automatic, PlotRegion -> Automatic, 
                  PreserveImageOptions -> Automatic, Prolog -> {}, 
                  RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}}, 
                 TicksStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1]]}}, AutoDelete -> False, 
              GridBoxItemSize -> {"Columns" -> {{Automatic}}}, RowsEqual -> 
              True], "Grid"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Payments and balances", "scanner" -> "Formula", "id" -> 
     "PaymentsAndBalances", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ListLinePlot[{{1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05}, {1041.67, 1040.42, 1039.16, 1037.9, 1036.63, 1035.36, \
1034.08, 1032.8, 1031.51, 1030.21, 1028.91, 1027.61, 1026.3, 1024.98, \
1023.66, 1022.33, 1021., 1019.66, 1018.32, 1016.97, 1015.62, 1014.26, \
1012.89, 1011.52, 1010.14, 1008.76, 1007.37, 1005.98, 1004.58, 1003.17, \
1001.76, 1000.34, 998.917, 997.487, 996.052, 994.61, 993.162, 991.709, \
990.249, 988.783, 987.311, 985.833, 984.349, 982.858, 981.362, 979.859, \
978.35, 976.834, 975.312, 973.784, 972.25, 970.709, 969.162, 967.608, \
966.048, 964.481, 962.908, 961.328, 959.742, 958.149, 956.549, 954.943, \
953.33, 951.71, 950.084, 948.451, 946.811, 945.164, 943.51, 941.85, 940.182, \
938.508, 936.826, 935.138, 933.442, 931.74, 930.03, 928.313, 926.589, \
924.858, 923.12, 921.374, 919.622, 917.861, 916.094, 914.319, 912.537, \
910.747, 908.95, 907.145, 905.333, 903.514, 901.686, 899.852, 898.009, \
896.159, 894.301, 892.435, 890.562, 888.681, 886.792, 884.895, 882.99, \
881.077, 879.156, 877.228, 875.291, 873.346, 871.393, 869.432, 867.463, \
865.485, 863.5, 861.506, 859.503, 857.493, 855.474, 853.446, 851.41, 849.366, \
847.313, 845.252, 843.182, 841.103, 839.016, 836.92, 834.815, 832.702, \
830.579, 828.448, 826.308, 824.159, 822.001, 819.834, 817.658, 815.474, \
813.279, 811.076, 808.864, 806.642, 804.411, 802.171, 799.922, 797.663, \
795.394, 793.117, 790.829, 788.533, 786.226, 783.91, 781.585, 779.249, \
776.904, 774.55, 772.185, 769.811, 767.426, 765.032, 762.628, 760.213, \
757.789, 755.355, 752.91, 750.455, 747.99, 745.515, 743.029, 740.534, \
738.027, 735.51, 732.983, 730.445, 727.897, 725.338, 722.768, 720.188, \
717.597, 714.995, 712.382, 709.759, 707.124, 704.479, 701.822, 699.154, \
696.476, 693.786, 691.085, 688.372, 685.648, 682.913, 680.167, 677.409, \
674.64, 671.859, 669.066, 666.262, 663.447, 660.619, 657.78, 654.929, \
652.066, 649.191, 646.304, 643.405, 640.494, 637.57, 634.635, 631.688, \
628.728, 625.755, 622.771, 619.774, 616.764, 613.742, 610.708, 607.66, 604.6, \
601.528, 598.442, 595.344, 592.233, 589.108, 585.971, 582.821, 579.657, \
576.481, 573.291, 570.087, 566.871, 563.641, 560.398, 557.141, 553.87, \
550.586, 547.288, 543.977, 540.652, 537.312, 533.959, 530.592, 527.211, \
523.816, 520.407, 516.983, 513.545, 510.093, 506.627, 503.146, 499.65, \
496.14, 492.616, 489.076, 485.522, 481.953, 478.37, 474.771, 471.157, \
467.528, 463.885, 460.226, 456.551, 452.862, 449.157, 445.436, 441.7, \
437.949, 434.182, 430.399, 426.6, 422.786, 418.956, 415.11, 411.247, 407.369, \
403.474, 399.564, 395.637, 391.693, 387.733, 383.757, 379.764, 375.755, \
371.728, 367.685, 363.625, 359.549, 355.455, 351.344, 347.216, 343.071, \
338.909, 334.729, 330.532, 326.317, 322.085, 317.835, 313.567, 309.282, \
304.979, 300.657, 296.318, 291.961, 287.586, 283.192, 278.78, 274.35, \
269.901, 265.434, 260.948, 256.443, 251.92, 247.378, 242.816, 238.236, \
233.637, 229.019, 224.381, 219.724, 215.048, 210.352, 205.636, 200.901, \
196.147, 191.372, 186.577, 181.763, 176.928, 172.074, 167.199, 162.304, \
157.388, 152.452, 147.495, 142.518, 137.52, 132.501, 127.461, 122.4, 117.318, \
112.215, 107.091, 101.945, 96.7781, 91.5895, 86.3792, 81.1472, 75.8935, \
70.6178, 65.3201, 60.0004, 54.6585, 49.2944, 43.9079, 38.4989, 33.0674, \
27.6133, 22.1365, 16.6368, 11.1143, 5.56869}}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1: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
56Ot89HW+ej/nY/+PyTEj/Y=
                 "], {{{}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1FV4EAQUBeCNUpAUJCUGCArSCCidUgKCCgYdwgaM3NiIURsw2OiO0TW6
Nrq7RtugKCEoiglK/Hw8/OfhvN7vnqBOoS17pwoICAgkWPTgnOI8KZzlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdZJLYxla2sJlNbGQD61nHWtaQ
yGpWsZIVLGcZS1nCYhaxkAQWMJ95zGUOs5nFTGYwnWlMZQqTmcRE4oljAuOJ
ZRxjGUMM0YxmFCMZwXCiGMZQhjCYSCIYRDhhDGQA/elHX/oQyrMD9aInIQTT
g+58Tje60oXOdKIjHWhPO9ryGZ/yCR/ThtZ8xId8QCta8j4taE4z3qMpTWhM
IxryLg2oTz3qUofa1KImNahONaryDm9ThcpU4i0qUoHylKMsZShNKd6kJCV4
g9cpTjFeoyhFKEwQhShIAfLzKvnISx5yk4ucvEIOsvMy2chKFjKTiYy8RAbS
8yIvkI60pCE1qQgkgCf+6TGP+J//eMgD/uUf/uYv/uQP7vM7v3GPX/mFu9zh
Z25zi5vc4Cd+5Do/8D3XuMp3fMs3fM1XfMkXXOEyl7jIBc4/2wBSOMsZTnOK
k5zgOMc4yhEOc4iDHGA/+9jLHnazi53sYDvJJLGNrWxhM5vYyAbWs461rCGR
1axiJStYzjKWsoTFLGIhCSxgPvOYyxxmM4uZzGA605jKFCYziYnEE8cExhPL
OMYyhhiiGc0oRjKC4UQxjKEMYTCRRDCIcMIYyAD604++9CGU3vSiJyGBz3f6
KcYWxRU=
                    "]]}]}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1mPbEAYUBuA327Zt27Ztt2zbtm3btq1t2djClt3aXX24r3N+wMGTqHH7
yu0CBwQEBOKC5jdNK1rThra0oz0d6EgnOtOFrnSjOz3oSS9604e+9KM/AxjI
IAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgi
FrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEO
c4SjHOM4JzjJKU5zhrOc4zwXuMglLnOF3/mDP7nKNa5zg5vc4jZ3uMs97vOA
hzziMU/4i795yjOe84J/+JeXvOI1b3jLO97zgY984jNf+Mo3/uM7AeYrEIEJ
QlCCEZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlC
UpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJR
ilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa
0ZwWtPyx/7SiNW1oy48D0Z4OdKQTnelCV7rRnR70pBe96UNf+tGfAQxkEIMZ
wlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nC
UpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJR
jnGcE5zkFKc5w1nOcT7wr/vc0h61oDnNaEoTGtOIhjSgPvWoSx1qU4ua1KA6
1ahKFSpTiYpUoDzlKEsZSlOKkpSgOMUoShEKU4iCFCA/+chLHnKTi5zkIDvZ
yEoWMpOJjGQgPelISxpSk4qUpCA5yUhKEhKTiIQkID7xiEscYhOLmMQgOtGI
ShQiE4mIRCA84QhLGEITipCEIDjBCEoQAhMo0K9H+l35j2985Quf+cRHPvCe
d7zlDa95xUv+5R9e8JxnPOVv/uIJj3nEQx5wn3vc5Q63ucVNbnCda1zlT/7g
d65wmUtc/JEBOM85znKG05ziJCc4zjGOcoTDHOIgB9jPPvayh93sYic72M42
trKFzWxiIxtYzzrWsobVrGIlK1jOMpayhMUsYiELmM885jKH2cxiJjOYzjSm
MoXJTGIiExjPOMYyhtGMYiQjGM4whjKEwQxiIAPoTz/60ofe9KInPehON7rS
hc50oiMdaE872tKG1rTiN1rSguY0oylNaEwjGtKA+tSjLnWoTS1qUoPqVKMq
VahMJSpSgfKUoyxlKE0pSlKC4hSjKEUoTCEKUoD85CMvechNLnKSg+xkIytZ
yEwmMpKB9KQjLWlITSpSkoLkJCMpSUhMIhKSgPjEIy5xiE0sYhKD6EQjKlGI
TCQiEoHwhCMsYQhNKEISguAEIyhBAn5Gm58Z+n+s1lkh
                    "]]}]}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    LineBox[CompressedData["
1:eJwl1PefCAQYBvC7M8/enLOOc8Y5jjOOs7fD4azjrDvjojIbQsgoo4yytwYN
iqIoe5RZZBaVPaKFjEi+9+mH7/P+Ac/necNShyQODgwICHhKpN8gMpCRTGQm
C1kJJhvZyUFOcpGbPOQlH/kpQEEKUZgihFCUUIpRnBKUpBRhlKYM4ZQlgnKU
pwIViaQSUVSmCtFUpRoxVKcGNalFLLWpQxx1qUd9GtCQRjSmCU1pRnNa0JJW
xNOaNrQlgXa0pwOJdKQTnelCV5LoRneS6UFPetGbPqSQSl/60Z8BpKX3w0AG
8TTP8CyDGcJQhjGcETzH87zAi4zkJUYxmjG8zFjGMZ5XmMBEJjGZV3mNKUxl
GtN5nTeYwUxmMZs3eYs5zGUe81nAQhaxmCUsZRnLWcFK3uYd3uU9VrGa9/mA
D/mINazlYz5hHev5lM/YwEY+5ws2sZkv+YotbGUb29nBTnaxmz3s5Wu+YR/7
OcBBDnGYb/mOIxzle45xnBOc5BSn+YEfOcNZfuJnfuEc57nARS5xmStc5RrX
+ZUb3OQ3fucP/uQvbnGbO/zNXe5xnwf8w0Me8S+P+Y/08QcSRAYykonMZCEr
wWQjOznISS5yk4e85CM/BShIIQpThBCKEkoxilOCkpQijNKUIZyyRFCO8lSg
IpFUIorKVCGaqlQjhurUoCa1iKU2dYijLvWoTwMa0ojGNKEpzWhOC1rSinha
04a2JNCO9nQgkY50ojNd6EoS3ehOMj3oSS9604cUUulLP/ozgLTA///zEwOL
l1o=
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    LineBox[CompressedData["
1:eJwVyWlgDgQAgOFvQ0oUJSpXrkilpMMVOt05inJEudrGNvc2zH2zue/72Jyb
zdwb5r5ZoYiiy32Uu1I8fjzvn7d428gmEUGBQCBEQgmjE50J5+GMpAtd6UZ3
etCTXkQRTQy96UNfYulHfwYwkEEMZghDGcZwRjCSUYxmDHHEM5ZxjGcCE5nE
ZKYwlWlMZwYzmcVs5jCXecxnAQtZRAKJLGYJS1nGclaQRDIrSSGVVaSxmjWs
ZR3r2cBG0slgE5vZQiZb2cZ2drCTXexmD3vZx34OcJBDHCaLb/mOIxzlGN/z
A8c5wY+c5BQ/8TOnOcMv/Mpv/M4fnOUc57nARS5xmStc5Rp/8hfXucFNbnGb
O9zlb/7hX+7xH/9zn0BwIBBEMNnITg4eISeP8hi5eJzc5OEJniQv+XiKp8nP
MxSgIM/yHM9TiMIUoSjFeIHilKAkpSjNi5ShLC9Rjpd5hVcpz2u8TgXeoCJv
8hZv8w6VqEwVqlKNd6lODWryHu/zAR/yER9Ti9rUoS71qE8DPqEhjWhMEz7l
M5rSjM/5gua0oCWt+JLWtOErvqYt7WhPBzryDSGEEkYnOhNOBJF0oSvd6E4P
etKLKKKJoTd96Ess/ejPAAYyiMEMYSjDGM4IRjKK0YwhjnjGMo7xTGAik5jM
FKYyjenMYCazmM0c5jKP+SxgIYtIIJHFLGEpy1jOCpJIZiUppLKKNFazhrWs
Yz0b2Eg6GWxiM1vIZCvb2M4OdrKL3exhL/vYzwEOcojDZPEAiurDag==
                    "]]}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[0.880722, 0.611041, 0.142051]]}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[0.880722, 0.611041, 0.142051]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[
                    0.880722, 0.611041, 
                    0.142051]]}, {}, {}, {}}}], {{}, {}}}, {
               GridLines -> Dynamic[
                  Map[{{#, 
                    GrayLevel[0.7]}}& , 
                   MousePosition[{"Graphics", Graphics}, None]]], 
                DisplayFunction -> Identity, DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0., 0}, AxesStyle -> Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], BaseStyle -> Automatic, DisplayFunction :> 
                Identity, Epilog -> {
                  InsetBox[
                   FormBox[
                    StyleBox[
                    "\"principal\"", FontFamily -> "Roboto", StripOnInput -> 
                    False], TraditionalForm], {251.99999999999997`, 
                   1006.540543147782}], 
                  InsetBox[
                   FormBox[
                    StyleBox[
                    "\"interest\"", FontFamily -> "Roboto", StripOnInput -> 
                    False], TraditionalForm], {90., 201.30810862955224`}]}, 
                Frame -> {{True, False}, {True, False}}, 
                FrameLabel -> {{None, None}, {
                   FormBox[
                    StyleBox[
                    StyleBox[
                    "\"years\"", FontFamily -> "Roboto", StripOnInput -> 
                    False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], None}}, FrameStyle -> 
                Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], FrameTicks -> {{{{0., 
                    FormBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["0", #& ]}], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.25]}}, {200., 
                    FormBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["200", #& ]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.25]}}, {400., 
                    FormBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["400", #& ]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.25]}}, {600., 
                    FormBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["600", #& ]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.25]}}, {800., 
                    FormBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["800", #& ]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.25]}}, {1000., 
                    FormBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1", "SRString" -> "1"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"k\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}], 1000& , AutoDelete -> True]}]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.25]}}, {1200., 
                    FormBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["1.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.2", "SRString" -> "1.2"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"k\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}], 1000& , AutoDelete -> True]}]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.25]}}, {50., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {100., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {150., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {250., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {300., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {350., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {450., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {500., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {550., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {650., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {700., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {750., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {850., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {900., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {950., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {1050., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {1100., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {1150., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {1250., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {1300., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}}, None}, {{{60, 
                    FormBox[
                    StyleBox["5", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {120, 
                    FormBox[
                    StyleBox["10", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {180, 
                    FormBox[
                    StyleBox["15", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {240, 
                    FormBox[
                    StyleBox["20", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {300, 
                    FormBox[
                    StyleBox["25", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {360, 
                    FormBox[
                    StyleBox["30", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}}, None}}, 
                FrameTicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10], 
                GridLines -> {None, None}, GridLinesStyle -> {
                  GrayLevel[0.85], 
                  GrayLevel[0.85]}, ImageSize -> 200, 
                LabelStyle -> {FontSize -> 10, FontFamily -> "Roboto"}, 
                Method -> {
                 "OptimizePlotMarkers" -> True, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{0, 360.}, {0, 1342.0540575303899`}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                Ticks -> {Automatic, Automatic}, TicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10]}, TicksStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1]], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"monthly payment breakdown\"", 
                 "\[NoBreak]", "\")\""}], {
               FontSize -> 10, FontFamily -> "Roboto", 
                GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox["Labeled", FontFamily -> "Roboto", FontSize -> 13], 
                "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox["Right", FontFamily -> "Roboto", FontSize -> 13]}],
                 "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ListLinePlot[{{0, 250000.}, {1, 249700.}, {2, 249398.}, {3, \
249095.}, {4, 248791.}, {5, 248485.}, {6, 248179.}, {7, 247871.}, {8, \
247562.}, {9, 247251.}, {10, 246939.}, {11, 246626.}, {12, 246312.}, {13, \
245996.}, {14, 245679.}, {15, 245360.}, {16, 245041.}, {17, 244720.}, {18, \
244397.}, {19, 244073.}, {20, 243748.}, {21, 243422.}, {22, 243094.}, {23, \
242765.}, {24, 242434.}, {25, 242103.}, {26, 241769.}, {27, 241435.}, {28, \
241099.}, {29, 240761.}, {30, 240422.}, {31, 240082.}, {32, 239740.}, {33, \
239397.}, {34, 239052.}, {35, 238706.}, {36, 238359.}, {37, 238010.}, {38, \
237660.}, {39, 237308.}, {40, 236955.}, {41, 236600.}, {42, 236244.}, {43, \
235886.}, {44, 235527.}, {45, 235166.}, {46, 234804.}, {47, 234440.}, {48, \
234075.}, {49, 233708.}, {50, 233340.}, {51, 232970.}, {52, 232599.}, {53, \
232226.}, {54, 231851.}, {55, 231475.}, {56, 231098.}, {57, 230719.}, {58, \
230338.}, {59, 229956.}, {60, 229572.}, {61, 229186.}, {62, 228799.}, {63, \
228410.}, {64, 228020.}, {65, 227628.}, {66, 227235.}, {67, 226839.}, {68, \
226442.}, {69, 226044.}, {70, 225644.}, {71, 225242.}, {72, 224838.}, {73, \
224433.}, {74, 224026.}, {75, 223618.}, {76, 223207.}, {77, 222795.}, {78, \
222381.}, {79, 221966.}, {80, 221549.}, {81, 221130.}, {82, 220709.}, {83, \
220287.}, {84, 219863.}, {85, 219437.}, {86, 219009.}, {87, 218579.}, {88, \
218148.}, {89, 217715.}, {90, 217280.}, {91, 216843.}, {92, 216405.}, {93, \
215964.}, {94, 215522.}, {95, 215078.}, {96, 214632.}, {97, 214184.}, {98, \
213735.}, {99, 213283.}, {100, 212830.}, {101, 212375.}, {102, 211918.}, \
{103, 211459.}, {104, 210998.}, {105, 210535.}, {106, 210070.}, {107, \
209603.}, {108, 209134.}, {109, 208664.}, {110, 208191.}, {111, 207716.}, \
{112, 207240.}, {113, 206761.}, {114, 206281.}, {115, 205798.}, {116, \
205314.}, {117, 204827.}, {118, 204338.}, {119, 203848.}, {120, 203355.}, \
{121, 202860.}, {122, 202364.}, {123, 201865.}, {124, 201364.}, {125, \
200861.}, {126, 200356.}, {127, 199848.}, {128, 199339.}, {129, 198828.}, \
{130, 198314.}, {131, 197798.}, {132, 197280.}, {133, 196760.}, {134, \
196238.}, {135, 195714.}, {136, 195187.}, {137, 194658.}, {138, 194127.}, \
{139, 193594.}, {140, 193059.}, {141, 192521.}, {142, 191981.}, {143, \
191439.}, {144, 190895.}, {145, 190348.}, {146, 189799.}, {147, 189248.}, \
{148, 188694.}, {149, 188138.}, {150, 187580.}, {151, 187020.}, {152, \
186457.}, {153, 185892.}, {154, 185324.}, {155, 184755.}, {156, 184182.}, \
{157, 183608.}, {158, 183031.}, {159, 182451.}, {160, 181869.}, {161, \
181285.}, {162, 180698.}, {163, 180109.}, {164, 179518.}, {165, 178924.}, \
{166, 178327.}, {167, 177728.}, {168, 177127.}, {169, 176523.}, {170, \
175916.}, {171, 175307.}, {172, 174695.}, {173, 174081.}, {174, 173464.}, \
{175, 172845.}, {176, 172223.}, {177, 171599.}, {178, 170972.}, {179, \
170342.}, {180, 169710.}, {181, 169075.}, {182, 168437.}, {183, 167797.}, \
{184, 167154.}, {185, 166509.}, {186, 165860.}, {187, 165209.}, {188, \
164556.}, {189, 163899.}, {190, 163240.}, {191, 162578.}, {192, 161914.}, \
{193, 161246.}, {194, 160576.}, {195, 159903.}, {196, 159227.}, {197, \
158549.}, {198, 157867.}, {199, 157183.}, {200, 156496.}, {201, 155806.}, \
{202, 155113.}, {203, 154417.}, {204, 153718.}, {205, 153017.}, {206, \
152312.}, {207, 151605.}, {208, 150895.}, {209, 150181.}, {210, 149465.}, \
{211, 148746.}, {212, 148023.}, {213, 147298.}, {214, 146570.}, {215, \
145839.}, {216, 145104.}, {217, 144367.}, {218, 143626.}, {219, 142883.}, \
{220, 142136.}, {221, 141386.}, {222, 140633.}, {223, 139877.}, {224, \
139118.}, {225, 138355.}, {226, 137590.}, {227, 136821.}, {228, 136049.}, \
{229, 135274.}, {230, 134495.}, {231, 133714.}, {232, 132929.}, {233, \
132141.}, {234, 131349.}, {235, 130554.}, {236, 129756.}, {237, 128955.}, \
{238, 128150.}, {239, 127342.}, {240, 126531.}, {241, 125716.}, {242, \
124898.}, {243, 124076.}, {244, 123251.}, {245, 122422.}, {246, 121590.}, \
{247, 120755.}, {248, 119916.}, {249, 119074.}, {250, 118228.}, {251, \
117378.}, {252, 116525.}, {253, 115669.}, {254, 114809.}, {255, 113945.}, \
{256, 113078.}, {257, 112207.}, {258, 111332.}, {259, 110454.}, {260, \
109572.}, {261, 108687.}, {262, 107798.}, {263, 106905.}, {264, 106008.}, \
{265, 105108.}, {266, 104204.}, {267, 103296.}, {268, 102384.}, {269, \
101469.}, {270, 100549.}, {271, 99626.3}, {272, 98699.3}, {273, 97768.5}, \
{274, 96833.9}, {275, 95895.3}, {276, 94952.8}, {277, 94006.4}, {278, \
93056.}, {279, 92101.7}, {280, 91143.4}, {281, 90181.1}, {282, 89214.8}, \
{283, 88244.5}, {284, 87270.1}, {285, 86291.7}, {286, 85309.2}, {287, \
84322.6}, {288, 83331.9}, {289, 82337.}, {290, 81338.}, {291, 80334.9}, {292, \
79327.6}, {293, 78316.}, {294, 77300.3}, {295, 76280.3}, {296, 75256.1}, \
{297, 74227.6}, {298, 73194.9}, {299, 72157.8}, {300, 71116.4}, {301, \
70070.7}, {302, 69020.6}, {303, 67966.1}, {304, 66907.2}, {305, 65844.}, \
{306, 64776.3}, {307, 63704.1}, {308, 62627.5}, {309, 61546.4}, {310, \
60460.8}, {311, 59370.6}, {312, 58276.}, {313, 57176.7}, {314, 56072.9}, \
{315, 54964.5}, {316, 53851.4}, {317, 52733.8}, {318, 51611.4}, {319, \
50484.4}, {320, 49352.7}, {321, 48216.3}, {322, 47075.2}, {323, 45929.3}, \
{324, 44778.6}, {325, 43623.1}, {326, 42462.8}, {327, 41297.7}, {328, \
40127.7}, {329, 38952.8}, {330, 37773.1}, {331, 36588.4}, {332, 35398.8}, \
{333, 34204.3}, {334, 33004.7}, {335, 31800.2}, {336, 30590.6}, {337, \
29376.1}, {338, 28156.4}, {339, 26931.7}, {340, 25701.8}, {341, 24466.9}, \
{342, 23226.8}, {343, 21981.5}, {344, 20731.}, {345, 19475.3}, {346, \
18214.4}, {347, 16948.3}, {348, 15676.8}, {349, 14400.1}, {350, 13118.}, \
{351, 11830.6}, {352, 10537.9}, {353, 9239.74}, {354, 7936.19}, {355, \
6627.2}, {356, 5312.76}, {357, 3992.84}, {358, 2667.43}, {359, 1336.49}, \
{360, 0}}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1: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
lka6fXxWk2VCTL222iYe5J1ChN1uPejSjywXQv2z06N319tpvxC9y00OLt5G
Vgjh2XHvTKAjuUyINfvMn1lqkWuF6AnVu/bw0SfaLwQnq8nUKJXMEWGjw5WH
Vp5kTRGM2lbxNUeRuSKcnH0kX/7sI+0XYUpuks/7A2SI8MK327DLj+wswsU9
N28pxpJ5IqzauPjbwpoPtF+ElK8bV2/MIstESNew614XQN4pwr+KB061HEeW
i5CV316e+08b7f/+eXWNWc8PkhUi5NpGLP7bl1wmgt0qxTr+aHKtCCHimn43
q1ppvwjjJ0Vsqksjc8RYPTuvuMCDrCnGseNFXtZDyVwxJr4MMVY71EL7xVi6
T9O272gyxFBP3BsVt/c97Rdj6mGJioMGmSeG9ebdifs2NtN+MZoXm5i6f31H
+8Vo++n5ljUS8k4xtPTT3o94+5b2iyEuzC3VCySfFGNe4c2oHY/f0H4xBN7v
l8bak8vE6I1aqTh3uYn2i2GxWccsdjq5VYwYwfOe5GOvab8E9/wmbBipS9aU
YM/844YDtr2i/RL46QoXhPa8pP0SVP1SbzE5hgwJMkPzQlyrX9B+CZZueW7Q
4EDmSVCx6drDquJG2i+BScnQuzONyTIJOpxLYjrSGmi/BAcW6g0ZrUKWS7Ct
uXjAEWE97Zfg2NitfyVX19F+CdrjLoqfLiGXSbBVVrVzS0Et7ZcgzTwvPG0M
uVWCRPW8A4MG19B+KYZaS2bk1FTTfin8tg9B35PPab8UpR2icN21z2i/FK2b
9F3eODyl/VI4XzE7LNGtov1ScMbM7z3TWEn7pdBOXKd6Mu8x7Zdi2s5sf/+V
FbRfikx+12HFvHLaL0XSPStRRb9HtF8KWd61iIybD2i/FG9TQ8drJZfRfiny
zN7w+Zn3aL8U/w5PTxzEvUP7pTiblJyhknWT9kuhsUfY7Tr6Ou2Ph9Hw9xfa
9l6l/fHgC+X9awaW0P54/F5i1jqFc5n2x6N8WZ7f9Ia/aH889HalbC1RFNL+
eDzldtnlm+XT/nisD3iWW/X4KO2Px0cXQb+2ur20P57+j//8pXyfVr5P/x+V
79PK92nl+7TyfVr5Pk155fu08n1a+T6tfJ9Wvk//6Fe+Tyvfp5Xv08r3aeX7
9I/9yvdp5fu08n1a+T6tfJ/+sf+/f5/+H5CMy+M=
                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxF1FV3EAQAhuGN2GAjBozRsdEdIzZgG7XRNWB0jRoNKiEqChh0NwpKhxIm
GKCgoKCkAkoYhEUjICrgs8MFF895f8B3zheZOiJ5eIaAgIBABgc+7iDSGMgA
+tOPvqTSh970oic96E43utKFznQihY50oD3JtKMtbWhNK1rSguY0oylNSCKR
xjSiIQ2oTwLxxFGPutQhlhhqU4ua1CCa6lSjKlWoTCUqUoHylKMsZShNKUpS
gigiKU4xilKEwhSiIAXITz4iyEs4echNLsLISQ6yk41QQshKFoIJIjOZyEiG
9J0CH432UB5wn//4l3+4x9/c5Q63+Ytb3OQG17nGVa5wmT/5g9/5jV+5xEUu
cJ5f+Jmf+JFznOUMp/mB7znFSU7wHd9ynGMc5QiHOcQ3fM1BDvAVX7KffXzB
5+xlD5/xKbvZxSd8zEd8yE528AHv8x7v8g5vs51tbGULb/Emm9nERjawnnWs
ZQ2rWcUbvM5KVvAar7KcZSxlCYtZxEIWMJ95zGUOs5nFTGYwnWlMZQqv8DIv
8SKTmcREXuB5JvAcz/IM43macYxlDKN5iid5glGMZATDGcZQhjCYQaQxkAH0
px99SaUPvelFT3rQnW50pQud6UQKHelAe5JpR1va0JpWtKQFzWlGU5qQRCKN
aURDGlCfBOKJox51qUMsMdSmFjWpQTTVqUZVqlCZSlSkAuUpR1nKUJpSlKQE
UURSnGIUpQiFKURBCpCffESQl3DykJtchJGTHGQnG6GEkJUsBBNEZjKRkfS/
/h93bZgz
                    "]]}]}, {}, {}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5]], 
                    LineBox[CompressedData["
1:eJwl1PefCAQYBvA7ztmcfbazzp07Z++z93bucO7OOByyUhQK0aDsPduZZSuK
sreGVdmESGlYlULf+/TD93n/gOfzvGGpw+OGBQYEBAwS6TcDGQkiE8FkJgtZ
yUZ2cpCTXOQmhDzkJR/5KUBBChFKYYpQlGIUpwQlKUUYpSlDWcpRnnAqEEEk
FYkimkrEUJkqVKUa1alBTWpRmzrUpR71iaUBDWlEY5rQlGY0pwUtaUVr2tCW
drSnAx3pRGfi6EI8CXSlG91JpAdJJJNCT3rRmz6k0pd+9CeNAQxM74inGMwQ
hjKM4TzNCJ7hWUYyiud4ntGMYSwv8CLjGM8EXmIik3iZV3iV15jMFF7nDaYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsow3eYu3eYd3eY/3+YDlrGAlq1jNGj7k
I9ayjvVsYCOb2MwWPuYTtrKNT/mM7ezgc75gJ7vYzR72so/9HOAghzjMEY5y
jC/5iq/5huOc4CSnOM23fMf3nOEs5zjPBS5yictc4Qeuco3r/MgNbvITt/iZ
X7jNr/zG7/zBHe5yj/s84E/+4m8e8g//8ojHPCF9/IFkICNBZCKYzGQhK9nI
Tg5ykovchJCHvOQjPwUoSCFCKUwRilKM4pSgJKUIozRlKEs5yhNOBSKIpCJR
RFOJGCpThapUozo1qEktalOHutSjPrE0oCGNaEwTmtKM5rSgJa1oTRva0o72
dKAjnehMHF2IJ4GudKM7ifQgiWRS6EkvetOHVPrSj/6kMYCBgf//6P8AaGCX
xQ==
                    "]]}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5]]}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5]]}, {}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5]]}, {}}}], {{}, {}}}, {
               GridLines -> Dynamic[
                  Map[{{#, 
                    GrayLevel[0.7]}}& , 
                   MousePosition[{"Graphics", Graphics}, None]]], 
                DisplayFunction -> Identity, DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0., 0.}, AxesStyle -> Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], BaseStyle -> Automatic, DisplayFunction :> 
                Identity, Frame -> {{True, False}, {True, False}}, 
                FrameLabel -> {{None, None}, {
                   FormBox[
                    StyleBox[
                    StyleBox[
                    "\"years\"", FontFamily -> "Roboto", StripOnInput -> 
                    False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], None}}, FrameStyle -> 
                Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], FrameTicks -> {{{{0., 
                    FormBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["0", #& ]}], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.25]}}, {50000., 
                    FormBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["50", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50", "SRString" -> "50"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"k\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}], 1000& , AutoDelete -> True]}]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.25]}}, {100000., 
                    FormBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["100", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "100", "SRString" -> "100"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"k\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}], 1000& , AutoDelete -> True]}]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.25]}}, {150000., 
                    FormBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["150", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "150", "SRString" -> "150"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"k\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}], 1000& , AutoDelete -> True]}]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.25]}}, {200000., 
                    FormBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["200", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "200", "SRString" -> "200"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"k\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}], 1000& , AutoDelete -> True]}]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.25]}}, {250000., 
                    FormBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["250", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "250", "SRString" -> "250"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"k\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Roboto", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0}], 1000& , AutoDelete -> True]}]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.25]}}, {10000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {20000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {30000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {40000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {60000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {70000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {80000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {90000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {110000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {120000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {130000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {140000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {160000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {170000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {180000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {190000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {210000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {220000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {230000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}, {240000., 
                    FormBox[
                    StyleBox["\"\"", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0, 0.35], 
                    AbsoluteThickness[0.125]}}}, None}, {{{60, 
                    FormBox[
                    StyleBox["5", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {120, 
                    FormBox[
                    StyleBox["10", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {180, 
                    FormBox[
                    StyleBox["15", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {240, 
                    FormBox[
                    StyleBox["20", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {300, 
                    FormBox[
                    StyleBox["25", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {360, 
                    FormBox[
                    StyleBox["30", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}}, None}}, 
                FrameTicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10], 
                GridLines -> {None, None}, GridLinesStyle -> {
                  GrayLevel[0.85], 
                  GrayLevel[0.85]}, ImageSize -> 200, 
                LabelStyle -> {FontSize -> 10, FontFamily -> "Roboto"}, 
                Method -> {
                 "OptimizePlotMarkers" -> True, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0, 360.}, {0, 250000.}},
                 PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                Ticks -> {Automatic, Automatic}, TicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10]}, TicksStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1]], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"remaining balance\"", "\[NoBreak]", 
                 "\")\""}], {FontSize -> 10, FontFamily -> "Roboto", 
                GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox["Labeled", FontFamily -> "Roboto", FontSize -> 13], 
                "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox["Right", FontFamily -> "Roboto", FontSize -> 13]}],
                 "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "PaymentsTable", "numsubpods" -> "1", 
     "position" -> "500", "scanner" -> "Formula", "title" -> 
     "Payments table"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"year\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"monthly payment\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"ending balance\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"yearly principal paid\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"yearly interest paid\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "1", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["246312", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["3688", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["12416", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "2", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["242434", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["3877", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["12228", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "3", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["238359", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["4075", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["12029", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "4", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["234075", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["4284", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["11821", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "5", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["229572", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["4503", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["11601", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "6", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["224838", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["4734", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["11371", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "7", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["219863", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["4976", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["11129", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "8", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["214632", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["5230", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["10874", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "9", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["209134", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["5498", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["10607", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "10", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["203355", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["5779", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["10325", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "11", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["197280", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["6075", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["10030", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "12", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["190895", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["6386", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["9719", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "13", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["184182", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["6712", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["9392", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "14", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["177127", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["7056", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["9049", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "15", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["169710", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["7417", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["8688", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "16", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["161914", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["7796", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["8308", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "17", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["153718", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["8195", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["7910", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "18", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["145104", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["8614", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["7490", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "19", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["136049", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["9055", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["7050", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "20", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["126531", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["9518", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["6586", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "21", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["116525", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["10005", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["6099", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "22", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["106008", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["10517", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["5587", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "23", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["94953", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["11055", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["5049", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "24", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["83332", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["11621", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["4484", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "25", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["71116", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["12215", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["3889", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "26", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["58276", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["12840", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["3264", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "27", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["44779", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["13497", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["2607", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "28", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["30591", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["14188", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1917", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "29", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["15677", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["14914", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1191", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "30", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["0", #& ]}], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["15677", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["428", #& ]}], Identity], #& , SyntaxForm -> Dot], 
                   "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Center, {Right}}, "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 2} -> {
                    Center, Baseline}, {1, 3} -> {Center, Baseline}, {1, 
                    4} -> {Center, Baseline}, {1, 5} -> {Center, Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {None, None}, "Rows" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "4"}, {
      XMLElement[
      "assumption", {
       "type" -> "SelectFormulaVariable", "word" -> "$250,000", "template" -> 
        "Assuming \"$250,000\" refers to sale amount${separator}Use ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
        "{\"FSVar\", \"Q\", {\"21\", \"28\"}, \"$250,000\"} -> \
{{\"FixedRateMortgage\", \"SaleAmountHouse\"}, \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "FixedRateMortgage", "desc" -> "sale amount", "input" -> 
          "{\"FSVar\", \"Q\", {\"21\", \"28\"}, \"$250,000\"} -> \
{{\"FixedRateMortgage\", \"SaleAmountHouse\"}, {\"FixedRateMortgage\", \
\"DP\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "FixedRateMortgage", "desc" -> "down payment", "input" -> 
          "{\"FSVar\", \"Q\", {\"21\", \"28\"}, \"$250,000\"} -> \
{\"FixedRateMortgage\", \"DP\"}"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "SelectFormulaVariable", "word" -> "5%", "template" -> 
        "Assuming \"5%\" refers to annual percentage rate${separator}Use \
${desc} instead", "count" -> "2", "pulldown" -> "false", "default" -> 
        "{\"FSVar\", \"Q\", {\"33\", \"34\"}, \"5%\"} -> \
{{\"FixedRateMortgage\", \"AnnualPercentageRateFixed\"}, \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "FixedRateMortgage", "desc" -> "annual percentage rate", 
          "input" -> 
          "{\"FSVar\", \"Q\", {\"33\", \"34\"}, \"5%\"} -> \
{{\"FixedRateMortgage\", \"AnnualPercentageRateFixed\"}, {\"FixedRateMortgage\
\", \"DP\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "FixedRateMortgage", "desc" -> "down payment", "input" -> 
          "{\"FSVar\", \"Q\", {\"33\", \"34\"}, \"5%\"} -> \
{\"FixedRateMortgage\", \"DP\"}"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaSelect", "template" -> 
        "Assuming fixed rate mortgage${separator}Use ${desc} or ${desc} \
instead", "count" -> "3", "pulldown" -> "false", "default" -> 
        "\"FSelect\" -> {{\"FixedRateMortgage\"}, \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "FixedRateMortgage", "desc" -> "fixed rate mortgage", 
          "input" -> "\"FSelect\" -> {{\"FixedRateMortgage\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "AdjustableRateMortgage", "desc" -> 
          "adjustable rate mortgage", "input" -> 
          "\"FSelect\" -> {{\"AdjustableRateMortgage\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "RentVsBuy", "desc" -> "rent vs. buy", "input" -> 
          "\"FSelect\" -> {{\"RentVsBuy\"}}"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariableInclude", "template" -> 
        "Also include: \
${desc}${separator}${desc}${separator}${desc}${separator}${desc}", "count" -> 
        "4", "pulldown" -> "false", "default" -> 
        "{\"FVarOpt\", \"1\"} -> {{}, {{{\"FixedRateMortgage\", \"PTS\"}}, {{\
\"FixedRateMortgage\", \"IOP\"}}, {{\"FixedRateMortgage\", \"MTR\"}}, \
{{\"FixedRateMortgage\", \"BP\"}}}, {{\"FixedRateMortgage\", \"MA\"}}}"}, {
        XMLElement[
        "value", {
         "name" -> "FixedRateMortgage.PTS", "desc" -> "points", "input" -> 
          "{\"FVarOpt\"} -> {{\"FixedRateMortgage\", \"PTS\"}, \
{\"FixedRateMortgage\", \"MA\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "FixedRateMortgage.IOP", "desc" -> 
          "interest\[Hyphen]only period", "input" -> 
          "{\"FVarOpt\"} -> {{\"FixedRateMortgage\", \"IOP\"}, \
{\"FixedRateMortgage\", \"MA\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "FixedRateMortgage.MTR", "desc" -> "tax rate", "input" -> 
          "{\"FVarOpt\"} -> {{\"FixedRateMortgage\", \"MTR\"}, \
{\"FixedRateMortgage\", \"MA\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "FixedRateMortgage.BP", "desc" -> "balloon payment", 
          "input" -> 
          "{\"FVarOpt\"} -> {{\"FixedRateMortgage\", \"BP\"}, \
{\"FixedRateMortgage\", \"MA\"}}"}, {}]}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "5", "datatypes" -> "Formula", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.74", "parsetiming" -> "0.767", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP1983013fgb4143ac40bg800001dg933a24e9d54ig", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "8", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa1983113fgb4143ac40bg8000023ega37433b39fhe3172133347439184749", "version" -> 
    "2.6", "inputstring" -> "30-year mortgage of $250,000 at 5%"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2024, 11, 7, 19, 30, 32.147709`8.259725008886177}, "Line" -> 
    73, "SessionID" -> 22811745135520521692}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "MonthlyPayments", "Monthly payments", 1, 1, "Content"}, Typeset`open$$ = 
   False, Typeset`newq$$ = "30-year mortgage of $250,000 at 5%"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{353.2109375, {36., 23.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[73]:=",ExpressionUUID->"95c4bb9d-c7cd-478d-aec3-6ab55b95277e"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "2 ft + 3 m", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", 
        "Quantity[2, \"Feet\"] + Quantity[3, \"Meters\"]"}, "ExtrusionOpen" -> 
      False, "Formats" -> {
       "cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Quantity[2, \"Feet\"] + Quantity[3, \"Meters\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               StyleBox[
                TagBox[
                 TagBox[
                  TagBox[
                   RowBox[{"\"2\"", "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"feet\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                 SyntaxForm -> Dot], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
                ZeroWidthTimes -> False], "+", 
               StyleBox[
                TagBox[
                 TagBox[
                  TagBox[
                   RowBox[{"\"3\"", "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"meters\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                 SyntaxForm -> Dot], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
                ZeroWidthTimes -> False]}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Results", "scanner" -> "Unit", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "2", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["moutput", {}, {"Quantity[11.84, \"Feet\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["11.84", 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> "11.84", "SRString" -> "11.84"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"feet\"", {
                   FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["moutput", {}, {"Quantity[3.61, \"Meters\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["3.61", 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> "3.61", "SRString" -> "3.61"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"meters\"", {
                   FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Result__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {"title" -> "Unit conversions", "scanner" -> "Unit", "id" -> 
     "UnitConversion", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "4"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["3.948", 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> "3.948", "SRString" -> "3.948"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"yards\"", {
                   FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{"\"11\"", 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    SuperscriptBox["\[Null]", "\[Prime]"], 
                    "\[NegativeMediumSpace]"}], 
                   $CellContext`UnitBoxWrapper["StringBoxes" -> "'"]], {
                  FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}], "\[InvisibleSpace]", 
               TagBox["  ", 
                $CellContext`TagBoxWrapper["StringBoxes" -> " "]], 
               RowBox[{
                 TagBox["10.11", 
                  $CellContext`TagBoxWrapper[
                  "StringBoxes" -> "10.11", "SRString" -> "10.11"]], 
                 StyleBox[
                  TagBox[
                   SuperscriptBox["\[Null]", 
                    StyleBox[
                    "\[Prime]\[Prime]", FontTracking -> "Condensed"]], 
                   $CellContext`UnitBoxWrapper["StringBoxes" -> "\""]], {
                  FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}]}], AutoSpacing -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["142.1", 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> "142.1", "SRString" -> "142.1"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"inches\"", {
                   FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["361", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "361", "SRString" -> "361"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"cm\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"centimeters\"", "\[NoBreak]", 
                   "\")\""}], {
                 FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "4"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> 
         "UnitConversion__More digits"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Exact forms", "input" -> 
         "UnitConversion__Exact forms"}, {}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Comparison as length", "scanner" -> "Unit", "id" -> 
     "ComparisonAsLength", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "4", "\".\"", "5"}, "RowDefault"], 
               "\" \"", 
               StyleBox[
                StyleBox["\"\[Times]\"", {
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}], FontSize -> 10.219999999999999`, 
                StripOnInput -> False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"length of an average human step\"", {
                FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0}], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["68.96", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "68.96", "SRString" -> "68.96"]], 
                    TagBox["97.44", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "97.44", "SRString" -> "97.44"]], 
                    RowBox[{
                    TagBox["68.96", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "68.96", "SRString" -> "68.96"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["97.44", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "97.44", "SRString" -> "97.44"]]}]}, 
                    "Interval", DisplayFunction -> (#3& ), 
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"cm\"", {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontSize -> 10, FontFamily -> "Roboto", 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Comparisons as height", "scanner" -> "Unit", "id" -> 
     "ComparisonAsHeight", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               StyleBox["\"( \"", {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], 
               TemplateBox[{"\"\"", "0", "\".\"", "1", "2"}, "RowDefault"], 
               StyleBox[
                
                TemplateBox[{
                 "\" \[TildeTilde] \"", "\"1\"", "\"/\"", "8", "\" ) \""}, 
                 "RowDefault"], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], 
               StyleBox[
                StyleBox["\"\[Times]\"", {
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}], FontSize -> 10.219999999999999`, 
                StripOnInput -> False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"highest measured ocean wave during a tsunami\"", {
                FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0}], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"\[MediumSpace]\[TildeTilde]\[ThinSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["29", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "29", "SRString" -> "29"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"m\"", {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontSize -> 10, FontFamily -> "Roboto", 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               InterpretationBox[
                Cell[
                 BoxData[
                  FormBox[
                   TemplateBox[{
                    StyleBox["\"(\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "0.6", 
                    StyleBox["\" to\[MediumSpace]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "0.9", 
                    StyleBox["\")\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], TraditionalForm]]], 
                TextCell[
                 $CellContext`RowTemplate[
                 "<GrayText>(</GrayText>`1`<GrayText> \
to\[MediumSpace]</GrayText>`2`<GrayText>)</GrayText>", {
                   $CellContext`NRat[
                   0.6011431312202720756`1.2977273601138897], 
                   $CellContext`NRat[
                   0.9040091362625479743`1.4749222906197175]}]]], "\" \"", 
               StyleBox[
                StyleBox["\"\[Times]\"", {
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}], FontSize -> 10.219999999999999`, 
                StripOnInput -> False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"height of a typical adult giraffe\"", {
                FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0}], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["13.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "13.1", "SRString" -> "13.1"]], 
                    TagBox["19.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "19.7", "SRString" -> "19.7"]], 
                    RowBox[{
                    TagBox["13.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "13.1", "SRString" -> "13.1"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["19.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "19.7", "SRString" -> "19.7"]]}]}, 
                    "Interval", DisplayFunction -> (#3& ), 
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"ft\"", {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontSize -> 10, FontFamily -> "Roboto", 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               InterpretationBox[
                Cell[
                 BoxData[
                  FormBox[
                   TemplateBox[{
                    StyleBox["\"(\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "0.9", 
                    StyleBox["\" to\[MediumSpace]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "1.3", 
                    StyleBox["\")\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], TraditionalForm]]], 
                TextCell[
                 $CellContext`RowTemplate[
                 "<GrayText>(</GrayText>`1`<GrayText> \
to\[MediumSpace]</GrayText>`2`<GrayText>)</GrayText>", {
                   $CellContext`NRat[0.8458942632170971532`1.], 
                   $CellContext`NRat[1.3158355205599310267`2.]}]]], "\" \"", 
               StyleBox[
                StyleBox["\"\[Times]\"", {
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}], FontSize -> 10.219999999999999`, 
                StripOnInput -> False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"story\"", {
                FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0}], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["9", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "9", "SRString" -> "9"]], 
                    TagBox["14", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14", "SRString" -> "14"]], 
                    RowBox[{
                    TagBox["9", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "9", "SRString" -> "9"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["14", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14", "SRString" -> "14"]]}]}, 
                    "Interval", DisplayFunction -> (#3& ), 
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"ft\"", {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontSize -> 10, FontFamily -> "Roboto", 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Comparisons as wavelength", "scanner" -> "Unit", "id" -> 
     "ComparisonAsWavelength", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "0", "\".\"", "6", "6"}, "RowDefault"], 
               "\" \"", 
               StyleBox[
                StyleBox["\"\[Times]\"", {
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}], FontSize -> 10.219999999999999`, 
                StripOnInput -> False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"sound wavelength at 63 Hz (first octave) in air at 21 \
\[Degree]C\"", {
                FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0}], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"\[MediumSpace]\[TildeTilde]\[ThinSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5.46", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5.46", "SRString" -> "5.46"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"m\"", {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontSize -> 10, FontFamily -> "Roboto", 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               InterpretationBox[
                Cell[
                 BoxData[
                  FormBox[
                   TemplateBox[{
                    StyleBox["\"(\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "1", 
                    StyleBox["\" to\[MediumSpace]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "1.3", 
                    StyleBox["\")\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], TraditionalForm]]], 
                TextCell[
                 $CellContext`RowTemplate[
                 "<GrayText>(</GrayText>`1`<GrayText> \
to\[MediumSpace]</GrayText>`2`<GrayText>)</GrayText>", {
                   $CellContext`NRat[1.0559369041898972081`1.635503555452824], 
                   $CellContext`NRat[
                   1.3003555946694303897`1.725927717573734]}]]], "\" \"", 
               StyleBox[
                StyleBox["\"\[Times]\"", {
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}], FontSize -> 10.219999999999999`, 
                StripOnInput -> False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"FM radio band wavelength in the US (ITU region 2)\"", {
                FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0}], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["2.776", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.776", "SRString" -> "2.776"]], 
                    TagBox["3.418", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.418", "SRString" -> "3.418"]], 
                    RowBox[{
                    TagBox["2.776", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.776", "SRString" -> "2.776"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["3.418", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.418", "SRString" -> "3.418"]]}]}, 
                    "Interval", DisplayFunction -> (#3& ), 
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"m\"", {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontSize -> 10, FontFamily -> "Roboto", 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "1", "\".\"", "3"}, "RowDefault"], 
               "\" \"", 
               StyleBox[
                StyleBox["\"\[Times]\"", {
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}], FontSize -> 10.219999999999999`, 
                StripOnInput -> False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"sound wavelength at 125 Hz (second octave) in air at 21 \
\[Degree]C\"", {
                FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0}], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"\[MediumSpace]\[TildeTilde]\[ThinSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2.75", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.75", "SRString" -> "2.75"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"m\"", {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontSize -> 10, FontFamily -> "Roboto", 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Comparison as wingspan", "scanner" -> "Unit", "id" -> 
     "ComparisonAsWingspan", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             
             TemplateBox[{
              "\" \[TildeTilde] \"", 
               "0.9943502824858757062`3.245512667814147", "\" \"", 
               StyleBox[
                StyleBox["\"\[Times]\"", {
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}], FontSize -> 10.219999999999999`, 
                StripOnInput -> False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"largest wingspan of a living bird (wandering albatross \
caught in 1965)\"", {
                FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0}], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"\[MediumSpace]\[TildeTilde]\[ThinSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3.63", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.63", "SRString" -> "3.63"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"m\"", {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontSize -> 10, FontFamily -> "Roboto", 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Interpretations", "scanner" -> "Unit", "id" -> 
     "Interpretation", "position" -> "800", "error" -> "false", "numsubpods" -> 
     "4"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"length\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"height\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"wavelength\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"wingspan\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "4"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Interpretation__More"}, {}]}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Corresponding quantities", "scanner" -> "Unit", "id" -> 
     "CorrespondingQuantity", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "13"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Light travel time ", 
                    Cell[
                    BoxData[
                    FormBox["t", TraditionalForm]]], " in vacuum from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"t", "\[LongEqual]", 
                    
                    RowBox[{"x", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "c"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Light travel time ", 
                    $CellContext`CalculateSymbol["t"], " in vacuum from ", 
                    $CellContext`InlineForm["t \[LongEqual] x/c"], ":"}]]]}, {
               
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["12", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "12", "SRString" -> "12"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"ns\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"nanoseconds\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Light travel time ", 
                    Cell[
                    BoxData[
                    FormBox["t", TraditionalForm]]], " in an optical fiber ", 
                    
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"t", "\[LongEqual]", 
                    RowBox[{
                    RowBox[{"1.48`", "\[InvisibleSpace]", "x"}], 
                    "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                    "c"}]}], PolynomialForm[#, TraditionalOrder -> False]& ]},
                     "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Light travel time ", 
                    $CellContext`CalculateSymbol["t"], 
                    " in an optical fiber ", 
                    $CellContext`InlineForm["t \[LongEqual] 1.48x/c"], 
                    ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["18", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "18", "SRString" -> "18"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"ns\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"nanoseconds\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                 "Distance to horizon (ignoring topography and other \
obstructions) from this height:"], 
                 TextCell[
                 "Distance to horizon (ignoring topography and other \
obstructions) from this height:"]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["6.786", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "6.786", "SRString" -> "6.786"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"km\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilometers\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["6786", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "6786", "SRString" -> "6786"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"meters\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4.216", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4.216", "SRString" -> "4.216"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"miles\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Angular wavelength ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    "\:019b", 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    " from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\:019b", "\[LongEqual]", 
                    
                    RowBox[{"\[Lambda]", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    RowBox[{"\"(\"", "\[InvisibleSpace]", 
                    RowBox[{"2", "\[InvisibleSpace]", "\[Pi]"}], 
                    "\[InvisibleSpace]", "\")\""}]}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Angular wavelength ", 
                    $CellContext`InlineForm["\:019b"], " from ", 
                    $CellContext`InlineForm[
                    "\:019b \[LongEqual] \[Lambda]/(2 \[Pi])"], ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.5745", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.5745", "SRString" -> "0.5745"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"meters\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  
                  TextData[{
                   "Frequency \[Nu] of electromagnetic radiation in a vacuum \
from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Nu]", "\[LongEqual]", 
                    
                    RowBox[{"c", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\[Lambda]"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  
                  Row[{"Frequency \[Nu] of electromagnetic radiation in a \
vacuum from ", 
                    $CellContext`InlineForm["\[Nu] \[LongEqual] c/\[Lambda]"],
                     ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["83", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "83", "SRString" -> "83"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"MHz\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"megahertz\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Frequency \[Nu] of sound from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Nu]", "\[LongEqual]", 
                    
                    RowBox[{"v", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\[Lambda]"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Frequency \[Nu] of sound from ", 
                    $CellContext`InlineForm["\[Nu] \[LongEqual] v/\[Lambda]"],
                     ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["95", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "95", "SRString" -> "95"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Hz\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"hertz\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"assuming speed of sound \[TildeTilde] \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["340", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "340", "SRString" -> "340"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"], "\[NoBreak]",
                     "\")\""}], {FontSize -> 10, FontFamily -> "Roboto", 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Spectroscopic wavenumber ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    OverscriptBox["\[Nu]", "~"], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    " from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    OverscriptBox["\[Nu]", "~"], "\[LongEqual]", 
                    
                    RowBox[{"1", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\[Lambda]"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Spectroscopic wavenumber ", 
                    $CellContext`InlineForm["OverTilde[\[Nu]]"], " from ", 
                    $CellContext`InlineForm[
                    "OverTilde[\[Nu]] \[LongEqual] 1/\[Lambda]"], ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.0028", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.0028", "SRString" -> "0.0028"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"cm\"", 
                    RowBox[{"-", "1"}]], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"reciprocal centimeters\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.0028", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.0028", "SRString" -> "0.0028"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"wavenumbers\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Wavenumber ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    "k", PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    " from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"k", "\[LongEqual]", 
                    RowBox[{
                    RowBox[{
                    TagBox["2", HoldForm], "\[InvisibleSpace]", "\[Pi]"}], 
                    "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                    "\[Lambda]"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Wavenumber ", 
                    $CellContext`InlineForm["k"], " from ", 
                    $CellContext`InlineForm[
                    "k \[LongEqual] 2\[Pi]/\[Lambda]"], ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.01741", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.01741", "SRString" -> "0.01741"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"cm\"", 
                    RowBox[{"-", "1"}]], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"reciprocal centimeters\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  
                  TextData[{
                   "Corrresponding angle \[Theta] around the earth's equator \
from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Theta]", "\[LongEqual]", 
                    
                    RowBox[{"s", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SubscriptBox["a", "\[Earth]"]}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  
                  Row[{"Corrresponding angle \[Theta] around the earth's \
equator from ", 
                    $CellContext`InlineForm[
                    "\[Theta] \[LongEqual] s/Subscript[a, \[Earth]]"], 
                    ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"3.243", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "-5"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"3.243", "\[Times]", 
                    SuperscriptBox["10", "-5"]}], "SRString" -> 
                    "3.243 times 10 to the negative 5"], SyntaxForm -> 
                    CenterDot], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"degrees\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.1167", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.1167", "SRString" -> "0.1167"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\"\\\"\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"arcseconds\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["566", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "566", "SRString" -> "566"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"nrad\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"nanoradians\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Wavelength ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    "\[Lambda]", 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    " from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Lambda]", "\[LongEqual]", 
                    RowBox[{
                    TagBox["2", HoldForm], "\[InvisibleSpace]", "\[Pi]", 
                    "\[InvisibleSpace]", "\:019b"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Wavelength ", 
                    $CellContext`InlineForm["\[Lambda]"], " from ", 
                    $CellContext`InlineForm[
                    "\[Lambda] \[LongEqual] 2 \[Pi] \:019b"], ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["22.68", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22.68", "SRString" -> "22.68"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"meters\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Frequency \[Nu] of a photon in a vacuum from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Nu]", "\[LongEqual]", 
                    RowBox[{
                    RowBox[{
                    TagBox["2", HoldForm], "\[InvisibleSpace]", "\[Pi]", 
                    "\[InvisibleSpace]", "c"}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\:019b"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Frequency \[Nu] of a photon in a vacuum from ", 
                    $CellContext`InlineForm[
                    "\[Nu] \[LongEqual] 2 \[Pi] c/\:019b"], ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["521.8", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "521.8", "SRString" -> "521.8"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"MHz\"", {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"megahertz\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Spectroscopic wavenumber ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    OverscriptBox["\[Nu]", "~"], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    " from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    OverscriptBox["\[Nu]", "~"], "\[LongEqual]", 
                    RowBox[{
                    RowBox[{
                    TagBox["2", HoldForm], "\[InvisibleSpace]", "\[Pi]"}], 
                    "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                    "\:019b"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Spectroscopic wavenumber ", 
                    $CellContext`InlineForm["OverTilde[\[Nu]]"], " from ", 
                    $CellContext`InlineForm[
                    "OverTilde[\[Nu]] \[LongEqual] 2 \[Pi]/\:019b"], 
                    ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.741", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.741", "SRString" -> "1.741"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"m\"", 
                    RowBox[{"-", "1"}]], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"reciprocal meters\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Wavenumber ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    "k", PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    " from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"k", "\[LongEqual]", 
                    
                    RowBox[{"1", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\:019b"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Wavenumber ", 
                    $CellContext`InlineForm["k"], " from ", 
                    $CellContext`InlineForm["k \[LongEqual] 1/\:019b"], 
                    ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.28", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.28", "SRString" -> "0.28"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"m\"", 
                    RowBox[{"-", "1"}]], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"reciprocal meters\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontSize -> 0.9 Inherited, FontFamily -> "Roboto", 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "13"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`aux3$$ = {
   True, False, {False, False, False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False, False, False}, True}, Typeset`aux6$$ = {
   True, False, {False, False, False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False, False, False, False}, True}, Typeset`aux9$$ = {
   True, False, {
    False, False, False, False, False, False, False, False, False, False, 
     False, False, False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "9", "datatypes" -> "Math", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.365", "parsetiming" -> "0.314", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP208311e51h5i57a92g3980000186e3214be99h8bg", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "17", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa208321e51h5i57a92g39800005fg8e77da4a1igh93454770973695860617", "version" -> 
    "2.6", "inputstring" -> "2 ft + 3 m"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2024, 11, 7, 19, 44, 33.862585`8.282295088343842}, "Line" -> 
    87, "SessionID" -> 22811745135520521692}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", 
    "Quantity[2, \"Feet\"] + Quantity[3, \"Meters\"]"}, Typeset`open$$ = 
   False, Typeset`newq$$ = "2 ft + 3 m"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{110.2109375, {45., 23.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"88a681ce-3730-443e-8799-452677562839"],

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{
     FractionBox["1504", "127"], ",", "\"\<Feet\>\""}], "]"}], ",", 
   "\"\<SI\>\""}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[86]:=",ExpressionUUID->"d761a962-7ed6-40c7-8a80-59013b5d6c27"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quantity", "[", 
   RowBox[{"7", ",", "\"\<days\>\""}], "]"}], "+", 
  RowBox[{"Quantity", "[", 
   RowBox[{"2", ",", "\"\<weeks\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9400155993069143`*^9, 3.940015599307898*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"d1a98ff6-302c-4ef6-b1a8-dcfcf826343d"],

Cell["\<\
The  postfix operator // applies the given function to the output of a line, \
for example\
\>", "Text",
 CellChangeTimes->{{3.940014925733849*^9, 
  3.9400149471536922`*^9}},ExpressionUUID->"0f145667-00b2-4f3a-afd7-\
7fef8a77b7ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", "N"}]], "Input",\

 CellChangeTimes->{{3.940014949511775*^9, 3.9400149715787573`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"9ce9c80d-3fd9-47c5-902c-8d24f3ddf4ff"],

Cell["\<\
Recall that you can use Alt+(/,-,^) to format typesetting, and Esc to \
introduce notation.\
\>", "Text",
 CellChangeTimes->{{3.940015093772735*^9, 
  3.940015126632881*^9}},ExpressionUUID->"1630a620-f69c-4db0-ade0-\
a329c6a15237"],

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", " ", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940015134498032*^9, 3.940015192811676*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"a8b67d78-1703-4872-ba74-ca8234b40b2d"],

Cell["Order of operatons in Mathematica:", "Text",
 CellChangeTimes->{{3.940015333294116*^9, 
  3.940015348302997*^9}},ExpressionUUID->"e2a7e7e3-41ea-4ae3-83a1-\
4640f5dfeee0"],

Cell[BoxData[
 RowBox[{"TreeForm", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["a", "2"], "*", "b"}], "+", 
   RowBox[{"Exp", "[", 
    RowBox[{"c", "+", "d"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9400153495915728`*^9, 3.940015359937566*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"f3e40b1a-ffc5-405d-b178-1b16782aec76"],

Cell["Now  let  us  talk  about functions", "Text",
 CellChangeTimes->{{3.940015615212775*^9, 
  3.9400156198059683`*^9}},ExpressionUUID->"89d4f0c6-74e4-4ad8-a9b1-\
9d3c008f97ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  SuperscriptBox["x", "2"], 
  RowBox[{"(*", 
   RowBox[{":=", " ", 
    RowBox[{
    "is", " ", "the", " ", "delayed", " ", "assignment", " ", "symbol"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.940015623061779*^9, 3.940015670305819*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"99094952-3181-4a05-baff-cfe6741d16ca"],

Cell[BoxData[
 RowBox[{"f", "[", "\[Pi]", "]"}]], "Input",
 CellChangeTimes->{{3.940015672873968*^9, 3.9400156772683897`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"7529a86c-b628-405c-a251-782448f7c72d"],

Cell[BoxData[
 RowBox[{"N", "[", 
  SuperscriptBox["\[Pi]", "2"], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[90]:=",ExpressionUUID->"369b2621-1de8-43bf-945a-3758328f586d"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "34"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.940015690363583*^9, 3.9400156936696377`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"46accda2-08f6-4df2-96cb-3069a6c0dfe3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "x"}], ",", 
       RowBox[{"x", "<", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", 
       RowBox[{"0", "<=", "x", "<=", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"x", ">", "2"}]}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.940020598393174*^9, 3.940020691159224*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"c9eddc28-a1b4-405a-97bd-2665db1b2197"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"h", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940020503554796*^9, 3.940020521956868*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"f55ad01c-cb53-4411-bf8d-7d1f5f4b592e"],

Cell["We  can  manipulate parameters manually", "Text",
 CellChangeTimes->{{3.940015751842763*^9, 
  3.940015760217401*^9}},ExpressionUUID->"0c8018ce-74c2-4a18-8e76-\
282dc9390677"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"frequency", "*", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"frequency", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940015726623519*^9, 3.940015726624205*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"048072c1-4b9e-401c-9ff1-00f361cffbbe"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"frequency", "*", "x"}], "+", "phase"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"frequency", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"phase", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9400157622235823`*^9, 3.940015762223892*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"edbae1d0-f0f9-43b7-94f5-7b69a0f2d066"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"function", "[", 
      RowBox[{
       RowBox[{"frequency", "*", "x"}], "+", "phase"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"frequency", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"phase", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"function", ",", 
     RowBox[{"{", 
      RowBox[{"Sin", ",", "Cos", ",", "Tan"}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.940015779221459*^9, 3.940015779222055*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"7088ae6c-0c19-42de-b0cc-e00441c1cec3"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", 
  RowBox[{
   RowBox[{"Expand", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", "+", "b"}], ")"}], "n"], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "2", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940015852297399*^9, 3.9400158896317053`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"dbddd01a-5547-43ec-bbd0-111e2bc86d80"],

Cell["\<\
Now  let us delve into algebraic manipulation and equation solving\
\>", "Text",
 CellChangeTimes->{{3.9400219643184137`*^9, 
  3.940021979381151*^9}},ExpressionUUID->"7b1c6527-34d3-4698-87f8-\
e2223f618739"],

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "^", "2"}], " ", "b"}], "+", 
   RowBox[{"a", " ", 
    RowBox[{"b", "^", "2"}]}], "+", 
   RowBox[{
    RowBox[{"a", "^", "2"}], " ", "c"}], "+", 
   RowBox[{"2", " ", "a", " ", "b", " ", "c"}], "+", 
   RowBox[{
    RowBox[{"b", "^", "2"}], " ", "c"}], "+", 
   RowBox[{"a", " ", 
    RowBox[{"c", "^", "2"}]}], "+", 
   RowBox[{"b", " ", 
    RowBox[{"c", "^", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940021992745916*^9, 3.9400220106819277`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"311bfe1b-c839-47e2-99e4-d3f7284c75eb"],

Cell[BoxData[
 RowBox[{"Together", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"x", "+", "1"}]], "+", 
   FractionBox["1", 
    RowBox[{"x", "-", "1"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.940022023038559*^9, 3.940022032786602*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"5ea4a596-232a-4825-a7b2-d0de05725169"],

Cell[BoxData[
 RowBox[{"Apart", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.940022038552168*^9, 3.940022042407712*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"d6dc2954-9d32-4179-8475-5ca13819f35a"],

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     RowBox[{"x", "^", "2"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"x", "^", "2"}], " ", "y"}], "+", 
    RowBox[{"c", " ", "x", " ", "y"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940022065280126*^9, 3.94002209716945*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"265054b8-4420-44d2-9ba4-f37b89ca89e3"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "^", "2"}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "^", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.94002213847066*^9, 3.940022158525666*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"98440006-de90-401e-8917-a8bfc1928dbd"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"\[Sqrt]", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.940022169086536*^9, 3.940022173630938*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"545d480c-a530-4783-8dfd-332ef45a8678"],

Cell[BoxData[
 RowBox[{"TrigExpand", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"x", "^", "2"}], "]"}], "*", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", "x"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940022185632905*^9, 3.940022194358993*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"21443e3b-a46e-4bcf-9171-73ec4b6af004"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     SuperscriptBox["y", "3"]}], "==", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9400222685262737`*^9, 3.94002228491215*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"991ab1eb-a815-44c8-9511-ebe8ea93bfcf"],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     SuperscriptBox["y", "3"]}], "==", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940022313131228*^9, 3.940022316668222*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"e8601ecb-1bfd-452f-aad3-91b5a539a5da"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "+", 
     RowBox[{"Exp", "[", "x", "]"}]}], "==", 
    RowBox[{"1", "/", "2"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.940022347294243*^9, 3.940022360980194*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"2f658db5-6744-4ba1-b90c-2e780c8ff86d"],

Cell["We can also work with differential equations", "Text",
 CellChangeTimes->{{3.940073634348507*^9, 
  3.9400736407139187`*^9}},ExpressionUUID->"7103889c-e2ea-4b10-a3a5-\
fec92209f326"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "'"}], "[", "x", "]"}], "==", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9400736421102962`*^9, 3.940073658069358*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"32bc7fb7-a88f-449b-accb-fab547bc9fae"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}], "==", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"y", "[", "1", "]"}], "==", "1"}]}], "}"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.94007370065617*^9, 3.9400737149237413`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"4da69f14-0c5d-43cb-a2c1-b0d76e0904ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", "=", 
   RowBox[{"DSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "x", "]"}], "==", 
        RowBox[{
         SuperscriptBox["x", "2"], " ", 
         RowBox[{"Sin", "[", "x", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"y", "[", "1", "]"}], "==", "1"}]}], "}"}], ",", 
     RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"soln", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "25"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.940073744397374*^9, 3.940073761204775*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"c8de08f3-3518-4990-8a79-0645b4bfd7b7"],

Cell[BoxData[
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}], "+", 
       RowBox[{"y", "[", "x", "]"}]}], " ", "==", " ", "0"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], " ", "==", " ", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "1", "]"}], " ", "==", " ", "1"}]}], "}"}], 
   ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.940073791160692*^9, 3.9400738030880613`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"15327a75-8e6d-409f-97ca-4ec14ba55a3a"],

Cell["Now  let us stop running from linear algebra.", "Text",
 CellChangeTimes->{{3.940078695055678*^9, 
  3.9400787018132668`*^9}},ExpressionUUID->"312566c7-ab58-409b-91dd-\
bb9f6664205e"],

Cell[BoxData[
 RowBox[{"vec1", "=", 
  RowBox[{"{", 
   RowBox[{
   "a", ",", "c", ",", "\[Pi]", ",", "\:2147", ",", "1", ",", "2", ",", "3", 
    ",", "4.5", ",", "5.6"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.940078726914056*^9, 3.94007872691467*^9}, {
  3.940078776078762*^9, 3.940078777633472*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"00651f72-e745-43a9-abe9-f5856730e7b5"],

Cell[BoxData[
 RowBox[{"vec2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    SuperscriptBox["i", "2"], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "9"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.940078750394369*^9, 3.9400788008093*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"93f378ef-cc7e-459c-80b1-f3b831f74d8e"],

Cell[BoxData[
 RowBox[{"vec1", "+", "vec2"}]], "Input",
 CellChangeTimes->{{3.940078783613619*^9, 3.9400787857567377`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"58469437-29df-478e-abd4-6b942f132762"],

Cell[BoxData[
 RowBox[{"vec1", "*", "vec2"}]], "Input",
 CellChangeTimes->{{3.940078809370289*^9, 3.9400788117099257`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"8b12b5d7-1b65-410b-8c2c-1c1ad9721ff9"],

Cell[BoxData[
 RowBox[{"vec1", ".", "vec2"}]], "Input",
 CellChangeTimes->{{3.9400788217748127`*^9, 3.9400788234051123`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"4d25aab7-6cc9-4726-b59b-3e2ab9874f96"],

Cell[BoxData[
 RowBox[{"Cross", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Pi]", ",", "\:2147", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940078833277981*^9, 3.940078833278946*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"ccd15d7b-350f-4807-a2d9-432325ce4f51"],

Cell[BoxData[
 RowBox[{"Norm", "[", "vec1", "]"}]], "Input",
 CellChangeTimes->{{3.940078840117676*^9, 3.9400788461681623`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"1f403633-5545-44ca-8d08-1623598435ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "mat1", "]"}]}], "Input",
 CellChangeTimes->{{3.940078864424335*^9, 3.940078875227227*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"8e10c4b0-29bb-4c0f-9ab6-00ece12ef129"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "*", "j"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "mat2", "]"}]}], "Input",
 CellChangeTimes->{{3.940078895788073*^9, 3.9400789029645357`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"be3dd7c3-bd5b-41cf-8053-28bf30c70692"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomReal", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.940078919209077*^9, 3.940078955600664*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"39609dd7-bd1a-415b-bdf1-8d2735af3dc8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DiagonalMatrix", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9400789908948917`*^9, 3.9400790171604853`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"1c646aa4-b992-41e2-a3c7-c064141584f5"],

Cell["We  can  take slices of the matrices", "Text",
 CellChangeTimes->{{3.9400790452943497`*^9, 
  3.9400790517791033`*^9}},ExpressionUUID->"e0f0ad49-f495-4e3f-b349-\
f59bc66eb0f5"],

Cell[BoxData[
 RowBox[{"mat2", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.940079055081396*^9, 3.9400791068501368`*^9}, {
  3.9401046120442867`*^9, 3.940104629351263*^9}, {3.940104712125669*^9, 
  3.9401047489504023`*^9}, {3.94010479343571*^9, 3.94010486677487*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"aec55157-1108-4923-8b88-03c13ef755d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", "mat2", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9401048719209948`*^9, 3.9401048933543253`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"0980355e-162c-4947-bb81-0282776a38f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", 
   RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.940104921925057*^9, 3.940104947216058*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"51a86447-6afe-48ec-842c-687b4bad6f33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RowReduce", "[", "mat2", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.940104956503504*^9, 3.940104966539793*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"a4e029dc-950b-40e3-b176-4b0a73eefe2a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "mat3", "]"}]}], "Input",
 CellChangeTimes->{{3.940104984095613*^9, 3.940104999322551*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"0598aba0-f356-4f63-b9ad-544a87280ab7"],

Cell[BoxData[
 RowBox[{"mat3", "//", "Eigenvalues"}]], "Input",
 CellChangeTimes->{{3.9401050020355463`*^9, 3.940105008264187*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"8385208e-d7d2-4fc6-ac57-b023f6ed0f77"],

Cell[BoxData[
 RowBox[{"mat3", "//", "Eigenvectors"}]], "Input",
 CellChangeTimes->{{3.9401050102880573`*^9, 3.940105015288599*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"8c373eef-564d-4749-8e9d-d705cef4d9e5"],

Cell["Now we go to probability", "Text",
 CellChangeTimes->{{3.940105075347725*^9, 3.940105094724964*^9}, {
  3.94010517021327*^9, 3.940105173232584*^9}, {3.940105211773381*^9, 
  3.940105218168111*^9}},ExpressionUUID->"342a55a3-4133-4082-88b6-\
d15994b5671e"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "rolling a 7 on two 6-sided dice", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "DistributionOfTotal", "Distribution of total", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"dice\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center], 
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["\"number of dice\"", {
                    GrayLevel[0.6]}], "2"}, {
                    StyleBox["\"number of faces on each die\"", {
                    GrayLevel[0.6]}], "6"}, {
                    StyleBox["\"total\"", {
                    GrayLevel[0.6]}], "7"}}, 
                    GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 
                    Automatic], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              $CellContext`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "ProbabilityOfOccurrence", 
     "numsubpods" -> "1", "position" -> "200", "scanner" -> "Dice", "title" -> 
     "Probability of occurrence"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 StyleBox[
                  TemplateBox[{
                    TagBox["0.1667", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.1667", "SRString" -> "0.1667"]], 
                    "\" \"", 
                    TemplateBox[{
                    StyleBox["\"\[LongEqual]\"", {
                    GrayLevel[0.6], LineIndent -> 0}], "\" \"", 
                    StyleBox["1", {
                    GrayLevel[0.6], LineIndent -> 0}], 
                    StyleBox["\" in \"", {
                    GrayLevel[0.6], LineIndent -> 0}], "6"}, "RowDefault"]}, 
                   "RowDefault"], LineIndent -> 0], 
                 LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"assuming fair \"", "6", "\"\[Hyphen]sided dice\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], 
                    TraditionalForm]]], {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Exact form", "input" -> 
         "ProbabilityOfOccurrence__Exact form"}, {}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {
    "error" -> "false", "id" -> "DistributionOfTotal", "numsubpods" -> "1", 
     "position" -> "300", "primary" -> "true", "scanner" -> "Dice", "title" -> 
     "Distribution of total"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                GraphicsBox[{{{{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1], 
                    Thickness[Large]], 
                    TagBox[{{{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1], 
                    Thickness[Large], 
                    Opacity[0.15]], 
                    LineBox[{}, VertexColors -> {{
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 0]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}}]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1], 
                    Thickness[Large], 
                    Opacity[0.15]], 
                    
                    LineBox[{{{2., 0.027777777777777776`}, {2., 0}}, {{3., 
                    0.05555555555555555}, {3., 0}}, {{4., 
                    0.08333333333333333}, {4., 0}}, {{5., 
                    0.1111111111111111}, {5., 0}}, {{6., 
                    0.1388888888888889}, {6., 0}}, {{7., 
                    0.16666666666666666`}, {7., 0}}, {{8., 
                    0.1388888888888889}, {8., 0}}, {{9., 
                    0.1111111111111111}, {9., 0}}, {{10., 
                    0.08333333333333333}, {10., 0}}, {{11., 
                    0.05555555555555555}, {11., 0}}, {{12., 
                    0.027777777777777776`}, {12., 0}}}, VertexColors -> {{
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[1, 0, 0], 
                    RGBColor[1, 0, 0]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}}]}}}, 
                    Annotation[#, "Charting`Private`Tag$4464596#1"]& ]}}, {
                    TagBox[{{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1], 
                    Thickness[Large]], {{}, Null, 
                    
                    PointBox[{{2., 0.027777777777777776`}, {3., 
                    0.05555555555555555}, {4., 0.08333333333333333}, {5., 
                    0.1111111111111111}, {6., 0.1388888888888889}, {7., 
                    0.16666666666666666`}, {8., 0.1388888888888889}, {9., 
                    0.1111111111111111}, {10., 0.08333333333333333}, {11., 
                    0.05555555555555555}, {12., 0.027777777777777776`}}, 
                    VertexColors -> {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[1, 0, 0], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RGBColor[0.368417, 0.506779, 0.709798]}], {}}}}, 
                    Annotation[#, 
                    "Charting`Private`Tag$4464596#1"]& ]}}, {}, {}}, 
                 DisplayFunction -> Identity, AspectRatio -> 
                 NCache[GoldenRatio^(-1), 0.6180339887498948], 
                 Axes -> {True, False}, AxesOrigin -> {1.4, 0}, AxesStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1], BaseStyle -> Automatic, Frame -> True, 
                 FrameLabel -> {
                   FormBox[
                    StyleBox[
                    StyleBox[
                    "\"total\"", "Label", 10, StripOnInput -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm], 
                   FormBox[
                    StyleBox[
                    StyleBox[
                    "\"probability\"", "Label", 10, StripOnInput -> False], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, FrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1], 
                 FrameTicks -> {{Automatic, Automatic}, {
                   Automatic, Automatic}}, FrameTicksStyle -> 
                 Directive[FontFamily -> "Times", FontSize -> 10], 
                 GridLines -> {None, None}, GridLinesStyle -> {
                   GrayLevel[0.85], 
                   GrayLevel[0.85]}, ImageSize -> 330., 
                 LabelStyle -> {FontSize -> 10, FontFamily -> "Roboto"}, 
                 Method -> {
                  "MessagesHead" -> DiscretePlot, "AxisPadding" -> 
                   Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> PointSize[Medium], 
                   "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1]]}, "DomainPadding" -> Scaled[0.02], 
                   "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                   Scaled[0.05]}, 
                 PlotRange -> {{1.4, 12.6}, {0, 0.17666666666666667`}}, 
                 PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {
                    Scaled[0.01], 
                    Scaled[0.01]}}, Prolog -> {
                   Opacity[0], 
                   TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                 Ticks -> {Automatic, Automatic}, TicksStyle -> 
                 Directive[FontFamily -> "Times", FontSize -> 10], TicksStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1]]}, {
                StyleBox[
                 RowBox[{"\"(\"", "\[NoBreak]", 
                   
                   TemplateBox[{
                    "\"assuming fair \"", "6", "\"\[Hyphen]sided dice\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                 FontSize -> 10, FontFamily -> "Roboto", 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "ExpectedTotal", "numsubpods" -> "1", 
     "position" -> "400", "scanner" -> "Dice", "title" -> "Expected total"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox["7", #& ]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"assuming fair \"", "6", "\"\[Hyphen]sided dice\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], 
                    TraditionalForm]]], {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More statistics", "input" -> 
         "ExpectedTotal__More statistics"}, {}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "Example", "numsubpods" -> "1", 
     "position" -> "500", "scanner" -> "Dice", "title" -> "Example"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox[
              TemplateBox[{
                GraphicsBox[{{}, {{
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.94], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    PolygonBox[{{0, 0}, {0, 4}, {4, 4}, {4, 0}}], {
                    GrayLevel[0], 
                    EdgeForm[None], 
                    DiskBox[{2, 2}, 0.45]}}, ImageSize -> 30, TicksStyle -> 
                    Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]], {17, -15.75}, 
                    ImageScaled[{0.5, 0.5}], {30, 30.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.94], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    PolygonBox[{{0, 0}, {0, 4}, {4, 4}, {4, 0}}], {
                    GrayLevel[0], 
                    EdgeForm[None], 
                    DiskBox[{0.85, 3.15}, 0.45]}, {
                    GrayLevel[0], 
                    EdgeForm[None], 
                    DiskBox[{0.85, 0.85}, 0.45]}, {
                    GrayLevel[0], 
                    EdgeForm[None], 
                    DiskBox[{3.15, 3.15}, 0.45]}, {
                    GrayLevel[0], 
                    EdgeForm[None], 
                    DiskBox[{3.15, 0.85}, 0.45]}, {
                    GrayLevel[0], 
                    EdgeForm[None], 
                    DiskBox[{0.85, 2}, 0.45]}, {
                    GrayLevel[0], 
                    EdgeForm[None], 
                    DiskBox[{3.15, 2}, 0.45]}}, ImageSize -> 30, TicksStyle -> 
                    Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]], {51, -15.75}, 
                    ImageScaled[{0.5, 0.5}], {30, 30.}]}}, {}}, 
                 ImageSize -> {78.2, 43.5}, {PlotRangePadding -> {6, 5}}, 
                 ContentSelectable -> True, ImageSize -> {78.2, 43.5}, 
                 TicksStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1]], "\"  \"", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"total: 7\"", "\[NoBreak]", 
                   "\")\""}], {FontSize -> 10, FontFamily -> "Roboto", 
                  GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
              LineIndent -> 0], LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Roll again", "input" -> "Example__Roll again"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "5", "datatypes" -> "Probability", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "0.5660000000000001", "parsetiming" -> 
    "0.378", "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP112218ig9347gg6d37a400003f2ii0h139a1b0ci", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "13", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa112318ig9347gg6d37a400001a8c08e31gfdae3g4222294402565530544", "version" -> 
    "2.6", "inputstring" -> "rolling a 7 on two 6-sided dice"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2024, 11, 8, 20, 40, 47.805711`8.432054758049569}, "Line" -> 
    65, "SessionID" -> 22812136321601673062}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "DistributionOfTotal", "Distribution of total", 1, 1, "Content"}, 
   Typeset`open$$ = False, Typeset`newq$$ = 
   "rolling a 7 on two 6-sided dice"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{289.2109375, {36., 23.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[65]:=",ExpressionUUID->"19c71cd5-133b-40be-914d-eb297b06b33f"],

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"x", "==", "3"}], ",", " ", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"DiscreteUniformDistribution", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940105288490985*^9, 3.940105303026917*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"58c114a4-b89d-4517-b062-58afe8a63432"],

Cell[BoxData[
 RowBox[{"probs", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Probability", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "+", "y"}], "==", "result"}], ",", 
      RowBox[{
       RowBox[{"x", "\[Distributed]", 
        RowBox[{"DiscreteUniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}], "]"}]}], "&&", 
       RowBox[{"y", "\[Distributed]", 
        RowBox[{"DiscreteUniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}], "]"}]}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"result", ",", "2", ",", "12", ",", "1"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.940105314103798*^9, 3.940105389968245*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"68c6da89-009a-450e-943d-62e1a319a936"],

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"probs", ",", " ", 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", "12", ",", "1"}], "}"}]}], "]"}]}], ",", 
   " ", 
   RowBox[{
   "PlotLabel", "->", "\"\<Probability of rolling sums on two dice\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.940105397627529*^9, 3.940105436462665*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"8d05b501-281b-499c-a0d6-b0fad1d7b55d"],

Cell[BoxData[
 RowBox[{"PetersenGraph", "[", "]"}]], "Input",
 CellChangeTimes->{{3.9401055393795853`*^9, 3.940105546500916*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"f5fa4a74-1593-4943-b439-37be8aff67d8"],

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"\"\<PetersenGraph\>\"", ",", "\"\<Classes\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.940105555242428*^9, 3.94010556605544*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"4ed082b8-d882-47f7-8584-779e482d0ba9"],

Cell["Parallel  evaluation is easy", "Text",
 CellChangeTimes->{{3.940105696787435*^9, 
  3.940105707250597*^9}},ExpressionUUID->"38fc37bc-0418-4006-afad-\
a6212e0bf914"],

Cell[BoxData[
 RowBox[{"ParallelEvaluate", "[", 
  RowBox[{
   RowBox[{"a", "=", 
    RowBox[{"RandomReal", "[", "]"}]}], ";", 
   SuperscriptBox["a", "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.940105708768981*^9, 3.940105740420076*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"f23b01c6-f810-4c26-9e7d-78c912a72348"],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", "*", 
   RowBox[{"ParallelEvaluate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sampleSize", "=", 
      SuperscriptBox["10", "7"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"randomN", "=", 
      SuperscriptBox[
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"sampleSize", ",", "2"}], "}"}]}], "]"}], "2"]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inside", "=", 
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "<", "1"}], "&"}], ",", 
          RowBox[{"Total", "[", 
           RowBox[{"randomN", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], ",", "True"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"N", "[", 
      RowBox[{"inside", "/", "sampleSize"}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], "//", "Mean"}]], "Input",
 CellChangeTimes->{{3.9401057774935007`*^9, 3.94010586513599*^9}, {
  3.940105918555686*^9, 3.940105918827999*^9}, {3.940105953203863*^9, 
  3.9401059994834337`*^9}, {3.9401060396456003`*^9, 3.9401060398173037`*^9}, {
  3.940106577763973*^9, 3.9401066256645813`*^9}, {3.940106656672304*^9, 
  3.940106663901354*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"23dc36f7-42f7-4c1f-89fd-2a359a41bb28"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"randomN", "=", 
    SuperscriptBox[
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "2"}], "}"}]}], "]"}], "2"]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.940106014351571*^9, 3.940106033491715*^9}, {
  3.940106138546764*^9, 3.940106157161643*^9}, {3.940106217255156*^9, 
  3.94010625411067*^9}, {3.94010632479978*^9, 3.9401063621743*^9}, {
  3.94010642275961*^9, 3.9401065156757097`*^9}, {3.940106559074585*^9, 
  3.9401065714993963`*^9}},ExpressionUUID->"25322027-f6fe-4774-9b6d-\
7dfc3fa302fc"]
}, Open  ]]
},
ScreenStyleEnvironment->"Elegant",
WindowSize->{739.5, 768},
WindowMargins->{{3.75, Automatic}, {3.75, 35.25}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"14.0 for Linux x86 (64-bit) (December 12, 2023)",
StyleDefinitions->"ReverseColor.nb",
ExpressionUUID->"f8c439e0-43f5-4ed7-88da-4f5ca0741b02"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 170, 3, 105, "Title",ExpressionUUID->"1a8e502a-d1b5-484e-9fed-8ce44277fbde"],
Cell[753, 27, 247, 6, 36, "Text",ExpressionUUID->"ae701f57-deca-497c-800b-a250dce92618"],
Cell[1003, 35, 197, 3, 32, "Input",ExpressionUUID->"59667597-3e29-4f9c-b9c3-38c876aee9ca"],
Cell[1203, 40, 286, 7, 32, "Input",ExpressionUUID->"7e4e09c0-6fc2-4f0b-b622-bd3219258734"],
Cell[1492, 49, 405, 10, 32, "Input",ExpressionUUID->"1eb4d0bf-6f33-484b-8986-38593509d25a"],
Cell[1900, 61, 166, 3, 36, "Text",ExpressionUUID->"d1de9045-fbfb-4015-ac0f-5aecec2aae39"],
Cell[2069, 66, 243, 6, 36, "Text",ExpressionUUID->"daabd6ad-a072-4eeb-adbb-1471fdb5a436"],
Cell[2315, 74, 12459, 310, 78, "WolframAlphaShortInput",ExpressionUUID->"be26cc25-f1c0-4bcf-bbba-ffa01b7d8d92"],
Cell[14777, 386, 774, 17, 75, "Input",ExpressionUUID->"e10e8710-cf7e-4998-b28c-9cad2b194d5f"],
Cell[15554, 405, 214, 5, 36, "Text",ExpressionUUID->"16dd3985-faae-4637-8ee4-1834814405ee"],
Cell[15771, 412, 282, 6, 62, "Input",ExpressionUUID->"33867cb5-777b-430b-8736-ea2f639b936c"],
Cell[16056, 420, 203, 3, 32, "Input",ExpressionUUID->"5b33b7dd-8710-4822-adc2-eb22b9a9e088"],
Cell[16262, 425, 320, 8, 35, "Input",ExpressionUUID->"ecde266b-dce0-482e-9ece-a8031c232aeb"],
Cell[16585, 435, 249, 6, 36, "Text",ExpressionUUID->"30842ff3-717d-41c1-91bf-1560e430fd41"],
Cell[16837, 443, 552, 16, 37, "Input",ExpressionUUID->"ec22c866-aae0-498f-ba37-ef4235fd4458"],
Cell[17392, 461, 426, 11, 35, "Input",ExpressionUUID->"a4fa59e2-87ac-4d48-b6f9-f0dae4aa3bd8"],
Cell[17821, 474, 437, 12, 35, "Input",ExpressionUUID->"80f9a894-81ec-4d1f-8952-72b5a55ce511"],
Cell[18261, 488, 200, 3, 36, "Text",ExpressionUUID->"2619f320-7806-4c6f-99f0-290232356551"],
Cell[18464, 493, 573, 17, 35, "Input",ExpressionUUID->"e2b86315-4ab7-47e1-8e4d-c26285744023"],
Cell[19040, 512, 152, 3, 36, "Text",ExpressionUUID->"0eb5cf22-06d0-4287-b4de-2487407c8409"],
Cell[19195, 517, 356, 9, 35, "Input",ExpressionUUID->"bf4bf317-9eda-493b-a3c7-1b4f268e2930"],
Cell[19554, 528, 365, 9, 32, "Input",ExpressionUUID->"af36d606-6be4-4d0e-8ee6-bd798264e42f"],
Cell[19922, 539, 455, 12, 32, "Input",ExpressionUUID->"6c4577dc-0fd2-46c9-a23c-8f8c08f47f10"],
Cell[20380, 553, 565, 16, 32, "Input",ExpressionUUID->"d16ecc82-9956-47a2-93c9-edeb8df1435c"],
Cell[20948, 571, 462, 12, 32, "Input",ExpressionUUID->"077162e1-0cc7-41ae-ae6f-774b269d4570"],
Cell[21413, 585, 438, 12, 32, "Input",ExpressionUUID->"33c7b958-77e1-48ac-a8fd-e3881e777e86"],
Cell[21854, 599, 19067, 448, 87, "WolframAlphaShortInput",ExpressionUUID->"1e7bd4a3-d71c-4415-bc09-6c7652175c49"],
Cell[40924, 1049, 553, 16, 37, "Input",ExpressionUUID->"273912a8-923e-4765-ac8f-d47a6465be06"],
Cell[41480, 1067, 556, 16, 32, "Input",ExpressionUUID->"32cff306-a9df-42b0-bbfa-ae7ca7d47cd7"],
Cell[42039, 1085, 593, 18, 32, "Input",ExpressionUUID->"7913d553-f39f-422c-a783-a9d299e764c3"],
Cell[42635, 1105, 612, 19, 35, "Input",ExpressionUUID->"7a994c36-895a-482f-9060-de2f239559fe"],
Cell[43250, 1126, 458, 13, 32, "Input",ExpressionUUID->"9965c3dd-c53c-4374-a425-3da39e86c020"],
Cell[43711, 1141, 403, 11, 32, "Input",ExpressionUUID->"f2968e9c-ad47-4893-b02e-d1928637efb7"],
Cell[44117, 1154, 522, 15, 32, "Input",ExpressionUUID->"3aaf4eb9-14f8-49a4-9e4e-af3532bae3dc"],
Cell[44642, 1171, 554, 16, 62, "Input",ExpressionUUID->"4158b3a7-3f07-4b69-af32-483948ad4765"],
Cell[45199, 1189, 362, 9, 32, "Input",ExpressionUUID->"79da3d03-9b90-4db6-95b5-b6c8310c0c8c"],
Cell[45564, 1200, 521, 13, 91, "Input",ExpressionUUID->"06b39d1c-9a8b-473a-b315-954d600479a8"],
Cell[46088, 1215, 676, 18, 38, "Input",ExpressionUUID->"fdd75b7f-ea39-4e9e-a1e5-ab0b1ca812e9"],
Cell[46767, 1235, 229, 4, 32, "Input",ExpressionUUID->"341e2e00-992a-458a-ad17-8c9138fa6e57"],
Cell[46999, 1241, 300, 7, 32, "Input",ExpressionUUID->"4ef9bc96-b894-4ac4-9fd7-317a8c5e803c"],
Cell[47302, 1250, 861, 24, 69, "Input",ExpressionUUID->"def85e63-e9bc-4e69-bdcc-4bcb4d83ebf2"],
Cell[48166, 1276, 244128, 4015, 153, "Input",ExpressionUUID->"0aba06a4-18bf-4471-91c0-1a82bcbd1da1"],
Cell[292297, 5293, 128, 3, 32, "Input",ExpressionUUID->"2d852f49-9783-4dc4-bf1d-8ce9f64b2c2d"],
Cell[292428, 5298, 201, 3, 36, "Text",ExpressionUUID->"35f192fa-a880-40a7-86e7-46a37c7079cb"],
Cell[292632, 5303, 595, 13, 37, "Input",ExpressionUUID->"5c3fb4cb-8701-41d2-8b62-d6b89b71a3e9"],
Cell[293230, 5318, 268, 7, 60, "Text",ExpressionUUID->"17d383c0-20e8-44e1-ae0a-937caacda239"],
Cell[293501, 5327, 311, 7, 32, "Input",ExpressionUUID->"7d1225c5-43fa-4a51-9558-fa0d873ed64d"],
Cell[293815, 5336, 216, 5, 36, "Text",ExpressionUUID->"bc08bee7-4e83-4c80-8b60-6c89a97559d5"],
Cell[294034, 5343, 148, 2, 32, "Input",ExpressionUUID->"3e4758b6-1434-4de8-bf6e-bbd0b1a905d8"],
Cell[294185, 5347, 168, 3, 36, "Text",ExpressionUUID->"fb96cdd9-56f6-4481-8960-dab5ac5edc46"],
Cell[294356, 5352, 352, 8, 32, "Input",ExpressionUUID->"0eb1943b-2d1e-4650-be76-5099ac66db4b"],
Cell[294711, 5362, 476, 10, 35, "Input",ExpressionUUID->"1eb44261-ef04-4546-91b1-cd54465da55f"],
Cell[295190, 5374, 172, 3, 36, "Text",ExpressionUUID->"ff538fba-9366-4268-b94a-a52e90c25a71"],
Cell[295365, 5379, 433, 11, 62, "Input",ExpressionUUID->"ce1239ab-e385-4360-ba0b-c393733f84d3"],
Cell[295801, 5392, 412, 10, 38, "Input",ExpressionUUID->"38764eb5-fc2c-47b7-b3c0-500d474e5ddb"],
Cell[296216, 5404, 328, 8, 34, "Input",ExpressionUUID->"f9676773-8406-44f3-9aa6-ca0cd908513a"],
Cell[296547, 5414, 444, 11, 52, "Input",ExpressionUUID->"9e915d69-1683-4f09-85eb-dbc7dbb6e538"],
Cell[296994, 5427, 191, 3, 36, "Text",ExpressionUUID->"da38ba69-4636-4579-8779-4991c451f05c"],
Cell[297188, 5432, 226, 3, 32, "Input",ExpressionUUID->"e45cfc6d-3f5d-41d9-b7bf-4eafd5f7b573"],
Cell[297417, 5437, 699, 18, 75, "Input",ExpressionUUID->"c9e59606-34e7-4a58-89d8-6794aa27ccf5"],
Cell[298119, 5457, 736, 18, 104, "Input",ExpressionUUID->"d4c25181-7fd2-4be6-ae54-664c42ede820"],
Cell[298858, 5477, 14619, 353, 87, "WolframAlphaShortInput",ExpressionUUID->"9b768858-b999-45c9-a0ed-870dea06f7b5"],
Cell[313480, 5832, 267739, 5405, 528, "WolframAlphaShortInput",ExpressionUUID->"49bf5eea-9655-496a-8f9c-61747beec24f"],
Cell[581222, 11239, 188101, 3737, 76, "WolframAlphaShortInput",ExpressionUUID->"95c4bb9d-c7cd-478d-aec3-6ab55b95277e"],
Cell[769326, 14978, 135214, 2816, 85, "WolframAlphaShortInput",ExpressionUUID->"88a681ce-3730-443e-8799-452677562839"],
Cell[904543, 17796, 301, 8, 51, "Input",ExpressionUUID->"d761a962-7ed6-40c7-8a80-59013b5d6c27"],
Cell[904847, 17806, 337, 7, 32, "Input",ExpressionUUID->"d1a98ff6-302c-4ef6-b1a8-dcfcf826343d"],
Cell[905187, 17815, 242, 6, 36, "Text",ExpressionUUID->"0f145667-00b2-4f3a-afd7-7fef8a77b7ce"],
Cell[905432, 17823, 352, 9, 32, "Input",ExpressionUUID->"9ce9c80d-3fd9-47c5-902c-8d24f3ddf4ff"],
Cell[905787, 17834, 241, 6, 36, "Text",ExpressionUUID->"1630a620-f69c-4db0-ade0-a329c6a15237"],
Cell[906031, 17842, 383, 8, 35, "Input",ExpressionUUID->"a8b67d78-1703-4872-ba74-ca8234b40b2d"],
Cell[906417, 17852, 176, 3, 36, "Text",ExpressionUUID->"e2a7e7e3-41ea-4ae3-83a1-4640f5dfeee0"],
Cell[906596, 17857, 337, 8, 35, "Input",ExpressionUUID->"f3e40b1a-ffc5-405d-b178-1b16782aec76"],
Cell[906936, 17867, 179, 3, 36, "Text",ExpressionUUID->"89d4f0c6-74e4-4ad8-a9b1-9d3c008f97ad"],
Cell[907118, 17872, 390, 10, 32, "Input",ExpressionUUID->"99094952-3181-4a05-baff-cfe6741d16ca"],
Cell[907511, 17884, 205, 3, 32, "Input",ExpressionUUID->"7529a86c-b628-405c-a251-782448f7c72d"],
Cell[907719, 17889, 182, 4, 35, "Input",ExpressionUUID->"369b2621-1de8-43bf-945a-3758328f586d"],
Cell[907904, 17895, 259, 5, 32, "Input",ExpressionUUID->"46accda2-08f6-4df2-96cb-3069a6c0dfe3"],
Cell[908166, 17902, 630, 19, 37, "Input",ExpressionUUID->"c9eddc28-a1b4-405a-97bd-2665db1b2197"],
Cell[908799, 17923, 338, 9, 32, "Input",ExpressionUUID->"f55ad01c-cb53-4411-bf8d-7d1f5f4b592e"],
Cell[909140, 17934, 181, 3, 36, "Text",ExpressionUUID->"0c8018ce-74c2-4a18-8e76-282dc9390677"],
Cell[909324, 17939, 518, 13, 37, "Input",ExpressionUUID->"048072c1-4b9e-401c-9ff1-00f361cffbbe"],
Cell[909845, 17954, 626, 16, 37, "Input",ExpressionUUID->"edbae1d0-f0f9-43b7-94f5-7b69a0f2d066"],
Cell[910474, 17972, 767, 21, 37, "Input",ExpressionUUID->"7088ae6c-0c19-42de-b0cc-e00441c1cec3"],
Cell[911244, 17995, 422, 10, 62, "Input",ExpressionUUID->"dbddd01a-5547-43ec-bbd0-111e2bc86d80"],
Cell[911669, 18007, 218, 5, 36, "Text",ExpressionUUID->"7b1c6527-34d3-4698-87f8-e2223f618739"],
Cell[911890, 18014, 621, 18, 35, "Input",ExpressionUUID->"311bfe1b-c839-47e2-99e4-d3f7284c75eb"],
Cell[912514, 18034, 327, 9, 51, "Input",ExpressionUUID->"5ea4a596-232a-4825-a7b2-d0de05725169"],
Cell[912844, 18045, 207, 4, 32, "Input",ExpressionUUID->"d6dc2954-9d32-4179-8475-5ca13819f35a"],
Cell[913054, 18051, 461, 13, 35, "Input",ExpressionUUID->"265054b8-4420-44d2-9ba4-f37b89ca89e3"],
Cell[913518, 18066, 344, 9, 32, "Input",ExpressionUUID->"98440006-de90-401e-8917-a8bfc1928dbd"],
Cell[913865, 18077, 234, 5, 33, "Input",ExpressionUUID->"545d480c-a530-4783-8dfd-332ef45a8678"],
Cell[914102, 18084, 342, 9, 35, "Input",ExpressionUUID->"21443e3b-a46e-4bcf-9171-73ec4b6af004"],
Cell[914447, 18095, 384, 11, 35, "Input",ExpressionUUID->"991ab1eb-a815-44c8-9511-ebe8ea93bfcf"],
Cell[914834, 18108, 384, 11, 35, "Input",ExpressionUUID->"e8601ecb-1bfd-452f-aad3-91b5a539a5da"],
Cell[915221, 18121, 338, 9, 32, "Input",ExpressionUUID->"2f658db5-6744-4ba1-b90c-2e780c8ff86d"],
Cell[915562, 18132, 188, 3, 36, "Text",ExpressionUUID->"7103889c-e2ea-4b10-a3a5-fec92209f326"],
Cell[915753, 18137, 428, 11, 35, "Input",ExpressionUUID->"32bc7fb7-a88f-449b-accb-fab547bc9fae"],
Cell[916184, 18150, 552, 15, 37, "Input",ExpressionUUID->"4da69f14-0c5d-43cb-a2c1-b0d76e0904ce"],
Cell[916739, 18167, 774, 22, 67, "Input",ExpressionUUID->"c8de08f3-3518-4990-8a79-0645b4bfd7b7"],
Cell[917516, 18191, 718, 20, 37, "Input",ExpressionUUID->"15327a75-8e6d-409f-97ca-4ec14ba55a3a"],
Cell[918237, 18213, 189, 3, 36, "Text",ExpressionUUID->"312566c7-ab58-409b-91dd-bb9f6664205e"],
Cell[918429, 18218, 383, 8, 32, "Input",ExpressionUUID->"00651f72-e745-43a9-abe9-f5856730e7b5"],
Cell[918815, 18228, 338, 8, 35, "Input",ExpressionUUID->"93f378ef-cc7e-459c-80b1-f3b831f74d8e"],
Cell[919156, 18238, 202, 3, 32, "Input",ExpressionUUID->"58469437-29df-478e-abd4-6b942f132762"],
Cell[919361, 18243, 202, 3, 32, "Input",ExpressionUUID->"8b12b5d7-1b65-410b-8c2c-1c1ad9721ff9"],
Cell[919566, 18248, 204, 3, 32, "Input",ExpressionUUID->"4d25aab7-6cc9-4726-b59b-3e2ab9874f96"],
Cell[919773, 18253, 353, 8, 32, "Input",ExpressionUUID->"ccd15d7b-350f-4807-a2d9-432325ce4f51"],
Cell[920129, 18263, 207, 3, 32, "Input",ExpressionUUID->"1f403633-5545-44ca-8d08-1623598435ee"],
Cell[920339, 18268, 535, 14, 62, "Input",ExpressionUUID->"8e10c4b0-29bb-4c0f-9ab6-00ece12ef129"],
Cell[920877, 18284, 509, 13, 62, "Input",ExpressionUUID->"be3dd7c3-bd5b-41cf-8053-28bf30c70692"],
Cell[921389, 18299, 368, 9, 32, "Input",ExpressionUUID->"39609dd7-bd1a-415b-bdf1-8d2735af3dc8"],
Cell[921760, 18310, 311, 7, 32, "Input",ExpressionUUID->"1c646aa4-b992-41e2-a3c7-c064141584f5"],
Cell[922074, 18319, 182, 3, 36, "Text",ExpressionUUID->"e0f0ad49-f495-4e3f-b349-f59bc66eb0f5"],
Cell[922259, 18324, 398, 7, 32, "Input",ExpressionUUID->"aec55157-1108-4923-8b88-03c13ef755d3"],
Cell[922660, 18333, 247, 4, 32, "Input",ExpressionUUID->"0980355e-162c-4947-bb81-0282776a38f1"],
Cell[922910, 18339, 283, 6, 32, "Input",ExpressionUUID->"51a86447-6afe-48ec-842c-687b4bad6f33"],
Cell[923196, 18347, 243, 4, 32, "Input",ExpressionUUID->"a4e029dc-950b-40e3-b176-4b0a73eefe2a"],
Cell[923442, 18353, 439, 11, 62, "Input",ExpressionUUID->"0598aba0-f356-4f63-b9ad-544a87280ab7"],
Cell[923884, 18366, 210, 3, 32, "Input",ExpressionUUID->"8385208e-d7d2-4fc6-ac57-b023f6ed0f77"],
Cell[924097, 18371, 211, 3, 32, "Input",ExpressionUUID->"8c373eef-564d-4749-8e9d-d705cef4d9e5"],
Cell[924311, 18376, 260, 4, 36, "Text",ExpressionUUID->"342a55a3-4133-4082-88b6-d15994b5671e"],
Cell[924574, 18382, 33435, 668, 76, "WolframAlphaShortInput",ExpressionUUID->"19c71cd5-133b-40be-914d-eb297b06b33f"],
Cell[958012, 19052, 408, 9, 35, "Input",ExpressionUUID->"58c114a4-b89d-4517-b062-58afe8a63432"],
Cell[958423, 19063, 814, 21, 119, "Input",ExpressionUUID->"68c6da89-009a-450e-943d-62e1a319a936"],
Cell[959240, 19086, 514, 13, 65, "Input",ExpressionUUID->"8d05b501-281b-499c-a0d6-b0fad1d7b55d"],
Cell[959757, 19101, 208, 3, 32, "Input",ExpressionUUID->"f5fa4a74-1593-4943-b439-37be8aff67d8"],
Cell[959968, 19106, 263, 4, 32, "Input",ExpressionUUID->"4ed082b8-d882-47f7-8584-779e482d0ba9"],
Cell[960234, 19112, 170, 3, 36, "Text",ExpressionUUID->"38fc37bc-0418-4006-afad-a6212e0bf914"],
Cell[960407, 19117, 320, 7, 35, "Input",ExpressionUUID->"f23b01c6-f810-4c26-9e7d-78c912a72348"],
Cell[960730, 19126, 1455, 37, 180, "Input",ExpressionUUID->"23dc36f7-42f7-4c1f-89fd-2a359a41bb28"],
Cell[962188, 19165, 709, 18, 62, "Input",ExpressionUUID->"25322027-f6fe-4774-9b6d-7dfc3fa302fc"]
}, Open  ]]
}
]
*)

